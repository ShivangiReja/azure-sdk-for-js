{"version":3,"file":"index.js","sources":["../node_modules/assertion-error/index.js","../node_modules/pathval/index.js","../node_modules/chai/lib/chai/utils/flag.js","../node_modules/chai/lib/chai/utils/test.js","../node_modules/type-detect/type-detect.js","../node_modules/chai/lib/chai/utils/expectTypes.js","../node_modules/chai/lib/chai/utils/getActual.js","../node_modules/get-func-name/index.js","../node_modules/chai/lib/chai/utils/getProperties.js","../node_modules/chai/lib/chai/utils/getEnumerableProperties.js","../node_modules/chai/lib/chai/config.js","../node_modules/chai/lib/chai/utils/inspect.js","../node_modules/chai/lib/chai/utils/objDisplay.js","../node_modules/chai/lib/chai/utils/getMessage.js","../node_modules/chai/lib/chai/utils/transferFlags.js","../node_modules/deep-eql/index.js","../node_modules/chai/lib/chai/utils/isProxyEnabled.js","../node_modules/chai/lib/chai/utils/addProperty.js","../node_modules/chai/lib/chai/utils/addLengthGuard.js","../node_modules/chai/lib/chai/utils/proxify.js","../node_modules/chai/lib/chai/utils/addMethod.js","../node_modules/chai/lib/chai/utils/overwriteProperty.js","../node_modules/chai/lib/chai/utils/overwriteMethod.js","../node_modules/chai/lib/chai/utils/addChainableMethod.js","../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","../node_modules/chai/lib/chai/utils/compareByInspect.js","../node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","../node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","../node_modules/check-error/index.js","../node_modules/chai/lib/chai/utils/isNaN.js","../node_modules/chai/lib/chai/utils/index.js","../node_modules/chai/lib/chai/assertion.js","../node_modules/chai/lib/chai/core/assertions.js","../node_modules/chai/lib/chai/interface/expect.js","../node_modules/chai/lib/chai/interface/should.js","../node_modules/chai/lib/chai/interface/assert.js","../node_modules/chai/lib/chai.js","../node_modules/chai/index.js","../node_modules/chai-as-promised/lib/chai-as-promised.js","../node_modules/dotenv/lib/main.js","../lib/eventData.ts","../node_modules/uuid/lib/rng.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v4.js","../lib/log.ts","../lib/linkEntity.ts","../lib/eventPosition.ts","../lib/eventHubReceiver.ts","../lib/streamingReceiver.ts","../lib/util/constants.ts","../lib/managementClient.ts","../lib/connectionContext.ts","../lib/eventHubSender.ts","../lib/batchingReceiver.ts","../lib/iothub/iothubClient.ts","../lib/eventHubClient.ts","../lib/index.ts","../tests/client.spec.ts","../tests/eventdata.spec.ts","../tests/eventPosition.spec.ts","../tests/hubruntime.spec.ts","../tests/iothub.spec.ts","../tests/misc.spec.ts","../tests/receiver.spec.ts","../tests/sender.spec.ts"],"sourcesContent":["/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy &&\n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been', 'is'\n  , 'and', 'has', 'have', 'with'\n  , 'that', 'which', 'at', 'of'\n  , 'same', 'but', 'does', 'still' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n\n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount > n\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= n\n        , 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount < n\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount <= n\n        , 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , errorMessage\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= start && itemsCount <= finish\n        , 'expected #{this} to have a ' + descriptor + ' within ' + range\n        , 'expected #{this} to not have a ' + descriptor + ' within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , nameType = typeof name;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string when using nested syntax',\n          undefined,\n          ssfi\n        );\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string, number, or symbol',\n          undefined,\n          ssfi\n        );\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , descriptor = 'length'\n      , itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(\n        itemsCount == n\n      , 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}'\n      , 'expected #{this} to not have a ' + descriptor + ' of #{act}'\n      , n\n      , itemsCount\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , actual\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === 'number' && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n          message = actual;\n          actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        // Comply with Node's fail([message]) interface\n\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *\n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'Error thrown must have this msg');\n   *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.2.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","\"use strict\";\n/* eslint-disable no-invalid-this */\nlet checkError = require(\"check-error\");\n\nmodule.exports = (chai, utils) => {\n    const Assertion = chai.Assertion;\n    const assert = chai.assert;\n    const proxify = utils.proxify;\n\n    // If we are using a version of Chai that has checkError on it,\n    // we want to use that version to be consistent. Otherwise, we use\n    // what was passed to the factory.\n    if (utils.checkError) {\n        checkError = utils.checkError;\n    }\n\n    function isLegacyJQueryPromise(thenable) {\n        // jQuery promises are Promises/A+-compatible since 3.0.0. jQuery 3.0.0 is also the first version\n        // to define the catch method.\n        return typeof thenable.catch !== \"function\" &&\n               typeof thenable.always === \"function\" &&\n               typeof thenable.done === \"function\" &&\n               typeof thenable.fail === \"function\" &&\n               typeof thenable.pipe === \"function\" &&\n               typeof thenable.progress === \"function\" &&\n               typeof thenable.state === \"function\";\n    }\n\n    function assertIsAboutPromise(assertion) {\n        if (typeof assertion._obj.then !== \"function\") {\n            throw new TypeError(utils.inspect(assertion._obj) + \" is not a thenable.\");\n        }\n        if (isLegacyJQueryPromise(assertion._obj)) {\n            throw new TypeError(\"Chai as Promised is incompatible with thenables of jQuery<3.0.0, sorry! Please \" +\n                                \"upgrade jQuery or use another Promises/A+ compatible library (see \" +\n                                \"http://promisesaplus.com/).\");\n        }\n    }\n\n    function proxifyIfSupported(assertion) {\n        return proxify === undefined ? assertion : proxify(assertion);\n    }\n\n    function method(name, asserter) {\n        utils.addMethod(Assertion.prototype, name, function () {\n            assertIsAboutPromise(this);\n            return asserter.apply(this, arguments);\n        });\n    }\n\n    function property(name, asserter) {\n        utils.addProperty(Assertion.prototype, name, function () {\n            assertIsAboutPromise(this);\n            return proxifyIfSupported(asserter.apply(this, arguments));\n        });\n    }\n\n    function doNotify(promise, done) {\n        promise.then(() => done(), done);\n    }\n\n    // These are for clarity and to bypass Chai refusing to allow `undefined` as actual when used with `assert`.\n    function assertIfNegated(assertion, message, extra) {\n        assertion.assert(true, null, message, extra.expected, extra.actual);\n    }\n\n    function assertIfNotNegated(assertion, message, extra) {\n        assertion.assert(false, message, null, extra.expected, extra.actual);\n    }\n\n    function getBasePromise(assertion) {\n        // We need to chain subsequent asserters on top of ones in the chain already (consider\n        // `eventually.have.property(\"foo\").that.equals(\"bar\")`), only running them after the existing ones pass.\n        // So the first base-promise is `assertion._obj`, but after that we use the assertions themselves, i.e.\n        // previously derived promises, to chain off of.\n        return typeof assertion.then === \"function\" ? assertion : assertion._obj;\n    }\n\n    function getReasonName(reason) {\n        return reason instanceof Error ? reason.toString() : checkError.getConstructorName(reason);\n    }\n\n    // Grab these first, before we modify `Assertion.prototype`.\n\n    const propertyNames = Object.getOwnPropertyNames(Assertion.prototype);\n\n    const propertyDescs = {};\n    for (const name of propertyNames) {\n        propertyDescs[name] = Object.getOwnPropertyDescriptor(Assertion.prototype, name);\n    }\n\n    property(\"fulfilled\", function () {\n        const derivedPromise = getBasePromise(this).then(\n            value => {\n                assertIfNegated(this,\n                                \"expected promise not to be fulfilled but it was fulfilled with #{act}\",\n                                { actual: value });\n                return value;\n            },\n            reason => {\n                assertIfNotNegated(this,\n                                   \"expected promise to be fulfilled but it was rejected with #{act}\",\n                                   { actual: getReasonName(reason) });\n                return reason;\n            }\n        );\n\n        module.exports.transferPromiseness(this, derivedPromise);\n        return this;\n    });\n\n    property(\"rejected\", function () {\n        const derivedPromise = getBasePromise(this).then(\n            value => {\n                assertIfNotNegated(this,\n                                   \"expected promise to be rejected but it was fulfilled with #{act}\",\n                                   { actual: value });\n                return value;\n            },\n            reason => {\n                assertIfNegated(this,\n                                \"expected promise not to be rejected but it was rejected with #{act}\",\n                                { actual: getReasonName(reason) });\n\n                // Return the reason, transforming this into a fulfillment, to allow further assertions, e.g.\n                // `promise.should.be.rejected.and.eventually.equal(\"reason\")`.\n                return reason;\n            }\n        );\n\n        module.exports.transferPromiseness(this, derivedPromise);\n        return this;\n    });\n\n    method(\"rejectedWith\", function (errorLike, errMsgMatcher, message) {\n        let errorLikeName = null;\n        const negate = utils.flag(this, \"negate\") || false;\n\n        // rejectedWith with that is called without arguments is\n        // the same as a plain \".rejected\" use.\n        if (errorLike === undefined && errMsgMatcher === undefined &&\n            message === undefined) {\n            /* eslint-disable no-unused-expressions */\n            return this.rejected;\n            /* eslint-enable no-unused-expressions */\n        }\n\n        if (message !== undefined) {\n            utils.flag(this, \"message\", message);\n        }\n\n        if (errorLike instanceof RegExp || typeof errorLike === \"string\") {\n            errMsgMatcher = errorLike;\n            errorLike = null;\n        } else if (errorLike && errorLike instanceof Error) {\n            errorLikeName = errorLike.toString();\n        } else if (typeof errorLike === \"function\") {\n            errorLikeName = checkError.getConstructorName(errorLike);\n        } else {\n            errorLike = null;\n        }\n        const everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n\n        let matcherRelation = \"including\";\n        if (errMsgMatcher instanceof RegExp) {\n            matcherRelation = \"matching\";\n        }\n\n        const derivedPromise = getBasePromise(this).then(\n            value => {\n                let assertionMessage = null;\n                let expected = null;\n\n                if (errorLike) {\n                    assertionMessage = \"expected promise to be rejected with #{exp} but it was fulfilled with #{act}\";\n                    expected = errorLikeName;\n                } else if (errMsgMatcher) {\n                    assertionMessage = `expected promise to be rejected with an error ${matcherRelation} #{exp} but ` +\n                                       `it was fulfilled with #{act}`;\n                    expected = errMsgMatcher;\n                }\n\n                assertIfNotNegated(this, assertionMessage, { expected, actual: value });\n                return value;\n            },\n            reason => {\n                const errorLikeCompatible = errorLike && (errorLike instanceof Error ?\n                                                        checkError.compatibleInstance(reason, errorLike) :\n                                                        checkError.compatibleConstructor(reason, errorLike));\n\n                const errMsgMatcherCompatible = errMsgMatcher && checkError.compatibleMessage(reason, errMsgMatcher);\n\n                const reasonName = getReasonName(reason);\n\n                if (negate && everyArgIsDefined) {\n                    if (errorLikeCompatible && errMsgMatcherCompatible) {\n                        this.assert(true,\n                                    null,\n                                    \"expected promise not to be rejected with #{exp} but it was rejected \" +\n                                    \"with #{act}\",\n                                    errorLikeName,\n                                    reasonName);\n                    }\n                } else {\n                    if (errorLike) {\n                        this.assert(errorLikeCompatible,\n                                    \"expected promise to be rejected with #{exp} but it was rejected with #{act}\",\n                                    \"expected promise not to be rejected with #{exp} but it was rejected \" +\n                                    \"with #{act}\",\n                                    errorLikeName,\n                                    reasonName);\n                    }\n\n                    if (errMsgMatcher) {\n                        this.assert(errMsgMatcherCompatible,\n                                    `expected promise to be rejected with an error ${matcherRelation} #{exp} but got ` +\n                                    `#{act}`,\n                                    `expected promise not to be rejected with an error ${matcherRelation} #{exp}`,\n                                    errMsgMatcher,\n                                    checkError.getMessage(reason));\n                    }\n                }\n\n                return reason;\n            }\n        );\n\n        module.exports.transferPromiseness(this, derivedPromise);\n        return this;\n    });\n\n    property(\"eventually\", function () {\n        utils.flag(this, \"eventually\", true);\n        return this;\n    });\n\n    method(\"notify\", function (done) {\n        doNotify(getBasePromise(this), done);\n        return this;\n    });\n\n    method(\"become\", function (value, message) {\n        return this.eventually.deep.equal(value, message);\n    });\n\n    // ### `eventually`\n\n    // We need to be careful not to trigger any getters, thus `Object.getOwnPropertyDescriptor` usage.\n    const methodNames = propertyNames.filter(name => {\n        return name !== \"assert\" && typeof propertyDescs[name].value === \"function\";\n    });\n\n    methodNames.forEach(methodName => {\n        Assertion.overwriteMethod(methodName, originalMethod => function () {\n            return doAsserterAsyncAndAddThen(originalMethod, this, arguments);\n        });\n    });\n\n    const getterNames = propertyNames.filter(name => {\n        return name !== \"_obj\" && typeof propertyDescs[name].get === \"function\";\n    });\n\n    getterNames.forEach(getterName => {\n        // Chainable methods are things like `an`, which can work both for `.should.be.an.instanceOf` and as\n        // `should.be.an(\"object\")`. We need to handle those specially.\n        const isChainableMethod = Assertion.prototype.__methods.hasOwnProperty(getterName);\n\n        if (isChainableMethod) {\n            Assertion.overwriteChainableMethod(\n                getterName,\n                originalMethod => function () {\n                    return doAsserterAsyncAndAddThen(originalMethod, this, arguments);\n                },\n                originalGetter => function () {\n                    return doAsserterAsyncAndAddThen(originalGetter, this);\n                }\n            );\n        } else {\n            Assertion.overwriteProperty(getterName, originalGetter => function () {\n                return proxifyIfSupported(doAsserterAsyncAndAddThen(originalGetter, this));\n            });\n        }\n    });\n\n    function doAsserterAsyncAndAddThen(asserter, assertion, args) {\n        // Since we're intercepting all methods/properties, we need to just pass through if they don't want\n        // `eventually`, or if we've already fulfilled the promise (see below).\n        if (!utils.flag(assertion, \"eventually\")) {\n            asserter.apply(assertion, args);\n            return assertion;\n        }\n\n        const derivedPromise = getBasePromise(assertion).then(value => {\n            // Set up the environment for the asserter to actually run: `_obj` should be the fulfillment value, and\n            // now that we have the value, we're no longer in \"eventually\" mode, so we won't run any of this code,\n            // just the base Chai code that we get to via the short-circuit above.\n            assertion._obj = value;\n            utils.flag(assertion, \"eventually\", false);\n\n            return args ? module.exports.transformAsserterArgs(args) : args;\n        }).then(newArgs => {\n            asserter.apply(assertion, newArgs);\n\n            // Because asserters, for example `property`, can change the value of `_obj` (i.e. change the \"object\"\n            // flag), we need to communicate this value change to subsequent chained asserters. Since we build a\n            // promise chain paralleling the asserter chain, we can use it to communicate such changes.\n            return assertion._obj;\n        });\n\n        module.exports.transferPromiseness(assertion, derivedPromise);\n        return assertion;\n    }\n\n    // ### Now use the `Assertion` framework to build an `assert` interface.\n    const originalAssertMethods = Object.getOwnPropertyNames(assert).filter(propName => {\n        return typeof assert[propName] === \"function\";\n    });\n\n    assert.isFulfilled = (promise, message) => (new Assertion(promise, message)).to.be.fulfilled;\n\n    assert.isRejected = (promise, errorLike, errMsgMatcher, message) => {\n        const assertion = new Assertion(promise, message);\n        return assertion.to.be.rejectedWith(errorLike, errMsgMatcher, message);\n    };\n\n    assert.becomes = (promise, value, message) => assert.eventually.deepEqual(promise, value, message);\n\n    assert.doesNotBecome = (promise, value, message) => assert.eventually.notDeepEqual(promise, value, message);\n\n    assert.eventually = {};\n    originalAssertMethods.forEach(assertMethodName => {\n        assert.eventually[assertMethodName] = function (promise) {\n            const otherArgs = Array.prototype.slice.call(arguments, 1);\n\n            let customRejectionHandler;\n            const message = arguments[assert[assertMethodName].length - 1];\n            if (typeof message === \"string\") {\n                customRejectionHandler = reason => {\n                    throw new chai.AssertionError(`${message}\\n\\nOriginal reason: ${utils.inspect(reason)}`);\n                };\n            }\n\n            const returnedPromise = promise.then(\n                fulfillmentValue => assert[assertMethodName].apply(assert, [fulfillmentValue].concat(otherArgs)),\n                customRejectionHandler\n            );\n\n            returnedPromise.notify = done => {\n                doNotify(returnedPromise, done);\n            };\n\n            return returnedPromise;\n        };\n    });\n};\n\nmodule.exports.transferPromiseness = (assertion, promise) => {\n    assertion.then = promise.then.bind(promise);\n};\n\nmodule.exports.transformAsserterArgs = values => values;\n","/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split('\\n').forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(/^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n\n      // default undefined or missing values to empty string\n      let value = keyValueArr[2] || ''\n\n      // expand newlines in quoted values\n      const len = value ? value.length : 0\n      if (len > 0 && value.charAt(0) === '\"' && value.charAt(len - 1) === '\"') {\n        value = value.replace(/\\\\n/gm, '\\n')\n      }\n\n      // remove any surrounding quotes and extra spaces\n      value = value.replace(/(^['\"]|['\"]$)/g, '').trim()\n\n      obj[key] = value\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!process.env.hasOwnProperty(key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.load = config\nmodule.exports.parse = parse\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {\r\n  Message, MessageProperties, MessageHeader, Dictionary, messageHeader, messageProperties,\r\n  MessageAnnotations, DeliveryAnnotations\r\n} from \"rhea-promise\";\r\nimport { Constants } from \"@azure/amqp-common\";\r\n\r\n/**\r\n * Describes the delivery annotations.\r\n * @interface EventHubDeliveryAnnotations\r\n */\r\nexport interface EventHubDeliveryAnnotations extends DeliveryAnnotations {\r\n  /**\r\n   * @property {string} [last_enqueued_offset] The offset of the last event.\r\n   */\r\n  last_enqueued_offset?: string;\r\n  /**\r\n   * @property {number} [last_enqueued_sequence_number] The sequence number of the last event.\r\n   */\r\n  last_enqueued_sequence_number?: number;\r\n  /**\r\n   * @property {number} [last_enqueued_time_utc] The enqueued time of the last event.\r\n   */\r\n  last_enqueued_time_utc?: number;\r\n  /**\r\n   * @property {number} [runtime_info_retrieval_time_utc] The retrieval time of the last event.\r\n   */\r\n  runtime_info_retrieval_time_utc?: number;\r\n  /**\r\n   * @property {string} Any unknown delivery annotations.\r\n   */\r\n  [x: string]: any;\r\n}\r\n\r\n/**\r\n * Map containing message attributes that will be held in the message header.\r\n * @interface EventHubMessageAnnotations\r\n */\r\nexport interface EventHubMessageAnnotations extends MessageAnnotations {\r\n  /**\r\n   * @property {string | null} [x-opt-partition-key] Annotation for the partition key set for the event.\r\n   */\r\n  \"x-opt-partition-key\"?: string | null;\r\n  /**\r\n   * @property {number} [x-opt-sequence-number] Annontation for the sequence number of the event.\r\n   */\r\n  \"x-opt-sequence-number\"?: number;\r\n  /**\r\n   * @property {number} [x-opt-enqueued-time] Annotation for the enqueued time of the event.\r\n   */\r\n  \"x-opt-enqueued-time\"?: number;\r\n  /**\r\n   * @property {string} [x-opt-offset] Annotation for the offset of the event.\r\n   */\r\n  \"x-opt-offset\"?: string;\r\n  /**\r\n   * @property {any} Any other annotation that can be added to the message.\r\n   */\r\n  [x: string]: any;\r\n}\r\n\r\n/**\r\n * Describes the structure of an event to be sent or received from the EventHub.\r\n * @interface EventData\r\n */\r\nexport interface EventData {\r\n  /**\r\n   * @property {MessageHeader} [header] - The message headers.\r\n   */\r\n  header?: MessageHeader;\r\n  /**\r\n   * @property {any} body - The message body that needs to be sent or is received.\r\n   */\r\n  body: any;\r\n  /**\r\n   * @property {Date} [enqueuedTimeUtc] The enqueued time of the event.\r\n   */\r\n  enqueuedTimeUtc?: Date;\r\n  /**\r\n   * @property {string | null} [partitionKey] If specified EventHub will hash this to a partitionId.\r\n   * It guarantees that messages end up in a specific partition on the event hub.\r\n   */\r\n  partitionKey?: string | null;\r\n  /**\r\n   * @property {string} [offset] The offset of the event.\r\n   */\r\n  offset?: string;\r\n  /**\r\n   * @property {number} [sequenceNumber] The sequence number of the event.\r\n   */\r\n  sequenceNumber?: number;\r\n  /**\r\n   * @property {AmqpMessageAnnotations} [annotations] The amqp message attributes.\r\n   */\r\n  annotations?: EventHubMessageAnnotations;\r\n  /**\r\n   * @property {AmqpMessageProperties} [properties] The predefined AMQP properties like message_id, correlation_id, reply_to, etc.\r\n   */\r\n  properties?: MessageProperties;\r\n  /**\r\n   * @property {Dictionary<any>} [applicationProperties] The application specific properties.\r\n   */\r\n  applicationProperties?: Dictionary<any>;\r\n  /**\r\n   * @property {number} [lastSequenceNumber] The last sequence number of the event within the partition stream of the Event Hub.\r\n   */\r\n  lastSequenceNumber?: number;\r\n  /**\r\n   * @property {string} [lastEnqueuedOffset] The offset of the last enqueued event.\r\n   */\r\n  lastEnqueuedOffset?: string;\r\n  /**\r\n   * @property {Date} [lastEnqueuedTime] The enqueued UTC time of the last event.\r\n   */\r\n  lastEnqueuedTime?: Date;\r\n  /**\r\n   * @property {Date} [retrievalTime] The time when the runtime info was retrieved\r\n   */\r\n  retrievalTime?: Date;\r\n  /**\r\n   * @property {AmqpMessage} _raw_amqp_mesage The underlying raw amqp message.\r\n   */\r\n  _raw_amqp_mesage?: Message;\r\n}\r\n\r\n/**\r\n * Describes the methods on the EventData interface.\r\n * @module EventData\r\n */\r\nexport namespace EventData {\r\n\r\n  /**\r\n   * Converts the AMQP message to an EventData.\r\n   * @param {AmqpMessage} msg The AMQP message that needs to be converted to EventData.\r\n   */\r\n  export function fromAmqpMessage(msg: Message): EventData {\r\n    const data: EventData = {\r\n      body: msg.body,\r\n      _raw_amqp_mesage: msg\r\n    };\r\n    if (msg.message_annotations) {\r\n      data.annotations = msg.message_annotations;\r\n      if (msg.message_annotations[Constants.partitionKey] != undefined) data.partitionKey = msg.message_annotations[Constants.partitionKey];\r\n      if (msg.message_annotations[Constants.sequenceNumber] != undefined) data.sequenceNumber = msg.message_annotations[Constants.sequenceNumber];\r\n      if (msg.message_annotations[Constants.enqueuedTime] != undefined) data.enqueuedTimeUtc = new Date(msg.message_annotations[Constants.enqueuedTime] as number);\r\n      if (msg.message_annotations[Constants.offset] != undefined) data.offset = msg.message_annotations[Constants.offset];\r\n    }\r\n    // Since rhea expects message properties as top level properties we will look for them and unflatten them inside properties.\r\n    for (const prop of messageProperties) {\r\n      if ((msg as any)[prop] != undefined) {\r\n        if (!data.properties) {\r\n          data.properties = {};\r\n        }\r\n        (data.properties as any)[prop] = (msg as any)[prop];\r\n      }\r\n    }\r\n    // Since rhea expects message headers as top level properties we will look for them and unflatten them inside header.\r\n    for (const prop of messageHeader) {\r\n      if ((msg as any)[prop] != undefined) {\r\n        if (!data.header) {\r\n          data.header = {};\r\n        }\r\n        (data.header as any)[prop] = (msg as any)[prop];\r\n      }\r\n    }\r\n    if (msg.application_properties) {\r\n      data.applicationProperties = msg.application_properties;\r\n    }\r\n    if (msg.delivery_annotations) {\r\n      data.lastEnqueuedOffset = msg.delivery_annotations.last_enqueued_offset;\r\n      data.lastSequenceNumber = msg.delivery_annotations.last_enqueued_sequence_number;\r\n      data.lastEnqueuedTime = new Date(msg.delivery_annotations.last_enqueued_time_utc as number);\r\n      data.retrievalTime = new Date(msg.delivery_annotations.runtime_info_retrieval_time_utc as number);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Converts an EventData object to an AMQP message.\r\n   * @param {EventData} data The EventData object that needs to be converted to an AMQP message.\r\n   */\r\n  export function toAmqpMessage(data: EventData): Message {\r\n    const msg: Message = {\r\n      body: data.body,\r\n    };\r\n    // As per the AMQP 1.0 spec If the message-annotations or delivery-annotations section is omitted,\r\n    // it is equivalent to a message-annotations section containing anempty map of annotations.\r\n    msg.message_annotations = {};\r\n    msg.delivery_annotations = {};\r\n    if (data.annotations) {\r\n      msg.message_annotations = data.annotations;\r\n    }\r\n    if (data.properties) {\r\n      // Set amqp message properties as top level properties, since rhea sends them as top level properties.\r\n      for (const prop in data.properties) {\r\n        (msg as any)[prop] = (data.properties as any)[prop];\r\n      }\r\n    }\r\n    if (data.applicationProperties) {\r\n      msg.application_properties = data.applicationProperties;\r\n    }\r\n    if (data.partitionKey != undefined) {\r\n      msg.message_annotations[Constants.partitionKey] = data.partitionKey;\r\n      // Event Hub service cannot route messages to a specific partition based on the partition key\r\n      // if AMQP message header is an empty object. Hence we make sure that header is always present\r\n      // with atleast one property. Setting durable to true, helps us achieve that.\r\n      msg.durable = true;\r\n    }\r\n    if (data.sequenceNumber != undefined) {\r\n      msg.message_annotations[Constants.sequenceNumber] = data.sequenceNumber;\r\n    }\r\n    if (data.enqueuedTimeUtc != undefined) {\r\n      msg.message_annotations[Constants.enqueuedTime] = data.enqueuedTimeUtc.getTime();\r\n    }\r\n    if (data.offset != undefined) {\r\n      msg.message_annotations[Constants.offset] = data.offset;\r\n    }\r\n    if (data.lastEnqueuedOffset != undefined) {\r\n      msg.delivery_annotations.last_enqueued_offset = data.lastEnqueuedOffset;\r\n    }\r\n    if (data.lastSequenceNumber != undefined) {\r\n      msg.delivery_annotations.last_enqueued_sequence_number = data.lastSequenceNumber;\r\n    }\r\n    if (data.lastEnqueuedTime != undefined) {\r\n      msg.delivery_annotations.last_enqueued_time_utc = data.lastEnqueuedTime.getTime();\r\n    }\r\n    if (data.retrievalTime != undefined) {\r\n      msg.delivery_annotations.runtime_info_retrieval_time_utc = data.retrievalTime.getTime();\r\n    }\r\n\r\n    if (data.header) {\r\n      // Set amqp message header as top level properties, since rhea expects them as top level properties.\r\n      for (const prop in data.header) {\r\n        (msg as any)[prop] = (data.header as any)[prop];\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  }\r\n}\r\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport debugModule from \"debug\";\r\n/**\r\n * @ignore\r\n * log statements for error\r\n */\r\nexport const error = debugModule(\"azure:event-hubs:error\");\r\n/**\r\n * @ignore\r\n * log statements for management\r\n */\r\nexport const mgmt = debugModule(\"azure:event-hubs:management\");\r\n/**\r\n * @ignore\r\n * log statements for sender\r\n */\r\nexport const sender = debugModule(\"azure:event-hubs:sender\");\r\n/**\r\n * @ignore\r\n * log statements for receiver\r\n */\r\nexport const receiver = debugModule(\"azure:event-hubs:receiver\");\r\n/**\r\n * @ignore\r\n * log statements for receiverbatching\r\n */\r\nexport const batching = debugModule(\"azure:event-hubs:receiverbatching\");\r\n/**\r\n * @ignore\r\n * log statements for receiverstreaming\r\n */\r\nexport const streaming = debugModule(\"azure:event-hubs:receiverstreaming\");\r\n/**\r\n * @ignore\r\n * log statements for linkEntity\r\n */\r\nexport const link = debugModule(\"azure:event-hubs:linkEntity\");\r\n/**\r\n * @ignore\r\n * log statements for connectionContext\r\n */\r\nexport const context = debugModule(\"azure:event-hubs:connectionContext\");\r\n/**\r\n * @ignore\r\n * log statements for client\r\n */\r\nexport const client = debugModule(\"azure:event-hubs:client\");\r\n\r\n/**\r\n * @ignore\r\n * log statements for iothub client\r\n */\r\nexport const iotClient = debugModule(\"azure:event-hubs:iothubClient\");\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport { defaultLock } from \"@azure/amqp-common\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport { Sender, Receiver } from \"rhea-promise\";\r\nimport * as log from \"./log\";\r\nexport interface LinkEntityOptions {\r\n  /**\r\n   * @property {string} [name] The unique name for the entity. If not provided then a guid will be\r\n   * assigned.\r\n   */\r\n  name?: string;\r\n  /**\r\n   * @property {string | number} [partitionId] The partitionId associated with the link entity.\r\n   */\r\n  partitionId?: string | number;\r\n  /**\r\n   * @property {string} address The link entity address in one of the following forms:\r\n   */\r\n  address?: string;\r\n  /**\r\n   * @property {string} audience The link entity token audience in one of the following forms:\r\n   */\r\n  audience?: string;\r\n}\r\n\r\n/**\r\n * Describes the base class for entities like EventHub Sender, Receiver and Management link.\r\n * @ignore\r\n * @class LinkEntity\r\n */\r\nexport class LinkEntity {\r\n  /**\r\n   * @property {string} [name] The unique name for the entity (mostly a guid).\r\n   */\r\n  name: string;\r\n  /**\r\n   * @property {string} address The link entity address in one of the following forms:\r\n   *\r\n   * **Sender**\r\n   * - `\"<hubName>\"`\r\n   * - `\"<hubName>/Partitions/<partitionId>\"`.\r\n   *\r\n   * **Receiver**\r\n   * - `\"<event-hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`.\r\n   *\r\n   * **ManagementClient**\r\n   * -`\"$management\"`.\r\n   */\r\n  address: string;\r\n  /**\r\n   * @property {string} audience The link entity token audience in one of the following forms:\r\n   *\r\n   * **Sender**\r\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"`\r\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`.\r\n   *\r\n   * **Receiver**\r\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`.\r\n   *\r\n   * **ManagementClient**\r\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/$management\"`.\r\n   */\r\n  audience: string;\r\n  /**\r\n   * @property {string | number} [partitionId] The partitionId associated with the link entity.\r\n   */\r\n  partitionId?: string | number;\r\n  /**\r\n   * @property {boolean} isConnecting Indicates whether the link is in the process of connecting\r\n   * (establishing) itself. Default value: `false`.\r\n   */\r\n  isConnecting: boolean = false;\r\n  /**\r\n   * @property {ConnectionContext} _context Provides relevant information about the amqp connection,\r\n   * cbs and $management sessions, token provider, sender and receivers.\r\n   * @protected\r\n   */\r\n  protected _context: ConnectionContext;\r\n  /**\r\n   * @property {NodeJS.Timer} _tokenRenewalTimer The token renewal timer that keeps track of when\r\n   * the Link Entity is due for token renewal.\r\n   * @protected\r\n   */\r\n  protected _tokenRenewalTimer?: NodeJS.Timer;\r\n  /**\r\n   * Creates a new LinkEntity instance.\r\n   * @ignore\r\n   * @constructor\r\n   * @param {ConnectionContext} context The connection context.\r\n   * @param {LinkEntityOptions} [options] Options that can be provided while creating the LinkEntity.\r\n   */\r\n  constructor(context: ConnectionContext, options?: LinkEntityOptions) {\r\n    if (!options) options = {};\r\n    this._context = context;\r\n    this.address = options.address || \"\";\r\n    this.audience = options.audience || \"\";\r\n    this.name = options.name || uuid();\r\n    this.partitionId = options.partitionId;\r\n  }\r\n\r\n  /**\r\n   * Negotiates cbs claim for the LinkEntity.\r\n   * @ignore\r\n   * @protected\r\n   * @param {boolean} [setTokenRenewal] Set the token renewal timer. Default false.\r\n   * @return {Promise<void>} Promise<void>\r\n   */\r\n  protected async _negotiateClaim(setTokenRenewal?: boolean): Promise<void> {\r\n    // Acquire the lock and establish a cbs session if it does not exist on the connection.\r\n    // Although node.js is single threaded, we need a locking mechanism to ensure that a\r\n    // race condition does not happen while creating a shared resource (in this case the\r\n    // cbs session, since we want to have exactly 1 cbs session per connection).\r\n    log.link(\"[%s] Acquiring cbs lock: '%s' for creating the cbs session while creating the %s: \" +\r\n      \"'%s' with address: '%s'.\", this._context.connectionId, this._context.cbsSession.cbsLock,\r\n      this._type, this.name, this.address);\r\n    await defaultLock.acquire(this._context.cbsSession.cbsLock,\r\n      () => { return this._context.cbsSession.init(); });\r\n    const tokenObject = await this._context.tokenProvider.getToken(this.audience);\r\n    log.link(\"[%s] %s: calling negotiateClaim for audience '%s'.\",\r\n      this._context.connectionId, this._type, this.audience);\r\n    // Acquire the lock to negotiate the CBS claim.\r\n    log.link(\"[%s] Acquiring cbs lock: '%s' for cbs auth for %s: '%s' with address '%s'.\",\r\n      this._context.connectionId, this._context.negotiateClaimLock, this._type, this.name, this.address);\r\n    await defaultLock.acquire(this._context.negotiateClaimLock, () => {\r\n      return this._context.cbsSession.negotiateClaim(this.audience, tokenObject);\r\n    });\r\n    log.link(\"[%s] Negotiated claim for %s '%s' with with address: %s\",\r\n      this._context.connectionId, this._type, this.name, this.address);\r\n    if (setTokenRenewal) {\r\n      await this._ensureTokenRenewal();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ensures that the token is renewed within the predefined renewal margin.\r\n   * @ignore\r\n   * @protected\r\n   * @returns {void}\r\n   */\r\n  protected async _ensureTokenRenewal(): Promise<void> {\r\n    const tokenValidTimeInSeconds = this._context.tokenProvider.tokenValidTimeInSeconds;\r\n    const tokenRenewalMarginInSeconds = this._context.tokenProvider.tokenRenewalMarginInSeconds;\r\n    const nextRenewalTimeout = (tokenValidTimeInSeconds - tokenRenewalMarginInSeconds) * 1000;\r\n    this._tokenRenewalTimer = setTimeout(async () => {\r\n      try {\r\n        await this._negotiateClaim(true);\r\n      } catch (err) {\r\n        log.error(\"[%s] %s '%s' with address %s, an error occurred while renewing the token: %O\",\r\n          this._context.connectionId, this._type, this.name, this.address, err);\r\n      }\r\n    }, nextRenewalTimeout);\r\n    log.link(\"[%s] %s '%s' with address %s, has next token renewal in %d seconds @(%s).\",\r\n      this._context.connectionId, this._type, this.name, this.address, nextRenewalTimeout / 1000,\r\n      new Date(Date.now() + nextRenewalTimeout).toString());\r\n  }\r\n\r\n  /**\r\n   * Closes the Sender|Receiver link and it's underlying session and also removes it from the\r\n   * internal map.\r\n   * @ignore\r\n   * @param {Sender | Receiver} [link] The Sender or Receiver link that needs to be closed and\r\n   * removed.\r\n   */\r\n  protected async _closeLink(link?: Sender | Receiver): Promise<void> {\r\n    clearTimeout(this._tokenRenewalTimer as NodeJS.Timer);\r\n    if (link) {\r\n      try {\r\n        // This should take care of closing the link and it's underlying session. This should also\r\n        // remove them from the internal map.\r\n        await link.close();\r\n        log.link(\"[%s] %s '%s' with address '%s' closed.\", this._context.connectionId, this._type,\r\n          this.name, this.address);\r\n      } catch (err) {\r\n        log.error(\"[%s] An error occurred while closing the %s '%s' with address '%s': %O\",\r\n          this._context.connectionId, this._type, this.name, this.address, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Provides the current type of the LinkEntity.\r\n   * @return {string} The entity type.\r\n   */\r\n  private get _type(): string {\r\n    let result = \"LinkEntity\";\r\n    if ((this as any).constructor && (this as any).constructor.name) {\r\n      result = (this as any).constructor.name;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { translate, Constants, ErrorNameConditionMapper } from \"@azure/amqp-common\";\r\n\r\n/**\r\n * Describes the options that can be set while creating an EventPosition.\r\n * @ignore\r\n * @interface EventPositionOptions\r\n */\r\nexport interface EventPositionOptions {\r\n  /**\r\n   * @property {string} [offset] The offset of the event at the position. It can be undefined\r\n   * if the position is just created from a sequence number or an enqueued time.\r\n   */\r\n  offset?: string;\r\n  /**\r\n   * @property {boolean} isInclusive Indicates if the current event at the specified offset is\r\n   * included or not. It is only applicable if offset is set. Default value: false.\r\n   */\r\n  isInclusive?: boolean;\r\n  /**\r\n   * @property {Date|number} [enqueuedTime] The enqueued time of the event at the position. It can be undefined\r\n   * if the position is just created from a sequence number or an offset.\r\n   */\r\n  enqueuedTime?: Date | number;\r\n\r\n  /**\r\n   * @property {number} [sequenceNumber] The sequence number of the event at the position. It can be undefined\r\n   * if the position is just created from an enqueued time or an offset.\r\n   */\r\n  sequenceNumber?: number;\r\n\r\n  /**\r\n   * @property {string} [customFilter] The custom filter expression that needs to be set on the receiver.\r\n   */\r\n  customFilter?: string;\r\n}\r\n\r\n/**\r\n * Represents options can be set during the creation of a event hub receiver.\r\n * Defines a position of an @link~EventData in the event hub partition.\r\n * @class EventPosition\r\n */\r\nexport class EventPosition {\r\n  /**\r\n   * @property {string} startOfStream The offset from which events would be received: `\"-1\"`.\r\n   * @static\r\n   * @readonly\r\n   */\r\n  static readonly startOfStream: string = \"-1\";\r\n  /**\r\n   * @property {string} endOfStream The offset from which events would be received: `\"@latest\"`.\r\n   * @static\r\n   * @readonly\r\n   */\r\n  static readonly endOfStream: string = \"@latest\";\r\n  /**\r\n   * @property {string} [offset] The offset of the event at the position. It can be undefined\r\n   * if the position is just created from a sequence number or an enqueued time.\r\n   */\r\n  offset?: string;\r\n  /**\r\n   * @property {boolean} isInclusive Indicates if the current event at the specified offset is\r\n   * included or not. It is only applicable if offset is set. Default value: false.\r\n   */\r\n  isInclusive: boolean = false;\r\n  /**\r\n   * @property {Date|number} [enqueuedTime] The enqueued time of the event at the position. It can be undefined\r\n   * if the position is just created from a sequence number or an offset.\r\n   */\r\n  enqueuedTime?: Date | number;\r\n\r\n  /**\r\n   * @property {number} [sequenceNumber] The sequence number of the event at the position. It can be undefined\r\n   * if the position is just created from an enqueued time or an offset.\r\n   */\r\n  sequenceNumber?: number;\r\n\r\n  /**\r\n   * @property {string} [customFilter] The custom filter expression that needs to be set on the receiver.\r\n   */\r\n  customFilter?: string;\r\n\r\n  constructor(options?: EventPositionOptions) {\r\n    if (options) {\r\n      this.offset = options.offset;\r\n      this.enqueuedTime = options.enqueuedTime;\r\n      this.sequenceNumber = options.sequenceNumber;\r\n      this.isInclusive = options.isInclusive || false;\r\n      this.customFilter = options.customFilter;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the expression (filter clause) that needs to be set on the source.\r\n   * @return {string} filterExpression\r\n   */\r\n  getExpression(): string {\r\n    let result;\r\n    // order of preference\r\n    if (this.offset != undefined) {\r\n      result = this.isInclusive ?\r\n        `${Constants.offsetAnnotation} >= '${this.offset}'` :\r\n        `${Constants.offsetAnnotation} > '${this.offset}'`;\r\n    } else if (this.sequenceNumber != undefined) {\r\n      result = this.isInclusive ?\r\n        `${Constants.sequenceNumberAnnotation} >= '${this.sequenceNumber}'` :\r\n        `${Constants.sequenceNumberAnnotation} > '${this.sequenceNumber}'`;\r\n    } else if (this.enqueuedTime != undefined) {\r\n      const time = (this.enqueuedTime instanceof Date) ? this.enqueuedTime.getTime() : this.enqueuedTime;\r\n      result = `${Constants.enqueuedTimeAnnotation} > '${time}'`;\r\n    } else if (this.customFilter != undefined) {\r\n      result = this.customFilter;\r\n    }\r\n\r\n    if (!result) {\r\n      throw translate({\r\n        condition: ErrorNameConditionMapper.ArgumentError,\r\n        description: \"No starting position was set in the EventPosition.\"\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates a position at the given offset.\r\n   * @param {string} offset The offset of the data relative to the Event Hub partition stream.\r\n   * The offset is a marker or identifier for an event within the Event Hubs stream.\r\n   * The identifier is unique within a partition of the Event Hubs stream.\r\n   * @param {boolean} isInclusive If true, the specified event is included;\r\n   * otherwise the next event is returned. Default: false.\r\n   * @return {EventPosition} EventPosition\r\n   */\r\n  static fromOffset(offset: string, isInclusive?: boolean): EventPosition {\r\n    if (!offset || typeof offset !== \"string\") {\r\n      throw new Error(\"'offset' is a required parameter and must be a non-empty string.\");\r\n    }\r\n    return new EventPosition({ offset: offset, isInclusive: isInclusive });\r\n  }\r\n\r\n  /**\r\n   * Creates a position at the given sequence number.\r\n   * @param {number} sequenceNumber The logical sequence number of the event within the partition stream of the Event Hub.\r\n   * @param {boolean} isInclusive If true, the specified event is included;\r\n   * otherwise the next event is returned. Default false.\r\n   * @return {EventPosition} EventPosition\r\n   */\r\n  static fromSequenceNumber(sequenceNumber: number, isInclusive?: boolean): EventPosition {\r\n    if (sequenceNumber == undefined || typeof sequenceNumber !== \"number\") {\r\n      throw new Error(\"'sequenceNumber' is a required parameter and must be of type 'number'.\");\r\n    }\r\n    return new EventPosition({ sequenceNumber: sequenceNumber, isInclusive: isInclusive });\r\n  }\r\n\r\n  /**\r\n   * Creates a position at the given enqueued time.\r\n   * @param {Date | number} enqueuedTime The enqueue time. This value represents the actual time of enqueuing the message.\r\n   * @param {boolean} isInclusive If true, the specified event is included; otherwise the next event is returned.\r\n   * @return {EventPosition} EventPosition\r\n   */\r\n  static fromEnqueuedTime(enqueuedTime: Date | number): EventPosition {\r\n    if (enqueuedTime == undefined || (typeof enqueuedTime !== \"number\" && !(enqueuedTime instanceof Date))) {\r\n      throw new Error(\"'enqueuedTime' is a required parameter and must be an instance of 'Date' or of type 'number'.\");\r\n    }\r\n    return new EventPosition({ enqueuedTime: enqueuedTime });\r\n  }\r\n\r\n  /**\r\n   * Creates a position based on the given custom filter.\r\n   * @param {string} customFilter The cutom filter expression that needs to be applied on the receiver. This should be used\r\n   * only when one of the other methods `fromOffset()`, `fromSequenceNumber()`, `fromEnqueuedTime()` is not applicable for\r\n   * your scenario.\r\n   */\r\n  static withCustomFilter(customFilter: string): EventPosition {\r\n    if (!customFilter || typeof customFilter !== \"string\") {\r\n      throw new Error(\"'customFilter' is a required parameter and must be a non-empty string.\");\r\n    }\r\n    return new EventPosition({ customFilter: customFilter });\r\n  }\r\n\r\n  /**\r\n   * Returns the position for the start of a stream. Provide this position in receiver creation to\r\n   * start receiving from the first available event in the partition.\r\n   * @return {EventPosition} EventPosition\r\n   */\r\n  static fromStart(): EventPosition {\r\n    return EventPosition.fromOffset(EventPosition.startOfStream);\r\n  }\r\n\r\n  /**\r\n   * Returns the position for the end of a stream. Provide this position in receiver creation to\r\n   * start receiving from the next available event in the partition after the receiver is created.\r\n   * @return {EventPosition} EventPosition\r\n   */\r\n  static fromEnd(): EventPosition {\r\n    return EventPosition.fromOffset(EventPosition.endOfStream);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport * as log from \"./log\";\r\nimport {\r\n  Receiver, OnAmqpEvent, EventContext, ReceiverOptions, types, AmqpError\r\n} from \"rhea-promise\";\r\nimport {\r\n  translate, Constants, MessagingError, retry, RetryOperationType, RetryConfig\r\n} from \"@azure/amqp-common\";\r\nimport { EventData } from \"./eventData\";\r\nimport { ReceiveOptions } from \"./eventHubClient\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport { LinkEntity } from \"./linkEntity\";\r\nimport { EventPosition } from \"./eventPosition\";\r\n\r\ninterface CreateReceiverOptions {\r\n  onMessage: OnAmqpEvent;\r\n  onError: OnAmqpEvent;\r\n  onClose: OnAmqpEvent;\r\n  onSessionError: OnAmqpEvent;\r\n  onSessionClose: OnAmqpEvent;\r\n  newName?: boolean;\r\n  eventPosition?: EventPosition;\r\n}\r\n\r\n/**\r\n * Represents the approximate receiver runtime information for a logical partition of an Event Hub.\r\n * @interface ReceiverRuntimeInfo\r\n */\r\nexport interface ReceiverRuntimeInfo {\r\n  /**\r\n   * @property {string} partitionId The parition identifier.\r\n   */\r\n  partitionId: string;\r\n  /**\r\n   * @property {number} lastSequenceNumber The logical sequence number of the event.\r\n   */\r\n  lastSequenceNumber?: number;\r\n  /**\r\n   * @property {Date} lastEnqueuedTimeUtc The enqueued time of the last event.\r\n   */\r\n  lastEnqueuedTimeUtc?: Date;\r\n  /**\r\n   * @property {string} lastEnqueuedOffset The offset of the last enqueued event.\r\n   */\r\n  lastEnqueuedOffset?: string;\r\n  /**\r\n   * @property {Date} retrievalTime The enqueued time of the last event.\r\n   */\r\n  retrievalTime?: Date;\r\n}\r\n\r\n/**\r\n * Describes the checkoint information.\r\n * @interface CheckpointData\r\n */\r\nexport interface CheckpointData {\r\n  /**\r\n   * @property {Date} enqueuedTimeUtc The enqueued time of the event.\r\n   */\r\n  enqueuedTimeUtc: Date;\r\n  /**\r\n   * @property {string} offset The offset of the event to be checked in.\r\n   */\r\n  offset: string;\r\n  /**\r\n   * @property {string} sequenceNumber The sequence number of the event to be checked in.\r\n   */\r\n  sequenceNumber: number;\r\n}\r\n\r\n/**\r\n * Describes the message handler signature.\r\n */\r\nexport type OnMessage = (eventData: EventData) => void;\r\n\r\n/**\r\n * Describes the error handler signature.\r\n */\r\nexport type OnError = (error: MessagingError | Error) => void;\r\n\r\n/**\r\n * Describes the EventHubReceiver that will receive event data from EventHub.\r\n * @class EventHubReceiver\r\n * @ignore\r\n */\r\nexport class EventHubReceiver extends LinkEntity {\r\n  /**\r\n   * @property {string} consumerGroup The EventHub consumer group from which the receiver will\r\n   * receive messages. (Default: \"default\").\r\n   */\r\n  consumerGroup: string;\r\n  /**\r\n   * @property {ReceiverRuntimeInfo} runtimeInfo The receiver runtime info.\r\n   */\r\n  runtimeInfo: ReceiverRuntimeInfo;\r\n  /**\r\n   * @property {number} [epoch] The Receiver epoch.\r\n   */\r\n  epoch?: number;\r\n  /**\r\n   * @property {string} [identifier] The Receiver identifier\r\n   */\r\n  identifier?: string;\r\n  /**\r\n   * @property {ReceiveOptions} [options] Optional properties that can be set while creating\r\n   * the EventHubReceiver.\r\n   */\r\n  options: ReceiveOptions;\r\n  /**\r\n   * @property {number} [prefetchCount] The number of messages that the receiver can fetch/receive\r\n   * initially. Defaults to 1000.\r\n   */\r\n  prefetchCount?: number = Constants.defaultPrefetchCount;\r\n  /**\r\n   * @property {boolean} receiverRuntimeMetricEnabled Indicates whether receiver runtime metric\r\n   * is enabled. Default: false.\r\n   */\r\n  receiverRuntimeMetricEnabled: boolean = false;\r\n  /**\r\n   * @property {Receiver} [_receiver] The AMQP receiver link.\r\n   * @protected\r\n   */\r\n  protected _receiver?: Receiver;\r\n  /**\r\n   * @property {OnMessage} _onMessage The message handler provided by the user that will be wrapped\r\n   * inside _onAmqpMessage.\r\n   * @protected\r\n   */\r\n  protected _onMessage?: OnMessage;\r\n  /**\r\n   * @property {OnError} _onError The error handler provided by the user that will be wrapped\r\n   * inside _onAmqpError.\r\n   * @protected\r\n   */\r\n  protected _onError?: OnError;\r\n  /**\r\n   * @property {OnAmqpEvent} _onAmqpError The message handler that will be set as the handler on the\r\n   * underlying rhea receiver for the \"message\" event.\r\n   * @protected\r\n   */\r\n  protected _onAmqpMessage: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onAmqpError The message handler that will be set as the handler on the\r\n   * underlying rhea receiver for the \"receiver_error\" event.\r\n   * @protected\r\n   */\r\n  protected _onAmqpError: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onAmqpClose The message handler that will be set as the handler on the\r\n   * underlying rhea receiver for the \"receiver_close\" event.\r\n   * @protected\r\n   */\r\n  protected _onAmqpClose: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onSessionError The message handler that will be set as the handler on\r\n   * the underlying rhea receiver's session for the \"session_error\" event.\r\n   * @protected\r\n   */\r\n  protected _onSessionError: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onSessionClose The message handler that will be set as the handler on\r\n   * the underlying rhea receiver's session for the \"session_close\" event.\r\n   * @protected\r\n   */\r\n  protected _onSessionClose: OnAmqpEvent;\r\n  /**\r\n   * @property {CheckpointData} _checkpoint Describes metadata about the last message received.\r\n   * This is used as the offset to receive messages from incase of recovery.\r\n   */\r\n  protected _checkpoint: CheckpointData;\r\n\r\n  /**\r\n   * Instantiate a new receiver from the AMQP `Receiver`. Used by `EventHubClient`.\r\n   * @ignore\r\n   * @constructor\r\n   * @param {EventHubClient} client                            The EventHub client.\r\n   * @param {string} partitionId                               Partition ID from which to receive.\r\n   * @param {ReceiveOptions} [options]                         Receiver options.\r\n   */\r\n  constructor(context: ConnectionContext, partitionId: string | number, options?: ReceiveOptions) {\r\n    super(context, { partitionId: partitionId, name: options ? options.name : undefined });\r\n    if (!options) options = {};\r\n    this.consumerGroup = options.consumerGroup ? options.consumerGroup : Constants.defaultConsumerGroup;\r\n    this.address = context.config.getReceiverAddress(partitionId, this.consumerGroup);\r\n    this.audience = context.config.getReceiverAudience(partitionId, this.consumerGroup);\r\n    this.prefetchCount = options.prefetchCount != undefined ? options.prefetchCount : Constants.defaultPrefetchCount;\r\n    this.epoch = options.epoch;\r\n    this.identifier = options.identifier;\r\n    this.options = options;\r\n    this.receiverRuntimeMetricEnabled = options.enableReceiverRuntimeMetric || false;\r\n    this.runtimeInfo = {\r\n      partitionId: `${partitionId}`\r\n    };\r\n    this._checkpoint = {\r\n      enqueuedTimeUtc: new Date(),\r\n      offset: \"0\",\r\n      sequenceNumber: -1\r\n    };\r\n    this._onAmqpMessage = (context: EventContext) => {\r\n      const evData = EventData.fromAmqpMessage(context.message!);\r\n      evData.body = this._context.dataTransformer.decode(context.message!.body);\r\n      this._checkpoint = {\r\n        enqueuedTimeUtc: evData.enqueuedTimeUtc!,\r\n        offset: evData.offset!,\r\n        sequenceNumber: evData.sequenceNumber!\r\n      };\r\n      if (this.receiverRuntimeMetricEnabled && evData) {\r\n        this.runtimeInfo.lastSequenceNumber = evData.lastSequenceNumber;\r\n        this.runtimeInfo.lastEnqueuedTimeUtc = evData.lastEnqueuedTime;\r\n        this.runtimeInfo.lastEnqueuedOffset = evData.lastEnqueuedOffset;\r\n        this.runtimeInfo.retrievalTime = evData.retrievalTime;\r\n        log.receiver(\"[%s] RuntimeInfo of Receiver '%s' is %O\", this._context.connectionId,\r\n          this.name, this.runtimeInfo);\r\n      }\r\n      this._onMessage!(evData);\r\n    };\r\n\r\n    this._onAmqpError = (context: EventContext) => {\r\n      const receiver = this._receiver || context.receiver!;\r\n      const receiverError = context.receiver && context.receiver.error;\r\n      if (receiverError) {\r\n        const ehError = translate(receiverError);\r\n        log.error(\"[%s] An error occurred for Receiver '%s': %O.\",\r\n          this._context.connectionId, this.name, ehError);\r\n        if (!ehError.retryable) {\r\n          if (receiver && !receiver.isItselfClosed()) {\r\n            log.error(\"[%s] Since the user did not close the receiver and the error is not \" +\r\n              \"retryable, we let the user know about it by calling the user's error handler.\",\r\n              this._context.connectionId);\r\n            this._onError!(ehError);\r\n          } else {\r\n            log.error(\"[%s] The received error is not retryable. However, the receiver was \" +\r\n              \"closed by the user. Hence not notifying the user's error handler.\",\r\n              this._context.connectionId);\r\n          }\r\n        } else {\r\n          log.error(\"[%s] Since received error is retryable, we will NOT notify the user's \" +\r\n            \"error handler.\", this._context.connectionId);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._onSessionError = (context: EventContext) => {\r\n      const receiver = this._receiver || context.receiver!;\r\n      const sessionError = context.session && context.session.error;\r\n      if (sessionError) {\r\n        const ehError = translate(sessionError);\r\n        log.error(\"[%s] An error occurred on the session for Receiver '%s': %O.\",\r\n          this._context.connectionId, this.name, ehError);\r\n        if (receiver && !receiver.isSessionItselfClosed() && !ehError.retryable) {\r\n          log.error(\"[%s] Since the user did not close the receiver and the session error is not \" +\r\n            \"retryable, we let the user know about it by calling the user's error handler.\",\r\n            this._context.connectionId);\r\n          this._onError!(ehError);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._onAmqpClose = async (context: EventContext) => {\r\n      const receiverError = context.receiver && context.receiver.error;\r\n      const receiver = this._receiver || context.receiver!;\r\n      if (receiverError) {\r\n        log.error(\"[%s] 'receiver_close' event occurred for receiver '%s' with address '%s'. \" +\r\n          \"The associated error is: %O\", this._context.connectionId, this.name,\r\n          this.address, receiverError);\r\n      }\r\n      if (receiver && !receiver.isItselfClosed()) {\r\n        if (!this.isConnecting) {\r\n          log.error(\"[%s] 'receiver_close' event occurred on the receiver '%s' with address '%s' \" +\r\n            \"and the sdk did not initiate this. The receiver is not reconnecting. Hence, calling \" +\r\n            \"detached from the _onAmqpClose() handler.\", this._context.connectionId, this.name,\r\n            this.address);\r\n          await this.detached(receiverError);\r\n        } else {\r\n          log.error(\"[%s] 'receiver_close' event occurred on the receiver '%s' with address '%s' \" +\r\n            \"and the sdk did not initate this. Moreover the receiver is already re-connecting. \" +\r\n            \"Hence not calling detached from the _onAmqpClose() handler.\",\r\n            this._context.connectionId, this.name, this.address);\r\n        }\r\n      } else {\r\n        log.error(\"[%s] 'receiver_close' event occurred on the receiver '%s' with address '%s' \" +\r\n          \"because the sdk initiated it. Hence not calling detached from the _onAmqpClose\" +\r\n          \"() handler.\", this._context.connectionId, this.name, this.address);\r\n      }\r\n    };\r\n\r\n    this._onSessionClose = async (context: EventContext) => {\r\n      const receiver = this._receiver || context.receiver!;\r\n      const sessionError = context.session && context.session.error;\r\n      if (sessionError) {\r\n        log.error(\"[%s] 'session_close' event occurred for receiver '%s' with address '%s'. \" +\r\n          \"The associated error is: %O\", this._context.connectionId, this.name,\r\n          this.address, sessionError);\r\n      }\r\n\r\n      if (receiver && !receiver.isSessionItselfClosed()) {\r\n        if (!this.isConnecting) {\r\n          log.error(\"[%s] 'session_close' event occurred on the session of receiver '%s' with \" +\r\n            \"address '%s' and the sdk did not initiate this. Hence calling detached from the \" +\r\n            \"_onSessionClose() handler.\", this._context.connectionId, this.name, this.address);\r\n          await this.detached(sessionError);\r\n        } else {\r\n          log.error(\"[%s] 'session_close' event occurred on the session of receiver '%s' with \" +\r\n            \"address '%s' and the sdk did not initiate this. Moreover the receiver is already \" +\r\n            \"re-connecting. Hence not calling detached from the _onSessionClose() handler.\",\r\n            this._context.connectionId, this.name, this.address);\r\n        }\r\n      } else {\r\n        log.error(\"[%s] 'session_close' event occurred on the session of receiver '%s' with address \" +\r\n          \"'%s' because the sdk initiated it. Hence not calling detached from the _onSessionClose\" +\r\n          \"() handler.\", this._context.connectionId, this.name, this.address);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Will reconnect the receiver link if necessary.\r\n   * @ignore\r\n   * @param {AmqpError | Error} [receiverError] The receiver error if any.\r\n   * @returns {Promise<void>} Promise<void>.\r\n   */\r\n  async detached(receiverError?: AmqpError | Error): Promise<void> {\r\n    try {\r\n      const wasCloseInitiated = this._receiver && this._receiver.isItselfClosed();\r\n      // Clears the token renewal timer. Closes the link and its session if they are open.\r\n      // Removes the link and its session if they are present in rhea's cache.\r\n      await this._closeLink(this._receiver);\r\n      // We should attempt to reopen only when the receiver(sdk) did not initiate the close\r\n      let shouldReopen = false;\r\n      if (receiverError && !wasCloseInitiated) {\r\n        const translatedError = translate(receiverError);\r\n        if (translatedError.retryable) {\r\n          shouldReopen = true;\r\n          log.error(\"[%s] close() method of Receiver '%s' with address '%s' was not called. There \" +\r\n            \"was an accompanying error and it is retryable. This is a candidate for re-establishing \" +\r\n            \"the receiver link.\", this._context.connectionId, this.name, this.address);\r\n        } else {\r\n          log.error(\"[%s] close() method of Receiver '%s' with address '%s' was not called. There \" +\r\n            \"was an accompanying error and it is NOT retryable. Hence NOT re-establishing \" +\r\n            \"the receiver link.\", this._context.connectionId, this.name, this.address);\r\n        }\r\n      } else if (!wasCloseInitiated) {\r\n        shouldReopen = true;\r\n        log.error(\"[%s] close() method of Receiver '%s' with address '%s' was not called. \" +\r\n          \"There was no accompanying error as well. This is a candidate for re-establishing \" +\r\n          \"the receiver link.\", this._context.connectionId, this.name, this.address);\r\n      } else {\r\n        const state: any = {\r\n          wasCloseInitiated: wasCloseInitiated,\r\n          receiverError: receiverError,\r\n          _receiver: this._receiver\r\n        };\r\n        log.error(\"[%s] Something is busted. State of Receiver '%s' with address '%s' is: %O\",\r\n          this._context.connectionId, this.name, this.address, state);\r\n      }\r\n      if (shouldReopen) {\r\n        const rcvrOptions: CreateReceiverOptions = {\r\n          onMessage: this._onAmqpMessage,\r\n          onError: this._onAmqpError,\r\n          onClose: this._onAmqpClose,\r\n          onSessionError: this._onSessionError,\r\n          onSessionClose: this._onSessionClose,\r\n          newName: true // provide a new name to the link while re-connecting it. This ensures that\r\n          // the service does not send an error stating that the link is still open.\r\n        };\r\n        // reconnect the receiver link with sequenceNumber of the last received message as the offset\r\n        // if messages were received by the receiver before it got disconnected.\r\n        if (this._checkpoint.sequenceNumber > - 1) {\r\n          rcvrOptions.eventPosition = EventPosition.fromSequenceNumber(this._checkpoint.sequenceNumber);\r\n        }\r\n        const options: ReceiverOptions = this._createReceiverOptions(rcvrOptions);\r\n        // shall retry forever at an interval of 15 seconds if the error is a retryable error\r\n        // else bail out when the error is not retryable or the oepration succeeds.\r\n        const config: RetryConfig<void> = {\r\n          operation: () => this._init(options),\r\n          connectionId: this._context.connectionId,\r\n          operationType: RetryOperationType.receiverLink,\r\n          times: Constants.defaultConnectionRetryAttempts,\r\n          delayInSeconds: 15\r\n        };\r\n        await retry<void>(config);\r\n      }\r\n    } catch (err) {\r\n      log.error(\"[%s] An error occurred while processing detached() of Receiver '%s' with address \" +\r\n        \"'%s': %O\", this._context.connectionId, this.name, this.address, err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the underlying AMQP receiver.\r\n   * @ignore\r\n   * @returns {Promise<void>}\r\n   */\r\n  async close(): Promise<void> {\r\n    if (this._receiver) {\r\n      const receiverLink = this._receiver;\r\n      this._deleteFromCache();\r\n      await this._closeLink(receiverLink);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether the AMQP receiver link is open. If open then returns true else returns false.\r\n   * @ignore\r\n   * @return {boolean} boolean\r\n   */\r\n  isOpen(): boolean {\r\n    const result: boolean = this._receiver! && this._receiver!.isOpen();\r\n    log.error(\"[%s] Receiver '%s' with address '%s' is open? -> %s\", this._context.connectionId,\r\n      this.name, this.address, result);\r\n    return result;\r\n  }\r\n\r\n  protected _deleteFromCache(): void {\r\n    this._receiver = undefined;\r\n    delete this._context.receivers[this.name];\r\n    log.error(\"[%s] Deleted the receiver '%s' from the client cache.\",\r\n      this._context.connectionId, this.name);\r\n  }\r\n\r\n  /**\r\n   * Creates a new AMQP receiver under a new AMQP session.\r\n   * @ignore\r\n   * @returns {Promise<void>}\r\n   */\r\n  protected async _init(options?: ReceiverOptions): Promise<void> {\r\n    try {\r\n      if (!this.isOpen() && !this.isConnecting) {\r\n        log.error(\"[%s] The receiver '%s' with address '%s' is not open and is not currently \" +\r\n          \"establishing itself. Hence let's try to connect.\", this._context.connectionId,\r\n          this.name, this.address);\r\n        this.isConnecting = true;\r\n        await this._negotiateClaim();\r\n        if (!options) {\r\n          options = this._createReceiverOptions({\r\n            onMessage: this._onAmqpMessage,\r\n            onError: this._onAmqpError,\r\n            onClose: this._onAmqpClose,\r\n            onSessionError: this._onSessionError,\r\n            onSessionClose: this._onSessionClose,\r\n          });\r\n        }\r\n        log.error(\"[%s] Trying to create receiver '%s' with options %O\",\r\n          this._context.connectionId, this.name, options);\r\n\r\n        this._receiver = await this._context.connection.createReceiver(options);\r\n        this.isConnecting = false;\r\n        log.error(\"[%s] Receiver '%s' with address '%s' has established itself.\",\r\n          this._context.connectionId, this.name, this.address);\r\n        log.receiver(\"Promise to create the receiver resolved. Created receiver with name: \", this.name);\r\n        log.receiver(\"[%s] Receiver '%s' created with receiver options: %O\",\r\n          this._context.connectionId, this.name, options);\r\n        // It is possible for someone to close the receiver and then start it again.\r\n        // Thus make sure that the receiver is present in the client cache.\r\n        if (!this._context.receivers[this.name]) this._context.receivers[this.name] = this;\r\n        await this._ensureTokenRenewal();\r\n      } else {\r\n        log.error(\"[%s] The receiver '%s' with address '%s' is open -> %s and is connecting \" +\r\n          \"-> %s. Hence not reconnecting.\", this._context.connectionId, this.name, this.address,\r\n          this.isOpen(), this.isConnecting);\r\n      }\r\n    } catch (err) {\r\n      this.isConnecting = false;\r\n      err = translate(err);\r\n      log.error(\"[%s] An error occured while creating the receiver '%s': %O\",\r\n        this._context.connectionId, this.name, err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the options that need to be specified while creating an AMQP receiver link.\r\n   * @ignore\r\n   */\r\n  protected _createReceiverOptions(options: CreateReceiverOptions): ReceiverOptions {\r\n    if (options.newName) this.name = `${uuid()}`;\r\n    const rcvrOptions: ReceiverOptions = {\r\n      name: this.name,\r\n      autoaccept: true,\r\n      source: {\r\n        address: this.address\r\n      },\r\n      credit_window: this.prefetchCount,\r\n      onMessage: options.onMessage || this._onAmqpMessage,\r\n      onError: options.onError || this._onAmqpError,\r\n      onClose: options.onClose || this._onAmqpClose,\r\n      onSessionError: options.onSessionError || this._onSessionError,\r\n      onSessionClose: options.onSessionClose || this._onSessionClose\r\n    };\r\n    if (this.epoch !== undefined && this.epoch !== null) {\r\n      if (!rcvrOptions.properties) rcvrOptions.properties = {};\r\n      rcvrOptions.properties[Constants.attachEpoch] = types.wrap_long(this.epoch);\r\n    }\r\n    if (this.identifier) {\r\n      if (!rcvrOptions.properties) rcvrOptions.properties = {};\r\n      rcvrOptions.properties[Constants.receiverIdentifierName] = this.identifier;\r\n    }\r\n    if (this.receiverRuntimeMetricEnabled) {\r\n      rcvrOptions.desired_capabilities = Constants.enableReceiverRuntimeMetricName;\r\n    }\r\n    const eventPosition = options.eventPosition || this.options.eventPosition;\r\n    if (eventPosition) {\r\n      // Set filter on the receiver if event position is specified.\r\n      const filterClause = eventPosition.getExpression();\r\n      if (filterClause) {\r\n        (rcvrOptions.source as any).filter = {\r\n          \"apache.org:selector-filter:string\": types.wrap_described(filterClause, 0x468C00000004)\r\n        };\r\n      }\r\n    }\r\n    return rcvrOptions;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Constants } from \"@azure/amqp-common\";\r\nimport { ReceiverEvents } from \"rhea-promise\";\r\nimport { ReceiveOptions } from \"./eventHubClient\";\r\nimport { EventHubReceiver, ReceiverRuntimeInfo, OnMessage, OnError } from \"./eventHubReceiver\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport * as log from \"./log\";\r\n\r\n/**\r\n * Describes the receive handler object that is returned from the receive() method with handlers is\r\n * called. The ReceiveHandler is used to stop receiving more messages.\r\n * @class ReceiveHandler\r\n */\r\nexport class ReceiveHandler {\r\n  /**\r\n   * @property {string} name The Receiver handler name.\r\n   * @readonly\r\n   */\r\n  readonly name: string;\r\n\r\n  /**\r\n   * @property {EventHubReceiver} _receiver  The underlying EventHubReceiver.\r\n   * @private\r\n   */\r\n  private _receiver: EventHubReceiver;\r\n\r\n  /**\r\n   * Creates an instance of the ReceiveHandler.\r\n   * @constructor\r\n   * @param {EventHubReceiver} receiver The underlying EventHubReceiver.\r\n   */\r\n  constructor(receiver: EventHubReceiver) {\r\n    this._receiver = receiver;\r\n    this.name = receiver ? receiver.name : \"ReceiveHandler\";\r\n  }\r\n\r\n  /**\r\n   * @property {string | number} [partitionId] The partitionId from which the handler is receiving\r\n   * events from.\r\n   * @readonly\r\n   */\r\n  get partitionId(): string | number | undefined {\r\n    return this._receiver ? this._receiver.partitionId : undefined;\r\n  }\r\n\r\n  /**\r\n   * @property {string} [consumerGroup] The consumer group from which the handler is receiving\r\n   * events from.\r\n   * @readonly\r\n   */\r\n  get consumerGroup(): string | undefined {\r\n    return this._receiver ? this._receiver.consumerGroup : undefined;\r\n  }\r\n\r\n  /**\r\n   * @property {string} [address] The address of the underlying receiver.\r\n   * @readonly\r\n   */\r\n  get address(): string | undefined {\r\n    return this._receiver ? this._receiver.address : undefined;\r\n  }\r\n\r\n  /**\r\n   * @property {number} [epoch] The epoch value of the underlying receiver, if present.\r\n   * @readonly\r\n   */\r\n  get epoch(): number | undefined {\r\n    return this._receiver ? this._receiver.epoch : undefined;\r\n  }\r\n\r\n  /**\r\n   * @property {string} [identifier] The identifier of the underlying receiver, if present.\r\n   * @readonly\r\n   */\r\n  get identifier(): string | undefined {\r\n    return this._receiver ? this._receiver.identifier : undefined;\r\n  }\r\n\r\n  /**\r\n   * @property {ReceiverRuntimeInfo} [runtimeInfo] The receiver runtime info. This property will only\r\n   * be enabled when `enableReceiverRuntimeMetric` option is set to true in the\r\n   * `client.receive()` method.\r\n   * @readonly\r\n   */\r\n  get runtimeInfo(): ReceiverRuntimeInfo | undefined {\r\n    return this._receiver ? this._receiver.runtimeInfo : undefined;\r\n  }\r\n\r\n  /**\r\n   * @property {boolean} isReceiverOpen Indicates whether the receiver is connected/open.\r\n   * `true` - is open; `false` otherwise.\r\n   * @readonly\r\n   */\r\n  get isReceiverOpen(): boolean {\r\n    return this._receiver ? this._receiver.isOpen() : false;\r\n  }\r\n\r\n  /**\r\n   * Stops the underlying EventHubReceiver from receiving more messages.\r\n   * @return {Promise<void>} Promise<void>\r\n   */\r\n  async stop(): Promise<void> {\r\n    if (this._receiver) {\r\n      try {\r\n        await this._receiver.close();\r\n      } catch (err) {\r\n        log.error(\"An error occurred while stopping the receiver '%s' with address '%s': %O\",\r\n          this._receiver.name, this._receiver.address, err);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Describes the streaming receiver where the user can receive the message\r\n * by providing handler functions.\r\n * @ignore\r\n * @class StreamingReceiver\r\n * @extends EventHubReceiver\r\n */\r\nexport class StreamingReceiver extends EventHubReceiver {\r\n\r\n  receiveHandler: ReceiveHandler;\r\n  /**\r\n   * Instantiate a new receiver from the AMQP `Receiver`. Used by `EventHubClient`.\r\n   * @ignore\r\n   * @constructor\r\n   * @param {EventHubClient} client          The EventHub client.\r\n   * @param {string} partitionId             Partition ID from which to receive.\r\n   * @param {ReceiveOptions} [options]       Options for how you'd like to connect.\r\n   */\r\n  constructor(context: ConnectionContext, partitionId: string | number, options?: ReceiveOptions) {\r\n    super(context, partitionId, options);\r\n    this.receiveHandler = new ReceiveHandler(this);\r\n  }\r\n\r\n  /**\r\n   * Starts the receiver by establishing an AMQP session and an AMQP receiver link on the session.\r\n   * @ignore\r\n   * @param {OnMessage} onMessage The message handler to receive event data objects.\r\n   * @param {OnError} onError The error handler to receive an error that occurs while receivin messages.\r\n   */\r\n  receive(onMessage: OnMessage, onError: OnError): ReceiveHandler {\r\n    if (!onMessage || typeof onMessage !== \"function\") {\r\n      throw new Error(\"'onMessage' is a required parameter and must be of type 'function'.\");\r\n    }\r\n    if (!onError || typeof onError !== \"function\") {\r\n      throw new Error(\"'onError' is a required parameter and must be of type 'function'.\");\r\n    }\r\n    this._onMessage = onMessage;\r\n    this._onError = onError;\r\n    if (!this.isOpen()) {\r\n      this._init().catch((err) => {\r\n        this._onError!(err);\r\n      });\r\n    } else {\r\n      // It is possible that the receiver link has been established due to a previous receive() call. If that\r\n      // is the case then add message and error event handlers to the receiver. When the receiver will be closed\r\n      // these handlers will be automatically removed.\r\n      log.streaming(\"[%s] Receiver link is already present for '%s' due to previous receive() calls. \" +\r\n        \"Hence reusing it and attaching message and error handlers.\", this._context.connectionId, this.name);\r\n      this._receiver!.on(ReceiverEvents.message, this._onAmqpMessage);\r\n      this._receiver!.on(ReceiverEvents.receiverError, this._onAmqpError);\r\n      this._receiver!.setCreditWindow(Constants.defaultPrefetchCount);\r\n      this._receiver!.addCredit(Constants.defaultPrefetchCount);\r\n      log.streaming(\"[%s] Receiver '%s', set the prefetch count to 1000 and \" +\r\n        \"providing a credit of the same amount.\", this._context.connectionId, this.name);\r\n    }\r\n    return this.receiveHandler;\r\n  }\r\n\r\n  /**\r\n   * Creates a streaming receiver.\r\n   * @static\r\n   * @ignore\r\n   * @param {ConnectionContext} context    The connection context.\r\n   * @param {string | number} partitionId  The partitionId to receive events from.\r\n   * @param {ReceiveOptions} [options]     Receive options.\r\n   */\r\n  static create(context: ConnectionContext, partitionId: string | number, options?: ReceiveOptions): StreamingReceiver {\r\n    const sReceiver = new StreamingReceiver(context, partitionId, options);\r\n    context.receivers[sReceiver.name] = sReceiver;\r\n    return sReceiver;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport const packageJsonInfo = {\r\n  name: \"@azure/event-hubs\",\r\n  version: \"1.0.5\"\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport {\r\n  RequestResponseLink, defaultLock, translate, Constants\r\n} from \"@azure/amqp-common\";\r\nimport {\r\n  Message, EventContext, SenderEvents, ReceiverEvents, SenderOptions, ReceiverOptions\r\n} from \"rhea-promise\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport { LinkEntity } from \"./linkEntity\";\r\nimport * as log from \"./log\";\r\n/**\r\n * Describes the runtime information of an EventHub.\r\n * @interface EventHubRuntimeInformation\r\n */\r\nexport interface EventHubRuntimeInformation {\r\n  /**\r\n   * @property {string} path - The name of the event hub.\r\n   */\r\n  path: string;\r\n  /**\r\n   * @property {Date} createdAt - The date and time the hub was created in UTC.\r\n   */\r\n  createdAt: Date;\r\n  /**\r\n   * @property {number} partitionCount - The number of partitions in the event hub.\r\n   */\r\n  partitionCount: number;\r\n  /**\r\n   * @property {string[]} partitionIds - The slice of string partition identifiers.\r\n   */\r\n  partitionIds: string[];\r\n  /**\r\n   * @property {string} type - The type of entity.\r\n   */\r\n  type: \"com.microsoft:eventhub\";\r\n}\r\n\r\n/**\r\n * Describes the runtime information of an EventHub Partition.\r\n * @interface EventHubPartitionRuntimeInformation\r\n */\r\nexport interface EventHubPartitionRuntimeInformation {\r\n  /**\r\n   * @property {string} hubPath - The name of the eventhub.\r\n   */\r\n  hubPath: string;\r\n  /**\r\n   * @property {string} partitionId - Identifier of the partition within the eventhub.\r\n   */\r\n  partitionId: string;\r\n  /**\r\n   * @property {number} beginningSequenceNumber - The starting sequence number of the partition's message log.\r\n   */\r\n  beginningSequenceNumber: number;\r\n  /**\r\n   * @property {number} lastSequenceNumber - The last sequence number of the partition's message log.\r\n   */\r\n  lastSequenceNumber: number;\r\n  /**\r\n   * @property {string} lastEnqueuedOffset - The offset of the last enqueued message in the partition's message log.\r\n   */\r\n  lastEnqueuedOffset: string;\r\n  /**\r\n   * @property {Date} lastEnqueuedTimeUtc - The time of the last enqueued message in the partition's message log in UTC.\r\n   */\r\n  lastEnqueuedTimeUtc: Date;\r\n  /**\r\n   * @property {string} type - The type of entity.\r\n   */\r\n  type: \"com.microsoft:partition\";\r\n}\r\n\r\nexport interface ManagementClientOptions {\r\n  address?: string;\r\n  audience?: string;\r\n}\r\n\r\n/**\r\n * @class ManagementClient\r\n * @ignore\r\n * Descibes the EventHubs Management Client that talks\r\n * to the $management endpoint over AMQP connection.\r\n */\r\nexport class ManagementClient extends LinkEntity {\r\n\r\n  readonly managementLock: string = `${Constants.managementRequestKey}-${uuid()}`;\r\n  /**\r\n   * @property {string} entityPath - The name/path of the entity (hub name) for which the management\r\n   * request needs to be made.\r\n   */\r\n  entityPath: string;\r\n  /**\r\n   * @property {string} replyTo The reply to Guid for the management client.\r\n   */\r\n  replyTo: string = uuid();\r\n  /**\r\n   * $management sender, receiver on the same session.\r\n   * @private\r\n   */\r\n  private _mgmtReqResLink?: RequestResponseLink;\r\n\r\n  /**\r\n   * Instantiates the management client.\r\n   * @constructor\r\n   * @ignore\r\n   * @param {BaseConnectionContext} context The connection context.\r\n   * @param {string} [address] The address for the management endpoint. For IotHub it will be\r\n   * `/messages/events/$management`.\r\n   */\r\n  constructor(context: ConnectionContext, options?: ManagementClientOptions) {\r\n    super(context, {\r\n      address: options && options.address ? options.address : Constants.management,\r\n      audience: options && options.audience\r\n        ? options.audience\r\n        : context.config.getManagementAudience()\r\n    });\r\n    this._context = context;\r\n    this.entityPath = context.config.entityPath as string;\r\n  }\r\n\r\n  /**\r\n   * Provides the eventhub runtime information.\r\n   * @ignore\r\n   * @param {Connection} connection - The established amqp connection\r\n   * @returns {Promise<EventHubRuntimeInformation>}\r\n   */\r\n  async getHubRuntimeInformation(): Promise<EventHubRuntimeInformation> {\r\n    const info: any = await this._makeManagementRequest(Constants.eventHub);\r\n    const runtimeInfo: EventHubRuntimeInformation = {\r\n      path: info.name,\r\n      createdAt: new Date(info.created_at),\r\n      partitionCount: info.partition_count,\r\n      partitionIds: info.partition_ids,\r\n      type: info.type\r\n    };\r\n    log.mgmt(\"[%s] The hub runtime info is: %O\", this._context.connectionId, runtimeInfo);\r\n    return runtimeInfo;\r\n  }\r\n\r\n  /**\r\n   * Provides an array of partitionIds.\r\n   * @ignore\r\n   * @param {Connection} connection - The established amqp connection\r\n   * @returns {Promise<Array<string>>}\r\n   */\r\n  async getPartitionIds(): Promise<Array<string>> {\r\n    const runtimeInfo = await this.getHubRuntimeInformation();\r\n    return runtimeInfo.partitionIds;\r\n  }\r\n\r\n  /**\r\n   * Provides information about the specified partition.\r\n   * @ignore\r\n   * @param {Connection} connection - The established amqp connection\r\n   * @param {(string|number)} partitionId Partition ID for which partition information is required.\r\n   */\r\n  async getPartitionInformation(partitionId: string | number): Promise<EventHubPartitionRuntimeInformation> {\r\n    if (typeof partitionId !== \"string\" && typeof partitionId !== \"number\") {\r\n      throw new Error(\"'partitionId' is a required parameter and must be of \" +\r\n        \"type: 'string' | 'number'.\");\r\n    }\r\n    const info: any = await this._makeManagementRequest(Constants.partition, partitionId);\r\n    const partitionInfo: EventHubPartitionRuntimeInformation = {\r\n      beginningSequenceNumber: info.begin_sequence_number,\r\n      hubPath: info.name,\r\n      lastEnqueuedOffset: info.last_enqueued_offset,\r\n      lastEnqueuedTimeUtc: new Date(info.last_enqueued_time_utc),\r\n      lastSequenceNumber: info.last_enqueued_sequence_number,\r\n      partitionId: info.partition,\r\n      type: info.type\r\n    };\r\n    log.mgmt(\"[%s] The partition info is: %O.\", this._context.connectionId, partitionInfo);\r\n    return partitionInfo;\r\n  }\r\n\r\n  /**\r\n   * Closes the AMQP management session to the Event Hub for this client,\r\n   * returning a promise that will be resolved when disconnection is completed.\r\n   * @ignore\r\n   * @return {Promise<void>}\r\n   */\r\n  async close(): Promise<void> {\r\n    try {\r\n      if (this._isMgmtRequestResponseLinkOpen()) {\r\n        const mgmtLink = this._mgmtReqResLink;\r\n        this._mgmtReqResLink = undefined;\r\n        clearTimeout(this._tokenRenewalTimer as NodeJS.Timer);\r\n        await mgmtLink!.close();\r\n        log.mgmt(\"Successfully closed the management session.\");\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while closing the management session: ${err}`;\r\n      log.error(msg);\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  private async _init(): Promise<void> {\r\n    try {\r\n      if (!this._isMgmtRequestResponseLinkOpen()) {\r\n        await this._negotiateClaim();\r\n        const rxopt: ReceiverOptions = {\r\n          source: { address: this.address },\r\n          name: this.replyTo,\r\n          target: { address: this.replyTo },\r\n          onSessionError: (context: EventContext) => {\r\n            const id = context.connection.options.id;\r\n            const ehError = translate(context.session!.error!);\r\n            log.error(\"[%s] An error occurred on the session for request/response links for \" +\r\n              \"$management: %O\", id, ehError);\r\n          }\r\n        };\r\n        const sropt: SenderOptions = { target: { address: this.address } };\r\n        log.mgmt(\"[%s] Creating sender/receiver links on a session for $management endpoint with \" +\r\n          \"srOpts: %o, receiverOpts: %O.\", this._context.connectionId, sropt, rxopt);\r\n        this._mgmtReqResLink =\r\n          await RequestResponseLink.create(this._context.connection, sropt, rxopt);\r\n        this._mgmtReqResLink.sender.on(SenderEvents.senderError, (context: EventContext) => {\r\n          const id = context.connection.options.id;\r\n          const ehError = translate(context.sender!.error!);\r\n          log.error(\"[%s] An error occurred on the $management sender link.. %O\", id, ehError);\r\n        });\r\n        this._mgmtReqResLink.receiver.on(ReceiverEvents.receiverError, (context: EventContext) => {\r\n          const id = context.connection.options.id;\r\n          const ehError = translate(context.receiver!.error!);\r\n          log.error(\"[%s] An error occurred on the $management receiver link.. %O\", id, ehError);\r\n        });\r\n        log.mgmt(\"[%s] Created sender '%s' and receiver '%s' links for $management endpoint.\",\r\n          this._context.connectionId, this._mgmtReqResLink.sender.name,\r\n          this._mgmtReqResLink.receiver.name);\r\n        await this._ensureTokenRenewal();\r\n      }\r\n    } catch (err) {\r\n      err = translate(err);\r\n      log.error(\"[%s] An error occured while establishing the $management links: %O\",\r\n        this._context.connectionId, err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Helper method to make the management request\r\n   * @param {Connection} connection - The established amqp connection\r\n   * @param {string} type - The type of entity requested for. Valid values are \"eventhub\", \"partition\"\r\n   * @param {string | number} [partitionId] - The partitionId. Required only when type is \"partition\".\r\n   */\r\n  private async _makeManagementRequest(type: \"eventhub\" | \"partition\", partitionId?: string | number): Promise<any> {\r\n    if (partitionId != undefined && (typeof partitionId !== \"string\" && typeof partitionId !== \"number\")) {\r\n      throw new Error(\"'partitionId' is a required parameter and must be of type: 'string' | 'number'.\");\r\n    }\r\n    try {\r\n      const request: Message = {\r\n        body: Buffer.from(JSON.stringify([])),\r\n        message_id: uuid(),\r\n        reply_to: this.replyTo,\r\n        application_properties: {\r\n          operation: Constants.readOperation,\r\n          name: this.entityPath as string,\r\n          type: `${Constants.vendorString}:${type}`\r\n        }\r\n      };\r\n      if (partitionId != undefined && type === Constants.partition) {\r\n        request.application_properties!.partition = `${partitionId}`;\r\n      }\r\n      log.mgmt(\"[%s] Acquiring lock to get the management req res link.\", this._context.connectionId);\r\n      await defaultLock.acquire(this.managementLock, () => { return this._init(); });\r\n      return (await this._mgmtReqResLink!.sendRequest(request)).body;\r\n    } catch (err) {\r\n      err = translate(err);\r\n      log.error(\"An error occurred while making the request to $management endpoint: %O\", err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  private _isMgmtRequestResponseLinkOpen(): boolean {\r\n    return this._mgmtReqResLink! && this._mgmtReqResLink!.isOpen();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"./log\";\r\nimport { packageJsonInfo } from \"./util/constants\";\r\nimport { EventHubReceiver } from \"./eventHubReceiver\";\r\nimport { EventHubSender } from \"./eventHubSender\";\r\nimport {\r\n  Constants, delay, ConnectionContextBase, CreateConnectionContextBaseParameters,\r\n  EventHubConnectionConfig\r\n} from \"@azure/amqp-common\";\r\nimport { ManagementClient, ManagementClientOptions } from \"./managementClient\";\r\nimport { ClientOptions } from \"./eventHubClient\";\r\nimport { Dictionary, OnAmqpEvent, EventContext, ConnectionEvents } from \"rhea-promise\";\r\n\r\n/**\r\n * @interface ConnectionContext\r\n * @ignore\r\n * Provides contextual information like the underlying amqp connection, cbs session, management session,\r\n * tokenProvider, senders, receivers, etc. about the EventHub client.\r\n */\r\nexport interface ConnectionContext extends ConnectionContextBase {\r\n  /**\r\n   * @property {EventHubConnectionConfig} config The EventHub connection config that is created after\r\n   * parsing the connection string.\r\n   */\r\n  readonly config: EventHubConnectionConfig;\r\n  /**\r\n   * @property {boolean} wasConnectionCloseCalled Indicates whether the close() method was\r\n   * called on theconnection object.\r\n   */\r\n  wasConnectionCloseCalled: boolean;\r\n  /**\r\n   * @property {Dictionary<EventHubReceiver>} receivers A dictionary of the EventHub Receivers associated with this client.\r\n   */\r\n  receivers: Dictionary<EventHubReceiver>;\r\n  /**\r\n   * @property {Dictionary<EventHubSender>} senders A dictionary of the EventHub Senders associated with this client.\r\n   */\r\n  senders: Dictionary<EventHubSender>;\r\n  /**\r\n   * @property {ManagementClient} managementSession A reference to the management session ($management endpoint) on\r\n   * the underlying amqp connection for the EventHub Client.\r\n   */\r\n  managementSession?: ManagementClient;\r\n}\r\n\r\nexport interface ConnectionContextOptions extends ClientOptions {\r\n  managementSessionAddress?: string;\r\n  managementSessionAudience?: string;\r\n}\r\n\r\nexport namespace ConnectionContext {\r\n\r\n  const userAgent: string = \"/js-event-hubs\";\r\n\r\n  export function getUserAgent(options: ConnectionContextOptions): string {\r\n    const finalUserAgent = options.userAgent ? `${userAgent},${options.userAgent}` : userAgent;\r\n    if (finalUserAgent.length > Constants.maxUserAgentLength) {\r\n      throw new Error(`The user-agent string cannot be more than 128 characters in length.` +\r\n        `The given user-agent string is: ${finalUserAgent} with length: ${finalUserAgent.length}`);\r\n    }\r\n    return finalUserAgent;\r\n  }\r\n\r\n  export function create(config: EventHubConnectionConfig, options?: ConnectionContextOptions): ConnectionContext {\r\n    if (!options) options = {};\r\n\r\n    const parameters: CreateConnectionContextBaseParameters = {\r\n      config: config,\r\n      tokenProvider: options.tokenProvider,\r\n      dataTransformer: options.dataTransformer,\r\n      isEntityPathRequired: true,\r\n      connectionProperties: {\r\n        product: \"MSJSClient\",\r\n        userAgent: getUserAgent(options),\r\n        version: packageJsonInfo.version\r\n      }\r\n    };\r\n    // Let us create the base context and then add EventHub specific ConnectionContext properties.\r\n    const connectionContext = ConnectionContextBase.create(parameters) as ConnectionContext;\r\n    connectionContext.wasConnectionCloseCalled = false;\r\n    connectionContext.senders = {};\r\n    connectionContext.receivers = {};\r\n    const mOptions: ManagementClientOptions = {\r\n      address: options.managementSessionAddress,\r\n      audience: options.managementSessionAudience\r\n    };\r\n    connectionContext.managementSession = new ManagementClient(connectionContext, mOptions);\r\n\r\n    // Define listeners to be added to the connection object for\r\n    // \"connection_open\" and \"connection_error\" events.\r\n    const onConnectionOpen: OnAmqpEvent = (context: EventContext) => {\r\n      connectionContext.wasConnectionCloseCalled = false;\r\n      log.context(\"[%s] setting 'wasConnectionCloseCalled' property of connection context to %s.\",\r\n        connectionContext.connection.id, connectionContext.wasConnectionCloseCalled);\r\n    };\r\n\r\n    const disconnected: OnAmqpEvent = async (context: EventContext) => {\r\n      const connectionError = context.connection && context.connection.error\r\n        ? context.connection.error\r\n        : undefined;\r\n      if (connectionError) {\r\n        log.error(\"[%s] Error (context.connection.error) occurred on the amqp connection: %O\",\r\n          connectionContext.connection.id, connectionError);\r\n      }\r\n      const contextError = context.error;\r\n      if (contextError) {\r\n        log.error(\"[%s] Error (context.error) occurred on the amqp connection: %O\",\r\n          connectionContext.connection.id, contextError);\r\n      }\r\n      const state: Readonly<{\r\n        wasConnectionCloseCalled: boolean; numSenders: number; numReceivers: number;\r\n      }> = {\r\n        wasConnectionCloseCalled: connectionContext.wasConnectionCloseCalled,\r\n        numSenders: Object.keys(connectionContext.senders).length,\r\n        numReceivers: Object.keys(connectionContext.receivers).length\r\n      };\r\n      // The connection should always be brought back up if the sdk did not call connection.close()\r\n      // and there was atleast one sender/receiver link on the connection before it went down.\r\n      log.error(\"[%s] state: %O\", connectionContext.connection.id, state);\r\n      if (!state.wasConnectionCloseCalled && (state.numSenders || state.numReceivers)) {\r\n        log.error(\"[%s] connection.close() was not called from the sdk and there were some \" +\r\n          \"sender or receiver links or both. We should reconnect.\", connectionContext.connection.id);\r\n        await delay(Constants.connectionReconnectDelay);\r\n        // reconnect senders if any\r\n        for (const senderName of Object.keys(connectionContext.senders)) {\r\n          const sender = connectionContext.senders[senderName];\r\n          if (!sender.isConnecting) {\r\n            log.error(\"[%s] calling detached on sender '%s' with address '%s'.\",\r\n              connectionContext.connection.id, sender.name, sender.address);\r\n            sender.detached(connectionError || contextError).catch((err) => {\r\n              log.error(\"[%s] An error occurred while reconnecting the sender '%s' with adress '%s' %O.\",\r\n                connectionContext.connection.id, sender.name, sender.address, err);\r\n            });\r\n          } else {\r\n            log.error(\"[%s] sender '%s' with address '%s' is already reconnecting. Hence not \" +\r\n              \"calling detached on the sender.\", connectionContext.connection.id, sender.name,\r\n              sender.address);\r\n          }\r\n        }\r\n        // reconnect receivers if any\r\n        for (const receiverName of Object.keys(connectionContext.receivers)) {\r\n          const receiver = connectionContext.receivers[receiverName];\r\n          if (!receiver.isConnecting) {\r\n            log.error(\"[%s] calling detached on receiver '%s' with address '%s'.\",\r\n              connectionContext.connection.id, receiver.name, receiver.address);\r\n            receiver.detached(connectionError || contextError).catch((err) => {\r\n              log.error(\"[%s] An error occurred while reconnecting the receiver '%s' with adress '%s' %O.\",\r\n                connectionContext.connection.id, receiver.name, receiver.address, err);\r\n            });\r\n          } else {\r\n            log.error(\"[%s] receiver '%s' with address '%s' is already reconnecting. Hence not \" +\r\n              \"calling detached on the receiver.\", connectionContext.connection.id, receiver.name,\r\n              receiver.address);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    // Add listeners on the connection object.\r\n    connectionContext.connection.on(ConnectionEvents.connectionOpen, onConnectionOpen);\r\n    connectionContext.connection.on(ConnectionEvents.disconnected, disconnected);\r\n\r\n    log.context(\"[%s] Created connection context successfully.\", connectionContext.connectionId);\r\n    return connectionContext;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport * as log from \"./log\";\r\nimport {\r\n  messageProperties, Sender, EventContext, OnAmqpEvent, SenderOptions, Delivery, SenderEvents,\r\n  message, AmqpError\r\n} from \"rhea-promise\";\r\nimport {\r\n  defaultLock, Func, retry, translate, AmqpMessage, ErrorNameConditionMapper,\r\n  RetryConfig, RetryOperationType, Constants, randomNumberFromInterval\r\n} from \"@azure/amqp-common\";\r\nimport { EventData } from \"./eventData\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport { LinkEntity } from \"./linkEntity\";\r\n\r\ninterface CreateSenderOptions {\r\n  newName?: boolean;\r\n}\r\n\r\n/**\r\n * Describes the EventHubSender that will send event data to EventHub.\r\n * @class EventHubSender\r\n * @ignore\r\n */\r\nexport class EventHubSender extends LinkEntity {\r\n  /**\r\n   * @property {string} senderLock The unqiue lock name per connection that is used to acquire the\r\n   * lock for establishing a sender link by an entity on that connection.\r\n   * @readonly\r\n   */\r\n  readonly senderLock: string = `sender-${uuid()}`;\r\n  /**\r\n   * @property {OnAmqpEvent} _onAmqpError The handler function to handle errors that happen on the\r\n   * underlying sender.\r\n   * @readonly\r\n   */\r\n  private readonly _onAmqpError: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onAmqpClose The handler function to handle \"sender_close\" event\r\n   * that happens on the underlying sender.\r\n   * @readonly\r\n   */\r\n  private readonly _onAmqpClose: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onSessionError The message handler that will be set as the handler on\r\n   * the underlying rhea sender's session for the \"session_error\" event.\r\n   * @private\r\n   */\r\n  private _onSessionError: OnAmqpEvent;\r\n  /**\r\n   * @property {OnAmqpEvent} _onSessionClose The message handler that will be set as the handler on\r\n   * the underlying rhea sender's session for the \"session_close\" event.\r\n   * @private\r\n   */\r\n  private _onSessionClose: OnAmqpEvent;\r\n  /**\r\n   * @property {Sender} [_sender] The AMQP sender link.\r\n   * @private\r\n   */\r\n  private _sender?: Sender;\r\n\r\n  /**\r\n   * Creates a new EventHubSender instance.\r\n   * @ignore\r\n   * @constructor\r\n   * @param {ConnectionContext} context The connection context.\r\n   * @param {string|number} [partitionId] The EventHub partition id to which the sender\r\n   * wants to send the event data.\r\n   */\r\n  constructor(context: ConnectionContext, partitionId?: string | number, name?: string) {\r\n    super(context, { name: name, partitionId: partitionId });\r\n    this.address = context.config.getSenderAddress(partitionId);\r\n    this.audience = context.config.getSenderAudience(partitionId);\r\n\r\n    this._onAmqpError = (context: EventContext) => {\r\n      const senderError = context.sender && context.sender.error;\r\n      if (senderError) {\r\n        const err = translate(senderError);\r\n        log.error(\"[%s] An error occurred for sender '%s': %O.\",\r\n          this._context.connectionId, this.name, err);\r\n      }\r\n    };\r\n\r\n    this._onSessionError = (context: EventContext) => {\r\n      const sessionError = context.session && context.session.error;\r\n      if (sessionError) {\r\n        const err = translate(sessionError);\r\n        log.error(\"[%s] An error occurred on the session of sender '%s': %O.\",\r\n          this._context.connectionId, this.name, err);\r\n      }\r\n    };\r\n\r\n    this._onAmqpClose = async (context: EventContext) => {\r\n      const sender = this._sender || context.sender!;\r\n      const senderError = context.sender && context.sender.error;\r\n      if (senderError) {\r\n        log.error(\"[%s] 'sender_close' event occurred for sender '%s' with address '%s'. \" +\r\n          \"The associated error is: %O\", this._context.connectionId, this.name,\r\n          this.address, senderError);\r\n      }\r\n      if (sender && !sender.isItselfClosed()) {\r\n        if (!this.isConnecting) {\r\n          log.error(\"[%s] 'sender_close' event occurred on the sender '%s' with address '%s' \" +\r\n            \"and the sdk did not initiate this. The sender is not reconnecting. Hence, calling \" +\r\n            \"detached from the _onAmqpClose() handler.\", this._context.connectionId, this.name,\r\n            this.address);\r\n          await this.detached(senderError);\r\n        } else {\r\n          log.error(\"[%s] 'sender_close' event occurred on the sender '%s' with address '%s' \" +\r\n            \"and the sdk did not initate this. Moreover the sender is already re-connecting. \" +\r\n            \"Hence not calling detached from the _onAmqpClose() handler.\",\r\n            this._context.connectionId, this.name, this.address);\r\n        }\r\n      } else {\r\n        log.error(\"[%s] 'sender_close' event occurred on the sender '%s' with address '%s' \" +\r\n          \"because the sdk initiated it. Hence not calling detached from the _onAmqpClose\" +\r\n          \"() handler.\", this._context.connectionId, this.name, this.address);\r\n      }\r\n    };\r\n\r\n    this._onSessionClose = async (context: EventContext) => {\r\n      const sender = this._sender || context.sender!;\r\n      const sessionError = context.session && context.session.error;\r\n      if (sessionError) {\r\n        log.error(\"[%s] 'session_close' event occurred for sender '%s' with address '%s'. \" +\r\n          \"The associated error is: %O\", this._context.connectionId, this.name,\r\n          this.address, sessionError);\r\n      }\r\n      if (sender && !sender.isSessionItselfClosed()) {\r\n        if (!this.isConnecting) {\r\n          log.error(\"[%s] 'session_close' event occurred on the session of sender '%s' with \" +\r\n            \"address '%s' and the sdk did not initiate this. Hence calling detached from the \" +\r\n            \"_onSessionClose() handler.\", this._context.connectionId, this.name, this.address);\r\n          await this.detached(sessionError);\r\n        } else {\r\n          log.error(\"[%s] 'session_close' event occurred on the session of sender '%s' with \" +\r\n            \"address '%s' and the sdk did not initiate this. Moreover the sender is already \" +\r\n            \"re-connecting. Hence not calling detached from the _onSessionClose() handler.\",\r\n            this._context.connectionId, this.name, this.address);\r\n        }\r\n      } else {\r\n        log.error(\"[%s] 'session_close' event occurred on the session of sender '%s' with address \" +\r\n          \"'%s' because the sdk initiated it. Hence not calling detached from the _onSessionClose\" +\r\n          \"() handler.\", this._context.connectionId, this.name, this.address);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Will reconnect the sender link if necessary.\r\n   * @ignore\r\n   * @param {AmqpError | Error} [senderError] The sender error if any.\r\n   * @returns {Promise<void>} Promise<void>.\r\n   */\r\n  async detached(senderError?: AmqpError | Error): Promise<void> {\r\n    try {\r\n      const wasCloseInitiated = this._sender && this._sender.isItselfClosed();\r\n      // Clears the token renewal timer. Closes the link and its session if they are open.\r\n      // Removes the link and its session if they are present in rhea's cache.\r\n      await this._closeLink(this._sender);\r\n      // We should attempt to reopen only when the sender(sdk) did not initiate the close\r\n      let shouldReopen = false;\r\n      if (senderError && !wasCloseInitiated) {\r\n        const translatedError = translate(senderError);\r\n        if (translatedError.retryable) {\r\n          shouldReopen = true;\r\n          log.error(\"[%s] close() method of Sender '%s' with address '%s' was not called. There \" +\r\n            \"was an accompanying error an it is retryable. This is a candidate for re-establishing \" +\r\n            \"the sender link.\", this._context.connectionId, this.name, this.address);\r\n        } else {\r\n          log.error(\"[%s] close() method of Sender '%s' with address '%s' was not called. There \" +\r\n            \"was an accompanying error and it is NOT retryable. Hence NOT re-establishing \" +\r\n            \"the sender link.\", this._context.connectionId, this.name, this.address);\r\n        }\r\n      } else if (!wasCloseInitiated) {\r\n        shouldReopen = true;\r\n        log.error(\"[%s] close() method of Sender '%s' with address '%s' was not called. There \" +\r\n          \"was no accompanying error as well. This is a candidate for re-establishing \" +\r\n          \"the sender link.\", this._context.connectionId, this.name, this.address);\r\n      } else {\r\n        const state: any = {\r\n          wasCloseInitiated: wasCloseInitiated,\r\n          senderError: senderError,\r\n          _sender: this._sender\r\n        };\r\n        log.error(\"[%s] Something is busted. State of sender '%s' with address '%s' is: %O\",\r\n          this._context.connectionId, this.name, this.address, state);\r\n      }\r\n      if (shouldReopen) {\r\n        await defaultLock.acquire(this.senderLock, () => {\r\n          const options: SenderOptions = this._createSenderOptions({\r\n            newName: true\r\n          });\r\n          // shall retry forever at an interval of 15 seconds if the error is a retryable error\r\n          // else bail out when the error is not retryable or the oepration succeeds.\r\n          const config: RetryConfig<void> = {\r\n            operation: () => this._init(options),\r\n            connectionId: this._context.connectionId,\r\n            operationType: RetryOperationType.senderLink,\r\n            times: Constants.defaultConnectionRetryAttempts,\r\n            delayInSeconds: 15\r\n          };\r\n          return retry<void>(config);\r\n        });\r\n      }\r\n    } catch (err) {\r\n      log.error(\"[%s] An error occurred while processing detached() of Sender '%s' with address \" +\r\n        \"'%s': %O\", this._context.connectionId, this.name, this.address, err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes the sender fromt the context. Clears the token renewal timer. Closes the sender link.\r\n   * @ignore\r\n   * @return {Promise<void>} Promise<void>\r\n   */\r\n  async close(): Promise<void> {\r\n    if (this._sender) {\r\n      const senderLink = this._sender;\r\n      this._deleteFromCache();\r\n      await this._closeLink(senderLink);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether the AMQP sender link is open. If open then returns true else returns false.\r\n   * @ignore\r\n   * @return {boolean} boolean\r\n   */\r\n  isOpen(): boolean {\r\n    const result: boolean = this._sender! && this._sender!.isOpen();\r\n    log.error(\"[%s] Sender '%s' with address '%s' is open? -> %s\", this._context.connectionId,\r\n      this.name, this.address, result);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Sends the given message, with the given options on this link\r\n   * @ignore\r\n   * @param {any} data Message to send.  Will be sent as UTF8-encoded JSON string.\r\n   * @returns {Promise<Delivery>} Promise<Delivery>\r\n   */\r\n  async send(data: EventData): Promise<Delivery> {\r\n    try {\r\n      if (!data || (data && typeof data !== \"object\")) {\r\n        throw new Error(\"data is required and it must be of type object.\");\r\n      }\r\n\r\n      if (data.partitionKey && typeof data.partitionKey !== \"string\"){\r\n          throw new Error(\"'partitionKey' must be of type 'string'.\");\r\n      }\r\n\r\n      if (!this.isOpen()) {\r\n        log.sender(\"Acquiring lock %s for initializing the session, sender and \" +\r\n          \"possibly the connection.\", this.senderLock);\r\n        await defaultLock.acquire(this.senderLock, () => { return this._init(); });\r\n      }\r\n      const message = EventData.toAmqpMessage(data);\r\n      message.body = this._context.dataTransformer.encode(data.body);\r\n      return await this._trySend(message, message.message_id);\r\n    } catch (err) {\r\n      log.error(\"An error occurred while sending the message %O\", err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send a batch of EventData to the EventHub. The \"message_annotations\",\r\n   * \"application_properties\" and \"properties\" of the first message will be set as that\r\n   * of the envelope (batch message).\r\n   * @ignore\r\n   * @param {Array<EventData>} datas  An array of EventData objects to be sent in a Batch message.\r\n   * @return {Promise<Delivery>} Promise<Delivery>\r\n   */\r\n  async sendBatch(datas: EventData[]): Promise<Delivery> {\r\n    try {\r\n      if (!datas || (datas && !Array.isArray(datas))) {\r\n        throw new Error(\"data is required and it must be an Array.\");\r\n      }\r\n\r\n      if (!this.isOpen()) {\r\n        log.sender(\"Acquiring lock %s for initializing the session, sender and \" +\r\n          \"possibly the connection.\", this.senderLock);\r\n        await defaultLock.acquire(this.senderLock, () => { return this._init(); });\r\n      }\r\n      log.sender(\"[%s] Sender '%s', trying to send EventData[].\",\r\n        this._context.connectionId, this.name);\r\n      const messages: AmqpMessage[] = [];\r\n      // Convert EventData to AmqpMessage.\r\n      for (let i = 0; i < datas.length; i++) {\r\n        const message = EventData.toAmqpMessage(datas[i]);\r\n        message.body = this._context.dataTransformer.encode(datas[i].body);\r\n        messages[i] = message;\r\n      }\r\n      // Encode every amqp message and then convert every encoded message to amqp data section\r\n      const batchMessage: AmqpMessage = {\r\n        body: message.data_sections(messages.map(message.encode))\r\n      };\r\n      // Set message_annotations, application_properties and properties of the first message as\r\n      // that of the envelope (batch message).\r\n      if (messages[0].message_annotations) {\r\n        batchMessage.message_annotations = messages[0].message_annotations;\r\n      }\r\n      if (messages[0].application_properties) {\r\n        batchMessage.application_properties = messages[0].application_properties;\r\n      }\r\n      for (const prop of messageProperties) {\r\n        if ((messages[0] as any)[prop]) {\r\n          (batchMessage as any)[prop] = (messages[0] as any)[prop];\r\n        }\r\n      }\r\n\r\n      // Finally encode the envelope (batch message).\r\n      const encodedBatchMessage = message.encode(batchMessage);\r\n      log.sender(\"[%s] Sender '%s', sending encoded batch message.\",\r\n        this._context.connectionId, this.name, encodedBatchMessage);\r\n      return await this._trySend(encodedBatchMessage, batchMessage.message_id, 0x80013700);\r\n    } catch (err) {\r\n      log.error(\"An error occurred while sending the batch message %O\", err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  private _deleteFromCache(): void {\r\n    this._sender = undefined;\r\n    delete this._context.senders[this.address];\r\n    log.error(\"[%s] Deleted the sender '%s' with address '%s' from the client cache.\",\r\n      this._context.connectionId, this.name, this.address);\r\n  }\r\n\r\n  private _createSenderOptions(options: CreateSenderOptions): SenderOptions {\r\n    if (options.newName) this.name = `${uuid()}`;\r\n    const srOptions: SenderOptions = {\r\n      name: this.name,\r\n      target: {\r\n        address: this.address\r\n      },\r\n      onError: this._onAmqpError,\r\n      onClose: this._onAmqpClose,\r\n      onSessionError: this._onSessionError,\r\n      onSessionClose: this._onSessionClose\r\n    };\r\n    log.sender(\"Creating sender with options: %O\", srOptions);\r\n    return srOptions;\r\n  }\r\n\r\n  /**\r\n   * Tries to send the message to EventHub if there is enough credit to send them\r\n   * and the circular buffer has available space to settle the message after sending them.\r\n   *\r\n   * We have implemented a synchronous send over here in the sense that we shall be waiting\r\n   * for the message to be accepted or rejected and accordingly resolve or reject the promise.\r\n   * @ignore\r\n   * @param message The message to be sent to EventHub.\r\n   * @return {Promise<Delivery>} Promise<Delivery>\r\n   */\r\n  private _trySend(message: AmqpMessage, tag: any, format?: number): Promise<Delivery> {\r\n    const sendEventPromise = () => new Promise<Delivery>((resolve, reject) => {\r\n      let waitTimer: any;\r\n      log.sender(\"[%s] Sender '%s', credit: %d available: %d\", this._context.connectionId, this.name,\r\n        this._sender!.credit, this._sender!.session.outgoing.available());\r\n      if (this._sender!.sendable()) {\r\n        log.sender(\"[%s] Sender '%s', sending message with id '%s'.\", this._context.connectionId,\r\n          this.name, message.message_id || tag || '<not specified>');\r\n        let onRejected: Func<EventContext, void>;\r\n        let onReleased: Func<EventContext, void>;\r\n        let onModified: Func<EventContext, void>;\r\n        let onAccepted: Func<EventContext, void>;\r\n        const removeListeners = (): void => {\r\n          clearTimeout(waitTimer);\r\n          this._sender!.removeListener(SenderEvents.rejected, onRejected);\r\n          this._sender!.removeListener(SenderEvents.accepted, onAccepted);\r\n          this._sender!.removeListener(SenderEvents.released, onReleased);\r\n          this._sender!.removeListener(SenderEvents.modified, onModified);\r\n        };\r\n\r\n        onAccepted = (context: EventContext) => {\r\n          // Since we will be adding listener for accepted and rejected event every time\r\n          // we send a message, we need to remove listener for both the events.\r\n          // This will ensure duplicate listeners are not added for the same event.\r\n          removeListeners();\r\n          log.sender(\"[%s] Sender '%s', got event accepted.\", this._context.connectionId, this.name);\r\n          resolve(context.delivery);\r\n        };\r\n        onRejected = (context: EventContext) => {\r\n          removeListeners();\r\n          log.error(\"[%s] Sender '%s', got event rejected.\", this._context.connectionId, this.name);\r\n          const err = translate(context!.delivery!.remote_state!.error);\r\n          log.error(err);\r\n          reject(err);\r\n        };\r\n        onReleased = (context: EventContext) => {\r\n          removeListeners();\r\n          log.error(\"[%s] Sender '%s', got event released.\", this._context.connectionId, this.name);\r\n          let err: Error;\r\n          if (context!.delivery!.remote_state!.error) {\r\n            err = translate(context!.delivery!.remote_state!.error);\r\n          } else {\r\n            err = new Error(`[${this._context.connectionId}] Sender '${this.name}', ` +\r\n              `received a release disposition.Hence we are rejecting the promise.`);\r\n          }\r\n          log.error(err);\r\n          reject(err);\r\n        };\r\n        onModified = (context: EventContext) => {\r\n          removeListeners();\r\n          log.error(\"[%s] Sender '%s', got event modified.\", this._context.connectionId, this.name);\r\n          let err: Error;\r\n          if (context!.delivery!.remote_state!.error) {\r\n            err = translate(context!.delivery!.remote_state!.error);\r\n          } else {\r\n            err = new Error(`[${this._context.connectionId}] Sender \"${this.name}\", ` +\r\n              `received a modified disposition.Hence we are rejecting the promise.`);\r\n          }\r\n          log.error(err);\r\n          reject(err);\r\n        };\r\n\r\n        const actionAfterTimeout = () => {\r\n          removeListeners();\r\n          const desc: string = `[${this._context.connectionId}] Sender \"${this.name}\" with ` +\r\n            `address \"${this.address}\", was not able to send the message right now, due ` +\r\n            `to operation timeout.`;\r\n          log.error(desc);\r\n          const e: AmqpError = {\r\n            condition: ErrorNameConditionMapper.ServiceUnavailableError,\r\n            description: desc\r\n          };\r\n          return reject(translate(e));\r\n        };\r\n\r\n        this._sender!.on(SenderEvents.accepted, onAccepted);\r\n        this._sender!.on(SenderEvents.rejected, onRejected);\r\n        this._sender!.on(SenderEvents.modified, onModified);\r\n        this._sender!.on(SenderEvents.released, onReleased);\r\n        waitTimer = setTimeout(actionAfterTimeout, Constants.defaultOperationTimeoutInSeconds * 1000);\r\n        const delivery = this._sender!.send(message, tag, format);\r\n        log.sender(\"[%s] Sender '%s', sent message with delivery id: %d and tag: %s\",\r\n          this._context.connectionId, this.name, delivery.id, delivery.tag.toString());\r\n      } else {\r\n        // let us retry to send the message after some time.\r\n        const msg = `[${this._context.connectionId}] Sender \"${this.name}\", ` +\r\n          `cannot send the message right now. Please try later.`;\r\n        log.error(msg);\r\n        const amqpError: AmqpError = {\r\n          condition: ErrorNameConditionMapper.SenderBusyError,\r\n          description: msg\r\n        };\r\n        reject(translate(amqpError));\r\n      }\r\n    });\r\n\r\n    const jitterInSeconds = randomNumberFromInterval(1, 4);\r\n    const config: RetryConfig<Delivery> = {\r\n      operation: sendEventPromise,\r\n      connectionId: this._context.connectionId,\r\n      operationType: RetryOperationType.sendMessage,\r\n      times: Constants.defaultRetryAttempts,\r\n      delayInSeconds: Constants.defaultDelayBetweenOperationRetriesInSeconds + jitterInSeconds\r\n    };\r\n    return retry<Delivery>(config);\r\n  }\r\n\r\n  /**\r\n   * Initializes the sender session on the connection.\r\n   * @ignore\r\n   * @returns {Promise<void>}\r\n   */\r\n  private async _init(options?: SenderOptions): Promise<void> {\r\n    try {\r\n      // isOpen isConnecting  Should establish\r\n      // true     false          No\r\n      // true     true           No\r\n      // false    true           No\r\n      // false    false          Yes\r\n      if (!this.isOpen() && !this.isConnecting) {\r\n        log.error(\"[%s] The sender '%s' with address '%s' is not open and is not currently \" +\r\n          \"establishing itself. Hence let's try to connect.\", this._context.connectionId,\r\n          this.name, this.address);\r\n        this.isConnecting = true;\r\n        await this._negotiateClaim();\r\n        log.error(\"[%s] Trying to create sender '%s'...\", this._context.connectionId, this.name);\r\n        if (!options) {\r\n          options = this._createSenderOptions({});\r\n        }\r\n        this._sender = await this._context.connection.createSender(options);\r\n        this.isConnecting = false;\r\n        log.error(\"[%s] Sender '%s' with address '%s' has established itself.\",\r\n          this._context.connectionId, this.name, this.address);\r\n        this._sender.setMaxListeners(1000);\r\n        log.error(\"[%s] Promise to create the sender resolved. Created sender with name: %s\",\r\n          this._context.connectionId, this.name);\r\n        log.error(\"[%s] Sender '%s' created with sender options: %O\",\r\n          this._context.connectionId, this.name, options);\r\n        // It is possible for someone to close the sender and then start it again.\r\n        // Thus make sure that the sender is present in the client cache.\r\n        if (!this._context.senders[this.address]) this._context.senders[this.address] = this;\r\n        await this._ensureTokenRenewal();\r\n      } else {\r\n        log.error(\"[%s] The sender '%s' with address '%s' is open -> %s and is connecting \" +\r\n          \"-> %s. Hence not reconnecting.\", this._context.connectionId, this.name, this.address,\r\n          this.isOpen(), this.isConnecting);\r\n      }\r\n    } catch (err) {\r\n      this.isConnecting = false;\r\n      err = translate(err);\r\n      log.error(\"[%s] An error occurred while creating the sender %s\",\r\n        this._context.connectionId, this.name, err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new sender to the given event hub, and optionally to a given partition if it is\r\n   * not present in the context or returns the one present in the context.\r\n   * @ignore\r\n   * @static\r\n   * @param {(string|number)} [partitionId] Partition ID to which it will send event data.\r\n   * @returns {Promise<EventHubSender>}\r\n   */\r\n  static create(context: ConnectionContext, partitionId?: string | number): EventHubSender {\r\n    if (partitionId && typeof partitionId !== \"string\" && typeof partitionId !== \"number\") {\r\n      throw new Error(\"'partitionId' must be of type: 'string' | 'number'.\");\r\n    }\r\n\r\n    const ehSender: EventHubSender = new EventHubSender(context, partitionId);\r\n    if (!context.senders[ehSender.address]) {\r\n      context.senders[ehSender.address] = ehSender;\r\n    }\r\n    return context.senders[ehSender.address];\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ReceiverEvents, EventContext, OnAmqpEvent, SessionEvents } from \"rhea-promise\";\r\nimport { translate, Func, Constants, MessagingError } from \"@azure/amqp-common\";\r\nimport { EventData } from \"./eventData\";\r\nimport { ReceiveOptions } from \"./eventHubClient\";\r\nimport { EventHubReceiver } from \"./eventHubReceiver\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport * as log from \"./log\";\r\n\r\n/**\r\n * Describes the batching receiver where the user can receive a specified number of messages for a predefined time.\r\n * @class BatchingReceiver\r\n * @extends EventHubReceiver\r\n * @ignore\r\n */\r\nexport class BatchingReceiver extends EventHubReceiver {\r\n\r\n  /**\r\n   * Instantiate a new receiver from the AMQP `Receiver`. Used by `EventHubClient`.\r\n   * @ignore\r\n   * @constructor\r\n   * @param {ConnectionContext} context                        The connection context.\r\n   * @param {string} partitionId                               Partition ID from which to receive.\r\n   * @param {ReceiveOptions} [options]                         Options for how you'd like to connect.\r\n   */\r\n  constructor(context: ConnectionContext, partitionId: string | number, options?: ReceiveOptions) {\r\n    super(context, partitionId, options);\r\n  }\r\n\r\n  /**\r\n   * Receive a batch of EventData objects from an EventHub partition for a given count and\r\n   * a given max wait time in seconds, whichever happens first. This method can be used directly\r\n   * after creating the receiver object.\r\n   * @ignore\r\n   * @param {number} maxMessageCount The maximum message count. Must be a value greater than 0.\r\n   * @param {number} [maxWaitTimeInSeconds] The maximum wait time in seconds for which the Receiver\r\n   * should wait to receiver the said amount of messages. If not provided, it defaults to 60 seconds.\r\n   * @returns {Promise<EventData[]>} A promise that resolves with an array of EventData objects.\r\n   */\r\n  receive(maxMessageCount: number, maxWaitTimeInSeconds?: number): Promise<EventData[]> {\r\n    if (!maxMessageCount || (maxMessageCount && typeof maxMessageCount !== 'number')) {\r\n      throw new Error(\"'maxMessageCount' is a required parameter of type number with a value greater than 0.\");\r\n    }\r\n\r\n    if (maxWaitTimeInSeconds == undefined) {\r\n      maxWaitTimeInSeconds = Constants.defaultOperationTimeoutInSeconds;\r\n    }\r\n\r\n    const eventDatas: EventData[] = [];\r\n    let timeOver = false;\r\n    return new Promise<EventData[]>((resolve, reject) => {\r\n      let onReceiveMessage: OnAmqpEvent;\r\n      let onReceiveError: OnAmqpEvent;\r\n      let onReceiveClose: OnAmqpEvent;\r\n      let onSessionError: OnAmqpEvent;\r\n      let onSessionClose: OnAmqpEvent;\r\n      let waitTimer: any;\r\n      let actionAfterWaitTimeout: Func<void, void>;\r\n      // Final action to be performed after maxMessageCount is reached or the maxWaitTime is over.\r\n      const finalAction = (timeOver: boolean, data?: EventData) => {\r\n        // Resetting the mode. Now anyone can call start() or receive() again.\r\n        if (this._receiver) {\r\n          this._receiver.removeListener(ReceiverEvents.receiverError, onReceiveError);\r\n          this._receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\r\n        }\r\n        if (!data) {\r\n          data = eventDatas.length ? eventDatas[eventDatas.length - 1] : undefined;\r\n        }\r\n        if (!timeOver) {\r\n          clearTimeout(waitTimer);\r\n        }\r\n        if (this.receiverRuntimeMetricEnabled && data) {\r\n          this.runtimeInfo.lastSequenceNumber = data.lastSequenceNumber;\r\n          this.runtimeInfo.lastEnqueuedTimeUtc = data.lastEnqueuedTime;\r\n          this.runtimeInfo.lastEnqueuedOffset = data.lastEnqueuedOffset;\r\n          this.runtimeInfo.retrievalTime = data.retrievalTime;\r\n        }\r\n        resolve(eventDatas);\r\n      };\r\n\r\n      // Action to be performed after the max wait time is over.\r\n      actionAfterWaitTimeout = () => {\r\n        timeOver = true;\r\n        log.batching(\"[%s] Batching Receiver '%s', %d messages received when max wait time in seconds %d is over.\",\r\n          this._context.connectionId, this.name, eventDatas.length, maxWaitTimeInSeconds);\r\n        return finalAction(timeOver);\r\n      };\r\n\r\n      // Action to be performed on the \"message\" event.\r\n      onReceiveMessage = (context: EventContext) => {\r\n        const data: EventData = EventData.fromAmqpMessage(context.message!);\r\n        data.body = this._context.dataTransformer.decode(context.message!.body);\r\n        if (eventDatas.length <= maxMessageCount) {\r\n          eventDatas.push(data);\r\n        }\r\n        if (eventDatas.length === maxMessageCount) {\r\n          log.batching(\"[%s] Batching Receiver '%s', %d messages received within %d seconds.\",\r\n            this._context.connectionId, this.name, eventDatas.length, maxWaitTimeInSeconds);\r\n          finalAction(timeOver, data);\r\n        }\r\n      };\r\n\r\n      // Action to be taken when an error is received.\r\n      onReceiveError = (context: EventContext) => {\r\n        const receiver = this._receiver || context.receiver!;\r\n        receiver.removeListener(ReceiverEvents.receiverError, onReceiveError);\r\n        receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\r\n        receiver.session.removeListener(SessionEvents.sessionError, onSessionError);\r\n\r\n        const receiverError = context.receiver && context.receiver.error;\r\n        let error = new MessagingError(\"An error occuured while receiving messages.\");\r\n        if (receiverError) {\r\n          error = translate(receiverError);\r\n          log.error(\"[%s] Receiver '%s' received an error:\\n%O\", this._context.connectionId,\r\n            this.name, error);\r\n        }\r\n        if (waitTimer) {\r\n          clearTimeout(waitTimer);\r\n        }\r\n        reject(error);\r\n      };\r\n\r\n      onReceiveClose = async (context: EventContext) => {\r\n        const receiverError = context.receiver && context.receiver.error;\r\n        if (receiverError) {\r\n          log.error(\"[%s] 'receiver_close' event occurred. The associated error is: %O\",\r\n            this._context.connectionId, receiverError);\r\n        }\r\n      };\r\n\r\n      onSessionClose = async (context: EventContext) => {\r\n        const sessionError = context.session && context.session.error;\r\n        if (sessionError) {\r\n          log.error(\"[%s] 'session_close' event occurred for receiver '%s'. The associated error is: %O\",\r\n            this._context.connectionId, this.name, sessionError);\r\n        }\r\n      };\r\n\r\n      onSessionError = (context: EventContext) => {\r\n        const receiver = this._receiver || context.receiver!;\r\n        receiver.removeListener(ReceiverEvents.receiverError, onReceiveError);\r\n        receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\r\n        receiver.session.removeListener(SessionEvents.sessionError, onReceiveError);\r\n        const sessionError = context.session && context.session.error;\r\n        let error = new MessagingError(\"An error occuured while receiving messages.\");\r\n        if (sessionError) {\r\n          error = translate(sessionError);\r\n          log.error(\"[%s] 'session_close' event occurred for Receiver '%s' received an error:\\n%O\",\r\n            this._context.connectionId, this.name, error);\r\n        }\r\n        if (waitTimer) {\r\n          clearTimeout(waitTimer);\r\n        }\r\n        reject(error);\r\n      };\r\n\r\n      const addCreditAndSetTimer = (reuse?: boolean) => {\r\n        log.batching(\"[%s] Receiver '%s', adding credit for receiving %d messages.\",\r\n          this._context.connectionId, this.name, maxMessageCount);\r\n        this._receiver!.addCredit(maxMessageCount);\r\n        let msg: string = \"[%s] Setting the wait timer for %d seconds for receiver '%s'.\";\r\n        if (reuse) msg += \" Receiver link already present, hence reusing it.\";\r\n        log.batching(msg, this._context.connectionId, maxWaitTimeInSeconds, this.name);\r\n        waitTimer = setTimeout(actionAfterWaitTimeout, (maxWaitTimeInSeconds as number) * 1000);\r\n      };\r\n\r\n      if (!this.isOpen()) {\r\n        log.batching(\"[%s] Receiver '%s', setting the prefetch count to 0.\", this._context.connectionId, this.name);\r\n        this.prefetchCount = 0;\r\n        const rcvrOptions = this._createReceiverOptions({\r\n          onMessage: onReceiveMessage,\r\n          onError: onReceiveError,\r\n          onClose: onReceiveClose,\r\n          onSessionError: onSessionError,\r\n          onSessionClose: onSessionClose\r\n        });\r\n        this._init(rcvrOptions).then(() => addCreditAndSetTimer()).catch(reject);\r\n      } else {\r\n        addCreditAndSetTimer(true);\r\n        this._receiver!.on(ReceiverEvents.message, onReceiveMessage);\r\n        this._receiver!.on(ReceiverEvents.receiverError, onReceiveError);\r\n        this._receiver!.session.on(SessionEvents.sessionError, onReceiveError);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a batching receiver.\r\n   * @static\r\n   * @ignore\r\n   * @param {ConnectionContext} context    The connection context.\r\n   * @param {string | number} partitionId  The partitionId to receive events from.\r\n   * @param {ReceiveOptions} [options]     Receive options.\r\n   */\r\n  static create(context: ConnectionContext, partitionId: string | number, options?: ReceiveOptions): BatchingReceiver {\r\n    const bReceiver = new BatchingReceiver(context, partitionId, options);\r\n    context.receivers[bReceiver.name] = bReceiver;\r\n    return bReceiver;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { translate, MessagingError, IotSasTokenProvider } from \"@azure/amqp-common\";\r\nimport { IotHubConnectionConfig } from \"@azure/amqp-common\";\r\nimport { ConnectionContext, ConnectionContextOptions } from \"../connectionContext\";\r\nimport * as log from \"../log\";\r\n\r\n/**\r\n * @interface ParsedRedirectError\r\n * @ignore\r\n */\r\nexport interface ParsedRedirectError {\r\n  endpoint: string;\r\n  entityPath: string;\r\n}\r\n/**\r\n * @interface EHConfig\r\n * @ignore\r\n */\r\nexport interface EHConfig extends ParsedRedirectError {\r\n  sharedAccessKey: string;\r\n  sharedAccessKeyName: string;\r\n}\r\n/**\r\n * @class IotHubClient\r\n * @ignore\r\n */\r\nexport class IotHubClient {\r\n  /**\r\n   * @property {string} connectionString the IotHub connection string.\r\n   */\r\n  connectionString: string;\r\n\r\n  constructor(connectionString: string) {\r\n    this.connectionString = connectionString;\r\n  }\r\n  /**\r\n   * Constructs the EventHub connection string by catching the redirect error and parsing the error\r\n   * information.\r\n   * @ignore\r\n   * @param {ConnectionContextOptions} [options] optional parameters to be provided while creating\r\n   * the connection context.\r\n   * @return {Promise<string>} Promise<string>\r\n   */\r\n  async getEventHubConnectionString(options?: ConnectionContextOptions): Promise<string> {\r\n    const iothubconfig = IotHubConnectionConfig.create(this.connectionString);\r\n    const config = IotHubConnectionConfig.convertToEventHubConnectionConfig(iothubconfig);\r\n    let result: string = \"\";\r\n    if (!options) options = {};\r\n    options.tokenProvider = new IotSasTokenProvider(config.endpoint, config.sharedAccessKeyName, config.sharedAccessKey);\r\n    options.managementSessionAddress = `/messages/events/$management`;\r\n    const context = ConnectionContext.create(config, options);\r\n    try {\r\n      log.iotClient(\"Getting the hub runtime info from the iothub connection string to get the redirect error.\");\r\n      await context.managementSession!.getHubRuntimeInformation();\r\n    } catch (err) {\r\n      const error = translate(err);\r\n      log.error(\"IotHubClient received the error: %O\", error);\r\n      const parsedInfo: ParsedRedirectError = this._parseRedirectError(err);\r\n      log.error(\"Parsed info from redirect error is: %O\", parsedInfo);\r\n      result = this._buildConnectionString({\r\n        sharedAccessKey: config.sharedAccessKey,\r\n        sharedAccessKeyName: config.sharedAccessKeyName,\r\n        endpoint: parsedInfo.endpoint,\r\n        entityPath: parsedInfo.entityPath\r\n      });\r\n    }\r\n    log.iotClient(\"The EventHub ConnectionString is: '%s'.\", result);\r\n    await this.close(context);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Closes the AMQP connection to the Event Hub for this client,\r\n   * returning a promise that will be resolved when disconnection is completed.\r\n   * @ignore\r\n   * @returns {Promise<any>}\r\n   */\r\n  async close(context: ConnectionContext): Promise<any> {\r\n    try {\r\n      if (context.connection.isOpen()) {\r\n        log.iotClient(\"Closing the IotHubClient connection...\");\r\n        // Close the cbs session;\r\n        await context.cbsSession.close();\r\n        log.iotClient(\"IotHub cbs session closed.\");\r\n        // Close the management session\r\n        await context.managementSession!.close();\r\n        log.iotClient(\"IotHub management client closed.\");\r\n        await context.connection.close();\r\n        log.iotClient(\"Closed the amqp connection '%s' on the iothub client.\", context.connectionId);\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while closing the connection \"${context.connectionId}\": ${err.stack}`;\r\n      log.error(msg);\r\n    }\r\n  }\r\n\r\n  private _parseRedirectError(error: MessagingError): ParsedRedirectError {\r\n    if (!error) {\r\n      throw new Error(\"'error' is a required parameter and must be of type 'object'.\");\r\n    }\r\n    if (error.name !== \"LinkRedirectError\" || !error.info) {\r\n      throw error;\r\n    }\r\n    if (!error.info.hostname || !error.info.address) {\r\n      const msg = `The received redirect error from IotHub is malformed. ${error.stack}\\n${error.info}`;\r\n      throw new Error(msg);\r\n    }\r\n\r\n    const address: string = error.info.address;\r\n    const parsedResult = address.match(/5671\\/(.*)\\/\\$management/i);\r\n    if (parsedResult == undefined || parsedResult && parsedResult[1] == undefined) {\r\n      const msg = `Cannot parse the EventHub name from the given address: ${address} in the error: ` +\r\n        `${error.stack}\\n${JSON.stringify(error.info)}.\\nThe parsed result is: ${JSON.stringify(parsedResult)}.`;\r\n      throw new Error(msg);\r\n    }\r\n\r\n    return {\r\n      endpoint: error.info.hostname,\r\n      entityPath: parsedResult[1]\r\n    };\r\n  }\r\n\r\n  private _buildConnectionString(config: EHConfig): string {\r\n    const parts = new Map();\r\n    parts.set(\"Endpoint\", `sb://${config.endpoint}/`);\r\n    parts.set(\"SharedAccessKeyName\", config.sharedAccessKeyName);\r\n    parts.set(\"SharedAccessKey\", config.sharedAccessKey);\r\n    parts.set(\"EntityPath\", config.entityPath);\r\n    return Array.from(parts).map((part) => `${part[0]}=${part[1]}`).join(\";\");\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"./log\";\r\nimport { Delivery } from \"rhea-promise\";\r\nimport {\r\n  ApplicationTokenCredentials, DeviceTokenCredentials, UserTokenCredentials, MSITokenCredentials\r\n} from \"ms-rest-azure\";\r\nimport {\r\n  MessagingError, DataTransformer, TokenProvider, EventHubConnectionConfig, AadTokenProvider\r\n} from \"@azure/amqp-common\";\r\nimport { OnMessage, OnError } from \"./eventHubReceiver\";\r\nimport { EventData } from \"./eventData\";\r\nimport { ConnectionContext } from \"./connectionContext\";\r\nimport { EventHubPartitionRuntimeInformation, EventHubRuntimeInformation } from \"./managementClient\";\r\nimport { EventPosition } from \"./eventPosition\";\r\nimport { EventHubSender } from \"./eventHubSender\";\r\nimport { StreamingReceiver, ReceiveHandler } from \"./streamingReceiver\";\r\nimport { BatchingReceiver } from \"./batchingReceiver\";\r\nimport { IotHubClient } from \"./iothub/iothubClient\";\r\n\r\n/**\r\n * Describes the options that one can set while receiving messages.\r\n * @interface ReceiveOptions\r\n */\r\nexport interface ReceiveOptions {\r\n  /**\r\n   * @property {string} [name] The name of the receiver. If not provided then we will set a GUID by default.\r\n   */\r\n  name?: string;\r\n  /**\r\n   * @property {object} [eventPosition] The starting event position at which to start receiving messages.\r\n   * This is used to filter messages for the EventHub Receiver.\r\n   */\r\n  eventPosition?: EventPosition;\r\n  /**\r\n   * @property {string} [consumerGroup] The consumer group to which the receiver wants to connect to.\r\n   * If not provided then it will be connected to \"$default\" consumer group.\r\n   */\r\n  consumerGroup?: string;\r\n  /**\r\n   * @property {number} [prefetchCount] The upper limit of events this receiver will actively receive\r\n   * regardless of whether a receive operation is pending. Defaults to 1000.\r\n   */\r\n  prefetchCount?: number;\r\n  /**\r\n   * @property {number} [epoch] The epoch value that this receiver is currently using for partition ownership.\r\n   */\r\n  epoch?: number;\r\n  /**\r\n   * @property {string} [identifier] The receiver identifier that uniqely identifies the receiver.\r\n   */\r\n  identifier?: string;\r\n  /**\r\n   * @property {boolean} [enableReceiverRuntimeMetric] A value indicating whether the runtime metric of a receiver is enabled.\r\n   */\r\n  enableReceiverRuntimeMetric?: boolean;\r\n}\r\n\r\n/**\r\n * Describes the base client options.\r\n * @interface ClientOptionsBase\r\n */\r\nexport interface ClientOptionsBase {\r\n  /**\r\n   * @property {DataTransformer} [dataTransformer] The data transformer that will be used to encode\r\n   * and decode the sent and received messages respectively. If not provided then we will use the\r\n   * DefaultDataTransformer. The default transformer should handle majority of the cases. This\r\n   * option needs to be used only for specialized scenarios.\r\n   */\r\n  dataTransformer?: DataTransformer;\r\n  /**\r\n   * @property {string} [userAgent] The user agent that needs to be appended to the built in\r\n   * user agent string.\r\n   */\r\n  userAgent?: string;\r\n}\r\n\r\n/**\r\n * Describes the options that can be provided while creating the EventHub Client.\r\n * @interface ClientOptions\r\n */\r\nexport interface ClientOptions extends ClientOptionsBase {\r\n  /**\r\n   * @property {TokenProvider} [tokenProvider] - The token provider that provides the token for authentication.\r\n   * Default value: SasTokenProvider.\r\n   */\r\n  tokenProvider?: TokenProvider;\r\n}\r\n\r\n/**\r\n * @class EventHubClient\r\n * Describes the EventHub client.\r\n */\r\nexport class EventHubClient {\r\n\r\n  /**\r\n   * @property {string} [connectionId] The amqp connection id that uniquely identifies the connection within a process.\r\n   */\r\n  connectionId?: string;\r\n\r\n  /**\r\n   * @property {string} eventhubName The name of the Eventhub.\r\n   * @readonly\r\n   */\r\n  get eventhubName(): string {\r\n    return this._context.config.entityPath!;\r\n  }\r\n\r\n  /**\r\n   * @property {ConnectionContext} _context Describes the amqp connection context for the eventhub client.\r\n   * @private\r\n   */\r\n  private _context: ConnectionContext;\r\n\r\n  /**\r\n   * Instantiates a client pointing to the Event Hub given by this configuration.\r\n   *\r\n   * @constructor\r\n   * @param {EventHubConnectionConfig} config - The connection configuration to create the EventHub Client.\r\n   * @param {ClientOptions} options - The optional parameters that can be provided to the EventHub\r\n   * Client constructor.\r\n   */\r\n  constructor(config: EventHubConnectionConfig, options?: ClientOptions) {\r\n    if (!options) options = {};\r\n    this._context = ConnectionContext.create(config, options);\r\n  }\r\n\r\n  /**\r\n   * Closes the AMQP connection to the Event Hub for this client,\r\n   * returning a promise that will be resolved when disconnection is completed.\r\n   * @returns {Promise<void>} Promise<void>\r\n   */\r\n  async close(): Promise<void> {\r\n    try {\r\n      if (this._context.connection.isOpen()) {\r\n        // Close all the senders.\r\n        for (const senderName of Object.keys(this._context.senders)) {\r\n          await this._context.senders[senderName].close();\r\n        }\r\n        // Close all the receivers.\r\n        for (const receiverName of Object.keys(this._context.receivers)) {\r\n          await this._context.receivers[receiverName].close();\r\n        }\r\n        // Close the cbs session;\r\n        await this._context.cbsSession.close();\r\n        // Close the management session\r\n        await this._context.managementSession!.close();\r\n        await this._context.connection.close();\r\n        this._context.wasConnectionCloseCalled = true;\r\n        log.client(\"Closed the amqp connection '%s' on the client.\", this._context.connectionId);\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while closing the connection \"${this._context.connectionId}\": ${JSON.stringify(err)}`;\r\n      log.error(msg);\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sends the given message to the EventHub.\r\n   *\r\n   * @param {any} data                    Message to send.  Will be sent as UTF8-encoded JSON string.\r\n   * @param {string|number} [partitionId] Partition ID to which the event data needs to be sent. This should only be specified\r\n   * if you intend to send the event to a specific partition. When not specified EventHub will store the messages in a round-robin\r\n   * fashion amongst the different partitions in the EventHub.\r\n   *\r\n   * @returns {Promise<Delivery>} Promise<Delivery>\r\n   */\r\n  async send(data: EventData, partitionId?: string | number): Promise<Delivery> {\r\n    const sender = EventHubSender.create(this._context, partitionId);\r\n    return sender.send(data);\r\n  }\r\n\r\n  /**\r\n   * Send a batch of EventData to the EventHub. The \"message_annotations\", \"application_properties\" and \"properties\"\r\n   * of the first message will be set as that of the envelope (batch message).\r\n   *\r\n   * @param {Array<EventData>} datas  An array of EventData objects to be sent in a Batch message.\r\n   * @param {string|number} [partitionId] Partition ID to which the event data needs to be sent. This should only be specified\r\n   * if you intend to send the event to a specific partition. When not specified EventHub will store the messages in a round-robin\r\n   * fashion amongst the different partitions in the EventHub.\r\n   *\r\n   * @return {Promise<Delivery>} Promise<Delivery>\r\n   */\r\n  async sendBatch(datas: EventData[], partitionId?: string | number): Promise<Delivery> {\r\n    const sender = EventHubSender.create(this._context, partitionId);\r\n    return sender.sendBatch(datas);\r\n  }\r\n\r\n  /**\r\n   * Starts the receiver by establishing an AMQP session and an AMQP receiver link on the session. Messages will be passed to\r\n   * the provided onMessage handler and error will be passed to the provided onError handler.\r\n   *\r\n   * @param {string|number} partitionId                        Partition ID from which to receive.\r\n   * @param {OnMessage} onMessage                              The message handler to receive event data objects.\r\n   * @param {OnError} onError                                  The error handler to receive an error that occurs\r\n   * while receiving messages.\r\n   * @param {ReceiveOptions} [options]                         Options for how you'd like to receive messages.\r\n   *\r\n   * @returns {ReceiveHandler} ReceiveHandler - An object that provides a mechanism to stop receiving more messages.\r\n   */\r\n  receive(partitionId: string | number, onMessage: OnMessage, onError: OnError, options?: ReceiveOptions): ReceiveHandler {\r\n    if (typeof partitionId !== \"string\" && typeof partitionId !== \"number\") {\r\n      throw new Error(\"'partitionId' is a required parameter and must be of type: 'string' | 'number'.\");\r\n    }\r\n    const sReceiver = StreamingReceiver.create(this._context, partitionId, options);\r\n    this._context.receivers[sReceiver.name] = sReceiver;\r\n    return sReceiver.receive(onMessage, onError);\r\n  }\r\n\r\n  /**\r\n   * Receives a batch of EventData objects from an EventHub partition for a given count and a given max wait time in seconds, whichever\r\n   * happens first. This method can be used directly after creating the receiver object and **MUST NOT** be used along with the `start()` method.\r\n   *\r\n   * @param {string|number} partitionId                        Partition ID from which to receive.\r\n   * @param {number} maxMessageCount                           The maximum message count. Must be a value greater than 0.\r\n   * @param {number} [maxWaitTimeInSeconds]                    The maximum wait time in seconds for which the Receiver should wait\r\n   * to receiver the said amount of messages. If not provided, it defaults to 60 seconds.\r\n   * @param {ReceiveOptions} [options]                         Options for how you'd like to receive messages.\r\n   *\r\n   * @returns {Promise<Array<EventData>>} Promise<Array<EventData>>.\r\n   */\r\n  async receiveBatch(partitionId: string | number, maxMessageCount: number, maxWaitTimeInSeconds?: number, options?: ReceiveOptions): Promise<EventData[]> {\r\n    if (typeof partitionId !== \"string\" && typeof partitionId !== \"number\") {\r\n      throw new Error(\"'partitionId' is a required parameter and must be of type: 'string' | 'number'.\");\r\n    }\r\n    const bReceiver = BatchingReceiver.create(this._context, partitionId, options);\r\n    this._context.receivers[bReceiver.name] = bReceiver;\r\n    let error: MessagingError | undefined;\r\n    let result: EventData[] = [];\r\n    try {\r\n      result = await bReceiver.receive(maxMessageCount, maxWaitTimeInSeconds);\r\n    } catch (err) {\r\n      error = err;\r\n      log.error(\"[%s] Receiver '%s', an error occurred while receiving %d messages for %d max time:\\n %O\",\r\n        this._context.connectionId, bReceiver.name, maxMessageCount, maxWaitTimeInSeconds, err);\r\n    }\r\n    try {\r\n      await bReceiver.close();\r\n    } catch (err) {\r\n      // do nothing about it.\r\n    }\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Provides the eventhub runtime information.\r\n   * @returns {Promise<EventHubRuntimeInformation>} A promise that resolves with EventHubRuntimeInformation.\r\n   */\r\n  async getHubRuntimeInformation(): Promise<EventHubRuntimeInformation> {\r\n    try {\r\n      return await this._context.managementSession!.getHubRuntimeInformation();\r\n    } catch (err) {\r\n      log.error(\"An error occurred while getting the hub runtime information: %O\", err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Provides an array of partitionIds.\r\n   * @returns {Promise<Array<string>>} A promise that resolves with an Array of strings.\r\n   */\r\n  async getPartitionIds(): Promise<Array<string>> {\r\n    try {\r\n      const runtimeInfo = await this.getHubRuntimeInformation();\r\n      return runtimeInfo.partitionIds;\r\n    } catch (err) {\r\n      log.error(\"An error occurred while getting the partition ids: %O\", err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Provides information about the specified partition.\r\n   * @param {(string|number)} partitionId Partition ID for which partition information is required.\r\n   * @returns {Promise<EventHubPartitionRuntimeInformation>} A promise that resoloves with EventHubPartitionRuntimeInformation.\r\n   */\r\n  async getPartitionInformation(partitionId: string | number): Promise<EventHubPartitionRuntimeInformation> {\r\n    if (typeof partitionId !== \"string\" && typeof partitionId !== \"number\") {\r\n      throw new Error(\"'partitionId' is a required parameter and must be of type: 'string' | 'number'.\");\r\n    }\r\n    try {\r\n      return await this._context.managementSession!.getPartitionInformation(partitionId);\r\n    } catch (err) {\r\n      log.error(\"An error occurred while getting the partition information: %O\", err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an EventHub Client from connection string.\r\n   * @param {string} connectionString - Connection string of the form 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\r\n   * @param {string} [path] - EventHub path of the form 'my-event-hub-name'\r\n   * @param {ClientOptions} [options] Options that can be provided during client creation.\r\n   * @returns {EventHubClient} - An instance of the eventhub client.\r\n   */\r\n  static createFromConnectionString(connectionString: string, path?: string, options?: ClientOptions): EventHubClient {\r\n    if (!connectionString || (connectionString && typeof connectionString !== \"string\")) {\r\n      throw new Error(\"'connectionString' is a required parameter and must be of type: 'string'.\");\r\n    }\r\n    const config = EventHubConnectionConfig.create(connectionString, path);\r\n\r\n    if (!config.entityPath) {\r\n      throw new Error(`Either the connectionString must have \"EntityPath=<path-to-entity>\" or ` +\r\n        `you must provide \"path\", while creating the client`);\r\n    }\r\n    return new EventHubClient(config, options);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventHub Client from connection string.\r\n   * @param {string} iothubConnectionString - Connection string of the form 'HostName=iot-host-name;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\r\n   * @param {ClientOptions} [options] Options that can be provided during client creation.\r\n   * @returns {Promise<EventHubClient>} - Promise<EventHubClient>.\r\n   */\r\n  static async createFromIotHubConnectionString(iothubConnectionString: string, options?: ClientOptions): Promise<EventHubClient> {\r\n    if (!iothubConnectionString || (iothubConnectionString && typeof iothubConnectionString !== \"string\")) {\r\n      throw new Error(\"'connectionString' is a required parameter and must be of type: 'string'.\");\r\n    }\r\n    const connectionString = await new IotHubClient(iothubConnectionString).getEventHubConnectionString();\r\n    return EventHubClient.createFromConnectionString(connectionString, undefined, options);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventHub Client from a generic token provider.\r\n   * @param {string} host - Fully qualified domain name for Event Hubs. Most likely,\r\n   * <yournamespace>.servicebus.windows.net\r\n   * @param {string} entityPath - EventHub path of the form 'my-event-hub-name'\r\n   * @param {TokenProvider} tokenProvider - Your token provider that implements the TokenProvider interface.\r\n   * @param {ClientOptionsBase} options - The options that can be provided during client creation.\r\n   * @returns {EventHubClient} An instance of the Eventhub client.\r\n   */\r\n  static createFromTokenProvider(\r\n    host: string,\r\n    entityPath: string,\r\n    tokenProvider: TokenProvider,\r\n    options?: ClientOptionsBase): EventHubClient {\r\n    if (!host || (host && typeof host !== \"string\")) {\r\n      throw new Error(\"'host' is a required parameter and must be of type: 'string'.\");\r\n    }\r\n\r\n    if (!entityPath || (entityPath && typeof entityPath !== \"string\")) {\r\n      throw new Error(\"'entityPath' is a required parameter and must be of type: 'string'.\");\r\n    }\r\n\r\n    if (!tokenProvider || (tokenProvider && typeof tokenProvider !== \"object\")) {\r\n      throw new Error(\"'tokenProvider' is a required parameter and must be of type: 'object'.\");\r\n    }\r\n    if (!host.endsWith(\"/\")) host += \"/\";\r\n    const connectionString = `Endpoint=sb://${host};SharedAccessKeyName=defaultKeyName;` +\r\n      `SharedAccessKey=defaultKeyValue`;\r\n    if (!options) options = {};\r\n    const clientOptions: ClientOptions = options;\r\n    clientOptions.tokenProvider = tokenProvider;\r\n    return EventHubClient.createFromConnectionString(connectionString, entityPath, clientOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventHub Client from AADTokenCredentials.\r\n   * @param {string} host - Fully qualified domain name for Event Hubs. Most likely,\r\n   * <yournamespace>.servicebus.windows.net\r\n   * @param {string} entityPath - EventHub path of the form 'my-event-hub-name'\r\n   * @param {TokenCredentials} credentials - The AAD Token credentials. It can be one of the following:\r\n   * ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.\r\n   * @param {ClientOptionsBase} options - The options that can be provided during client creation.\r\n   * @returns {EventHubClient} An instance of the Eventhub client.\r\n   */\r\n  static createFromAadTokenCredentials(\r\n    host: string,\r\n    entityPath: string,\r\n    credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials,\r\n    options?: ClientOptionsBase): EventHubClient {\r\n    if (!credentials || (credentials && typeof credentials !== \"object\")) {\r\n      throw new Error(\"'credentials' is a required parameter and must be an instance of \" +\r\n        \"ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | \" +\r\n        \"MSITokenCredentials.\");\r\n    }\r\n    const tokenProvider = new AadTokenProvider(credentials);\r\n    return EventHubClient.createFromTokenProvider(host, entityPath, tokenProvider, options);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport { EventData, EventHubDeliveryAnnotations, EventHubMessageAnnotations } from \"./eventData\";\r\nexport {\r\n  Delivery, AmqpError, Message, MessageHeader, MessageProperties, Dictionary\r\n} from \"rhea-promise\";\r\nexport { ReceiverRuntimeInfo, OnMessage, OnError } from \"./eventHubReceiver\";\r\nexport { ReceiveHandler } from \"./streamingReceiver\";\r\nexport { EventHubClient, ReceiveOptions, ClientOptionsBase, ClientOptions } from \"./eventHubClient\";\r\nexport { EventPosition } from \"./eventPosition\";\r\nexport { EventHubPartitionRuntimeInformation, EventHubRuntimeInformation } from \"./managementClient\";\r\nimport { Constants } from \"@azure/amqp-common\";\r\nexport const aadEventHubsAudience = Constants.aadEventHubsAudience;\r\nexport {\r\n  delay, Timeout, EventHubConnectionStringModel, parseConnectionString,\r\n  IotHubConnectionStringModel, StorageConnectionStringModel, isIotHubConnectionString,\r\n  ErrorNameConditionMapper, ConditionStatusMapper, ConditionErrorNameMapper, MessagingError,\r\n  DataTransformer, DefaultDataTransformer, TokenType, TokenProvider, TokenInfo, AadTokenProvider,\r\n  SasTokenProvider, ConnectionConfig, EventHubConnectionConfig\r\n} from \"@azure/amqp-common\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nimport os from \"os\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nimport debugModule from \"debug\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\nchai.use(chaiAsPromised);\r\nconst debug = debugModule(\"azure:event-hubs:client-spec\");\r\nimport { EventHubClient } from \"../lib\";\r\nimport { packageJsonInfo } from \"../lib/util/constants\";\r\n\r\nfunction testFalsyValues(testFn: Function): void {\r\n  // tslint:disable-next-line: no-null-keyword\r\n  [null, undefined, \"\", 0].forEach(function (value: string | number | null | undefined): void {\r\n    testFn(value);\r\n  });\r\n}\r\n\r\ndescribe(\"EventHubClient\", function (): void {\r\n  describe(\"#constructor\", function (): void {\r\n    [\"endpoint\", \"entityPath\", \"sharedAccessKeyName\", \"sharedAccessKey\"].forEach(function (prop: string): void {\r\n      it(\"throws if config.\" + prop + \" is falsy\", function (): void {\r\n        testFalsyValues(function (falsyVal: any): void {\r\n          const test = function (): EventHubClient {\r\n            const config: any = { endpoint: \"a\", entityPath: \"b\", sharedAccessKey: \"c\", sharedAccessKeyName: \"d\" };\r\n            config[prop] = falsyVal;\r\n            return new EventHubClient(config as any);\r\n          };\r\n          test.should.throw(Error, `'${prop}' is a required property of ConnectionConfig.`);\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  describe(\".fromConnectionString\", function (): void {\r\n    it(\"throws when there is no connection string\", function (): void {\r\n      testFalsyValues(function (value: any): void {\r\n        const test = function (): EventHubClient {\r\n          return EventHubClient.createFromConnectionString(value);\r\n        };\r\n        test.should.throw(Error, \"'connectionString' is a required parameter and must be of type: 'string'.\");\r\n      });\r\n    });\r\n\r\n    it(\"throws when it cannot find the Event Hub path\", function (): void {\r\n      const endpoint = \"Endpoint=sb://abc\";\r\n      const test = function (): EventHubClient {\r\n        return EventHubClient.createFromConnectionString(endpoint);\r\n      };\r\n      test.should.throw(Error, `Either provide \"path\" or the \"connectionString\": \"${endpoint}\", must contain EntityPath=\"<path-to-the-entity>\".`);\r\n    });\r\n\r\n    it(\"creates an EventHubClient from a connection string\", function (): void {\r\n      const client = EventHubClient.createFromConnectionString(\"Endpoint=sb://a;SharedAccessKeyName=b;SharedAccessKey=c;EntityPath=d\");\r\n      client.should.be.an.instanceof(EventHubClient);\r\n    });\r\n\r\n    it(\"creates an EventHubClient from a connection string and an Event Hub path\", function (): void {\r\n      const client = EventHubClient.createFromConnectionString(\"Endpoint=sb://a;SharedAccessKeyName=b;SharedAccessKey=c\", \"path\");\r\n      client.should.be.an.instanceof(EventHubClient);\r\n    });\r\n  });\r\n});\r\n\r\nfunction arrayOfIncreasingNumbersFromZero(length: any): Array<string> {\r\n  // tslint:disable-next-line: no-null-keyword\r\n  return Array.apply(null, new Array(length)).map((x: any, i: any) => { return `${i}`; });\r\n}\r\n\r\nbefore(\"validate environment\", function (): void {\r\n  should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n    \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n  should.exist(process.env.EVENTHUB_NAME,\r\n    \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n});\r\n\r\nconst service = { connectionString: process.env.EVENTHUB_CONNECTION_STRING, path: process.env.EVENTHUB_NAME };\r\n\r\ndescribe(\"EventHubClient on \", function (): void {\r\n  let client: EventHubClient;\r\n\r\n  afterEach('close the connection', async function (): Promise<void> {\r\n    if (client) {\r\n      debug(\">>>>>>>> afterEach: closing the client.\");\r\n      await client.close();\r\n    }\r\n  });\r\n\r\n  describe(\"user-agent\", function (): void {\r\n    it(\"should correctly populate the default user agent\", function (done: Mocha.Done): void {\r\n      client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n      const packageVersion = packageJsonInfo.version;\r\n      const properties = client[\"_context\"].connection.options.properties;\r\n      should.equal(properties![\"user-agent\"], \"/js-event-hubs\");\r\n      should.equal(properties!.product, \"MSJSClient\");\r\n      should.equal(properties!.version, packageVersion);\r\n      should.equal(properties!.framework, `Node/${process.version}`);\r\n      should.equal(properties!.platform, `(${os.arch()}-${os.type()}-${os.release()})`);\r\n      done();\r\n    });\r\n\r\n    it(\"should correctly populate the custom user agent\", function (done: Mocha.Done): void {\r\n      const customua = \"/js-event-processor-host=0.2.0\";\r\n      client = EventHubClient.createFromConnectionString(service.connectionString!, service.path,\r\n        { userAgent: customua });\r\n      const packageVersion = packageJsonInfo.version;\r\n      const properties = client[\"_context\"].connection.options.properties;\r\n      should.equal(properties![\"user-agent\"], `/js-event-hubs,${customua}`);\r\n      should.equal(properties!.product, \"MSJSClient\");\r\n      should.equal(properties!.version, packageVersion);\r\n      should.equal(properties!.framework, `Node/${process.version}`);\r\n      should.equal(properties!.platform, `(${os.arch()}-${os.type()}-${os.release()})`);\r\n      done();\r\n    });\r\n\r\n    it(\"should throw an error if the user-agent string is greater than 128 characters in length\", function (done: Mocha.Done): void {\r\n      const customua = \"/js-event-processor-host=0.2.0zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\";\r\n      try {\r\n        client = EventHubClient.createFromConnectionString(service.connectionString!, service.path,\r\n          { userAgent: customua });\r\n      } catch (err) {\r\n        err.message.should.match(/The user-agent string cannot be more than 128 characters in length.*/ig);\r\n        done();\r\n      }\r\n\r\n    });\r\n  });\r\n\r\n\r\n  describe(\"#close\", function (): void {\r\n    it(\"is a no-op when the connection is already closed\", function (): Chai.PromisedAssertion {\r\n      client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n      return client.close().should.be.fulfilled;\r\n    });\r\n  });\r\n\r\n  describe(\"getPartitionIds\", function (): void {\r\n    it(\"returns an array of partition IDs\", async function (): Promise<void> {\r\n      client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n      const ids = await client.getPartitionIds();\r\n      ids.should.have.members(arrayOfIncreasingNumbersFromZero(ids.length));\r\n    });\r\n  });\r\n\r\n  describe(\"non existent eventhub\", function (): void {\r\n    it(\"should throw MessagingEntityNotFoundError while getting hub runtime info\", async function (): Promise<void> {\r\n      try {\r\n        client = EventHubClient.createFromConnectionString(service.connectionString!, \"bad\" + Math.random());\r\n        await client.getHubRuntimeInformation();\r\n      } catch (err) {\r\n        debug(err);\r\n        should.equal(err.name, \"MessagingEntityNotFoundError\");\r\n      }\r\n    });\r\n\r\n    it(\"should throw MessagingEntityNotFoundError while getting partition runtime info\", async function (): Promise<void> {\r\n      try {\r\n        client = EventHubClient.createFromConnectionString(service.connectionString!, \"bad\" + Math.random());\r\n        await client.getPartitionInformation(\"0\");\r\n      } catch (err) {\r\n        debug(err);\r\n        should.equal(err.name, \"MessagingEntityNotFoundError\");\r\n      }\r\n    });\r\n\r\n    it(\"should throw MessagingEntityNotFoundError while creating a sender\", async function (): Promise<void> {\r\n      try {\r\n        client = EventHubClient.createFromConnectionString(service.connectionString!, \"bad\" + Math.random());\r\n        await client.send({ body: \"Hello World\" }, \"0\");\r\n      } catch (err) {\r\n        debug(err);\r\n        should.equal(err.name, \"MessagingEntityNotFoundError\");\r\n      }\r\n    });\r\n\r\n    it(\"should throw MessagingEntityNotFoundError while creating a receiver\", async function (): Promise<void> {\r\n      try {\r\n        client = EventHubClient.createFromConnectionString(service.connectionString!, \"bad\" + Math.random());\r\n        await client.receiveBatch(\"0\", 10, 5);\r\n      } catch (err) {\r\n        debug(err);\r\n        should.equal(err.name, \"MessagingEntityNotFoundError\");\r\n      }\r\n    });\r\n  });\r\n\r\n  describe(\"non existent consumer group\", function (): void {\r\n    it(\"should throw MessagingEntityNotFoundError while creating a receiver\", function (done: Mocha.Done): void {\r\n      try {\r\n        client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n        debug(\">>>>>>>> client created.\");\r\n        const onMessage = (data: any) => {\r\n          debug(\">>>>> data: \", data);\r\n        };\r\n        const onError = (error: any) => {\r\n          debug(\">>>>>>>> error occurred\", error);\r\n          // sleep for 3 seconds so that receiver link and the session can be closed properly then\r\n          // in aftereach the connection can be closed. closing the connection while the receiver\r\n          // link and it's session are being closed (and the session being removed from rhea's\r\n          // internal map) can create havoc.\r\n          setTimeout(() => { done(should.equal(error.name, \"MessagingEntityNotFoundError\")); }, 3000);\r\n        };\r\n        client.receive(\"0\", onMessage, onError, { consumerGroup: \"some-randome-name\" });\r\n        debug(\">>>>>>>> attached the error handler on the receiver...\");\r\n      } catch (err) {\r\n        debug(\">>> Some error\", err);\r\n        throw new Error(\"This code path must not have hit.. \" + JSON.stringify(err));\r\n      }\r\n    });\r\n  });\r\n\r\n  describe(\"on invalid partition ids like\", function (): void {\r\n    const invalidIds = [\"XYZ\", \"-1\", \"1000\", \"-\", \" \"];\r\n    invalidIds.forEach(function (id: string): void {\r\n      it(`\"${id}\" should throw an error`, async function (): Promise<void> {\r\n        try {\r\n          client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n          await client.getPartitionInformation(id);\r\n        } catch (err) {\r\n          debug(`>>>> Received error - `, err);\r\n          should.exist(err);\r\n          err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n        }\r\n      });\r\n    });\r\n\r\n    // tslint:disable-next-line: no-null-keyword\r\n    const invalidIds2 = [\"\", null];\r\n    invalidIds2.forEach(function (id: string | null): void {\r\n      it(`\"${id}\" should throw an error`, async function (): Promise<void> {\r\n        try {\r\n          client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n          await client.getPartitionInformation(id as any);\r\n        } catch (err) {\r\n          debug(`>>>> Received error - `, err);\r\n          should.exist(err);\r\n        }\r\n      });\r\n    });\r\n  });\r\n}).timeout(60000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nchai.should();\r\n\r\nimport { EventData, Message } from \"../lib\";\r\n\r\nconst testAnnotations = {\r\n  \"x-opt-enqueued-time\": Date.now(),\r\n  \"x-opt-offset\": \"42\",\r\n  \"x-opt-sequence-number\": 0,\r\n  \"x-opt-partition-key\": \"key\"\r\n};\r\n\r\nconst testBody = \"{ \\\"foo\\\": \\\"bar\\\" }\";\r\n\r\nconst messageProperties = {\r\n  message_id: \"test_id\"\r\n};\r\n\r\nconst applicationProperties = {\r\n  propKey: \"propValue\"\r\n};\r\n\r\nconst testMessage: Message = {\r\n  body: testBody,\r\n  message_annotations: testAnnotations,\r\n  message_id: \"test_id\",\r\n  application_properties: applicationProperties\r\n};\r\nconst testEventData = EventData.fromAmqpMessage(testMessage);\r\nconst messageFromED = EventData.toAmqpMessage(testEventData);\r\n\r\ndescribe(\"EventData\", function (): void {\r\n  describe(\"fromAmqpMessage\", function (): void {\r\n    it(\"populates annotations with the message annotations\", function (): void {\r\n      testEventData.annotations!.should.equal(testAnnotations);\r\n    });\r\n\r\n    it(\"populates body with the message body\", function (): void {\r\n      testEventData.body.should.equal(testBody);\r\n    });\r\n\r\n    it(\"populates the properties with the message properties\", function (): void {\r\n      testEventData.properties!.message_id!.should.equal(messageProperties.message_id!);\r\n    });\r\n\r\n    it(\"populates the application properties with the message application properties\", function (): void {\r\n      testEventData.applicationProperties!.should.equal(applicationProperties);\r\n    });\r\n\r\n    it(\"preserves the raw amqp message as-is.\", function (): void {\r\n      testEventData._raw_amqp_mesage!.should.equal(testMessage);\r\n    });\r\n  });\r\n\r\n  describe(\"toAmqpMessage\", function (): void {\r\n    it(\"populates annotations with the message annotations\", function (): void {\r\n      messageFromED.message_annotations!.should.equal(testAnnotations);\r\n    });\r\n\r\n    it(\"populates body with the message body\", function (): void {\r\n      messageFromED.body.should.equal(testBody);\r\n    });\r\n\r\n    it(\"populates properties with the message properties\", function (): void {\r\n      messageFromED.message_id!.should.equal(messageProperties.message_id);\r\n    });\r\n\r\n    it(\"populates application_properties of the message\", function (): void {\r\n      messageFromED.application_properties!.should.equal(applicationProperties);\r\n    });\r\n  });\r\n\r\n  describe(\"properties\", function (): void {\r\n    it(\"enqueuedTimeUtc gets the enqueued time from system properties\", function (): void {\r\n      const testEventData = EventData.fromAmqpMessage(testMessage);\r\n      testEventData.enqueuedTimeUtc!.getTime().should.equal(testAnnotations[\"x-opt-enqueued-time\"]);\r\n    });\r\n\r\n    it(\"offset gets the offset from system properties\", function (): void {\r\n      const testEventData = EventData.fromAmqpMessage(testMessage);\r\n      testEventData.offset!.should.equal(testAnnotations[\"x-opt-offset\"]);\r\n    });\r\n\r\n    it(\"sequenceNumber gets the sequence number from system properties\", function (): void {\r\n      const testEventData = EventData.fromAmqpMessage(testMessage);\r\n      testEventData.sequenceNumber!.should.equal(testAnnotations[\"x-opt-sequence-number\"]);\r\n    });\r\n\r\n    it(\"partitionKey gets the sequence number from system properties\", function (): void {\r\n      const testEventData = EventData.fromAmqpMessage(testMessage);\r\n      testEventData.partitionKey!.should.equal(testAnnotations[\"x-opt-partition-key\"]);\r\n    });\r\n  });\r\n});\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nchai.should();\r\n\r\nimport { EventPosition } from \"../lib\";\r\n\r\ndescribe(\"EventPosition\", function (): void {\r\n  describe(\"happy\", function (): void {\r\n    it(\"should create from an offset with inclusive false\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-offset > '1234'\";\r\n      const pos = EventPosition.fromOffset(\"1234\");\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from an offset with inclusive true\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-offset >= '1234'\";\r\n      const pos = EventPosition.fromOffset(\"1234\", true);\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from a sequence with inclusive false\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-sequence-number > '0'\";\r\n      const pos = EventPosition.fromSequenceNumber(0);\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from a sequence with inclusive true\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-sequence-number >= '0'\";\r\n      const pos = EventPosition.fromSequenceNumber(0, true);\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from enqueuedTime with Date as Date\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-enqueued-time > '1537406052971'\";\r\n      const d = new Date(\"2018-09-20T01:14:12.971Z\");\r\n      const pos = EventPosition.fromEnqueuedTime(d);\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from enqueuedTime with Date as number\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-enqueued-time > '1537406052971'\";\r\n      const d = new Date(\"2018-09-20T01:14:12.971Z\").getTime();\r\n      const pos = EventPosition.fromEnqueuedTime(d);\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create custom filter\", function (done: Mocha.Done): void {\r\n      const custom = \"amqp.annotation.x-opt-custom > 'foo-bar'\";\r\n      const pos = EventPosition.withCustomFilter(custom);\r\n      custom.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from an offset from start\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-offset > '-1'\";\r\n      const pos = EventPosition.fromStart();\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n\r\n    it(\"should create from an offset from end\", function (done: Mocha.Done): void {\r\n      const result = \"amqp.annotation.x-opt-offset > '@latest'\";\r\n      const pos = EventPosition.fromEnd();\r\n      result.should.equal(pos.getExpression());\r\n      done();\r\n    });\r\n  });\r\n  describe(\"sad\", function (): void {\r\n    it(\"should fail if empty string is provided for offset\", function (done: Mocha.Done): void {\r\n      try {\r\n        EventPosition.fromOffset(\"\");\r\n      } catch (err) {\r\n        err.message.should.match(/'offset' is a required parameter and must be a non-empty string.*/ig);\r\n      }\r\n      done();\r\n    });\r\n  });\r\n});\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst debug = debugModule(\"azure:event-hubs:hubruntime-spec\");\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nimport { EventHubClient } from \"../lib\";\r\ndescribe(\"RuntimeInformation\", function (): void {\r\n  let client: EventHubClient;\r\n  const service = { connectionString: process.env.EVENTHUB_CONNECTION_STRING, path: process.env.EVENTHUB_NAME };\r\n\r\n  before(\"validate environment\", function (): void {\r\n    should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n      \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_NAME,\r\n      \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n  });\r\n\r\n  afterEach('close the connection', async function (): Promise<void> {\r\n    await client.close();\r\n  });\r\n\r\n  function arrayOfIncreasingNumbersFromZero(length: any): Array<string> {\r\n    return Array.apply(undefined, new Array(length)).map((x: any, i: any) => { return `${i}`; });\r\n  }\r\n\r\n  it(\"gets the hub runtime information\", async function (): Promise<void> {\r\n    client = EventHubClient.createFromConnectionString(service.connectionString!, service.path,\r\n      { userAgent: \"/js-event-processor-host=0.2.0\" });\r\n    const hubRuntimeInfo = await client.getHubRuntimeInformation();\r\n    debug(hubRuntimeInfo);\r\n    hubRuntimeInfo.path.should.equal(service.path);\r\n    hubRuntimeInfo.type.should.equal(\"com.microsoft:eventhub\");\r\n    hubRuntimeInfo.partitionIds.should.have.members(arrayOfIncreasingNumbersFromZero(hubRuntimeInfo.partitionIds.length));\r\n    hubRuntimeInfo.partitionCount.should.equal(hubRuntimeInfo.partitionIds.length);\r\n    hubRuntimeInfo.createdAt.should.be.instanceof(Date);\r\n  });\r\n\r\n  it(\"gets the partition runtime information with partitionId as a string\", async function (): Promise<void> {\r\n    client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n    const partitionRuntimeInfo = await client.getPartitionInformation(\"0\");\r\n    debug(partitionRuntimeInfo);\r\n    partitionRuntimeInfo.partitionId.should.equal(\"0\");\r\n    partitionRuntimeInfo.type.should.equal(\"com.microsoft:partition\");\r\n    partitionRuntimeInfo.hubPath.should.equal(service.path);\r\n    partitionRuntimeInfo.lastEnqueuedTimeUtc.should.be.instanceof(Date);\r\n    should.exist(partitionRuntimeInfo.lastSequenceNumber);\r\n    should.exist(partitionRuntimeInfo.lastEnqueuedOffset);\r\n  });\r\n\r\n  it(\"gets the partition runtime information with partitionId as a number\", async function (): Promise<void> {\r\n    client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n    const partitionRuntimeInfo = await client.getPartitionInformation(0);\r\n    debug(partitionRuntimeInfo);\r\n    partitionRuntimeInfo.partitionId.should.equal(\"0\");\r\n    partitionRuntimeInfo.type.should.equal(\"com.microsoft:partition\");\r\n    partitionRuntimeInfo.hubPath.should.equal(service.path);\r\n    partitionRuntimeInfo.lastEnqueuedTimeUtc.should.be.instanceof(Date);\r\n    should.exist(partitionRuntimeInfo.lastSequenceNumber);\r\n    should.exist(partitionRuntimeInfo.lastEnqueuedOffset);\r\n  });\r\n\r\n  it(\"should fail the partition runtime information when partitionId is not a number or string\", async function (): Promise<void> {\r\n    client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n    try {\r\n      await client.getPartitionInformation(true as any);\r\n    } catch (err) {\r\n      err.message.should.equal(\"'partitionId' is a required parameter and must be of type: 'string' | 'number'.\");\r\n    }\r\n  });\r\n\r\n  it(\"should fail the partition runtime information when partitionId is empty string\", async function (): Promise<void> {\r\n    client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n    try {\r\n      await client.getPartitionInformation(\"\");\r\n    } catch (err) {\r\n      err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n    }\r\n  });\r\n\r\n  it(\"should fail the partition runtime information when partitionId is a negative number\", async function (): Promise<void> {\r\n    client = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n    try {\r\n      await client.getPartitionInformation(-1);\r\n    } catch (err) {\r\n      err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n    }\r\n  });\r\n}).timeout(60000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport dotenv from \"dotenv\";\r\nimport chai from \"chai\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst debug = debugModule(\"azure:event-hubs:iothub-spec\");\r\nimport { EventHubClient } from \"../lib\";\r\ndotenv.config();\r\n\r\ndescribe(\"EventHub Client with iothub connection string\", function (): void {\r\n  const service = { connectionString: process.env.IOTHUB_CONNECTION_STRING };\r\n  let client: EventHubClient;\r\n  before(\"validate environment\", async function (): Promise<void> {\r\n    should.exist(process.env.IOTHUB_CONNECTION_STRING,\r\n      \"define IOTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n  });\r\n\r\n  afterEach(\"close the connection\", async function (): Promise<void> {\r\n    if (client) {\r\n      debug(\">>> After Each, closing the client...\");\r\n      await client.close();\r\n    }\r\n  });\r\n\r\n  it(\"should be able to get hub runtime info\", async function (): Promise<void> {\r\n    client = await EventHubClient.createFromIotHubConnectionString(service.connectionString!);\r\n    const runtimeInfo = await client.getHubRuntimeInformation();\r\n    debug(\">>> RuntimeInfo: \", runtimeInfo);\r\n    should.exist(runtimeInfo);\r\n    runtimeInfo.type.should.equal(\"com.microsoft:eventhub\");\r\n    runtimeInfo.partitionCount.should.be.greaterThan(0);\r\n    runtimeInfo.partitionIds.length.should.be.greaterThan(0);\r\n  });\r\n\r\n  it(\"should be able to receive messages from the event hub\", async function (): Promise<void> {\r\n    client = await EventHubClient.createFromIotHubConnectionString(service.connectionString!);\r\n    const datas = await client.receiveBatch(\"0\", 15, 10);\r\n    debug(\">>>> Received events from partition %s, %O\", \"0\", datas);\r\n  });\r\n}).timeout(30000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport chai from \"chai\";\r\nimport assert from \"assert\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst debug = debugModule(\"azure:event-hubs:misc-spec\");\r\nimport { EventPosition, EventHubClient, EventData, EventHubRuntimeInformation } from \"../lib\";\r\nimport { BatchingReceiver } from \"../lib/batchingReceiver\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\ndescribe(\"Misc tests\", function (): void {\r\n  const service = { connectionString: process.env.EVENTHUB_CONNECTION_STRING, path: process.env.EVENTHUB_NAME };\r\n  const client: EventHubClient = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n  let breceiver: BatchingReceiver;\r\n  let hubInfo: EventHubRuntimeInformation;\r\n  before(\"validate environment\", async function (): Promise<void> {\r\n    should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n      \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_NAME,\r\n      \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n    hubInfo = await client.getHubRuntimeInformation();\r\n  });\r\n\r\n  after(\"close the connection\", async function (): Promise<void> {\r\n    await client.close();\r\n  });\r\n\r\n  it(\"should be able to send and receive a large message correctly\", async function (): Promise<void> {\r\n    const bodysize = 220 * 1024;\r\n    const partitionId = hubInfo.partitionIds[0];\r\n    const msgString = \"A\".repeat(220 * 1024);\r\n    const msgBody = Buffer.from(msgString);\r\n    const obj: EventData = { body: msgBody };\r\n    const offset = (await client.getPartitionInformation(partitionId)).lastEnqueuedOffset;\r\n    debug(`Partition ${partitionId} has last message with offset ${offset}.`);\r\n    debug(\"Sending one message with %d bytes.\", bodysize);\r\n    breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(offset) });\r\n    let data = await breceiver.receive(5, 10);\r\n    data.length.should.equal(0, \"Unexpected to receive message before client sends it\");\r\n    await client.send(obj, partitionId);\r\n    debug(\"Successfully sent the large message.\");\r\n    data = await breceiver.receive(5, 30);\r\n    debug(\"Closing the receiver..\");\r\n    await breceiver.close();\r\n    debug(\"received message: \", data.length);\r\n    should.exist(data);\r\n    data.length.should.equal(1);\r\n    data[0].body.toString().should.equal(msgString);\r\n    should.not.exist((data[0].properties || {}).message_id);\r\n  });\r\n\r\n  it(\"should be able to send and receive a JSON object as a message correctly\", async function (): Promise<void> {\r\n    const partitionId = hubInfo.partitionIds[0];\r\n    const msgBody = {\r\n      id: '123-456-789',\r\n      weight: 10,\r\n      isBlue: true,\r\n      siblings: [\r\n        {\r\n          id: '098-789-564',\r\n          weight: 20,\r\n          isBlue: false,\r\n        }\r\n      ]\r\n    };\r\n    const obj: EventData = { body: msgBody };\r\n    const offset = (await client.getPartitionInformation(partitionId)).lastEnqueuedOffset;\r\n    debug(`Partition ${partitionId} has last message with offset ${offset}.`);\r\n    debug(\"Sending one message %O\", obj);\r\n    breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(offset) });\r\n    await client.send(obj, partitionId);\r\n    debug(\"Successfully sent the large message.\");\r\n    const data = await breceiver.receive(5, 30);\r\n    await breceiver.close();\r\n    debug(\"received message: \", data);\r\n    should.exist(data);\r\n    data.length.should.equal(1);\r\n    debug(\"Received message: %O\", data);\r\n    assert.deepEqual(data[0].body, msgBody);\r\n    should.not.exist((data[0].properties || {}).message_id);\r\n  });\r\n\r\n  it(\"should be able to send and receive an array as a message correctly\", async function (): Promise<void> {\r\n    const partitionId = hubInfo.partitionIds[0];\r\n    const msgBody = [\r\n      {\r\n        id: '098-789-564',\r\n        weight: 20,\r\n        isBlue: false,\r\n      },\r\n      10,\r\n      20,\r\n      \"some string\"\r\n    ];\r\n    const obj: EventData = { body: msgBody, properties: { message_id: uuid() } };\r\n    const offset = (await client.getPartitionInformation(partitionId)).lastEnqueuedOffset;\r\n    debug(`Partition ${partitionId} has last message with offset ${offset}.`);\r\n    debug(\"Sending one message %O\", obj);\r\n    breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(offset) });\r\n    await client.send(obj, partitionId);\r\n    debug(\"Successfully sent the large message.\");\r\n    const data = await breceiver.receive(5, 30);\r\n    await breceiver.close();\r\n    debug(\"received message: \", data);\r\n    should.exist(data);\r\n    data.length.should.equal(1);\r\n    debug(\"Received message: %O\", data);\r\n    assert.deepEqual(data[0].body, msgBody);\r\n    assert.strictEqual(data[0].properties!.message_id, obj.properties!.message_id);\r\n  });\r\n\r\n  it(\"should be able to send a boolean as a message correctly\", async function (): Promise<void> {\r\n    const partitionId = hubInfo.partitionIds[0];\r\n    const msgBody = true;\r\n    const obj: EventData = { body: msgBody };\r\n    const offset = (await client.getPartitionInformation(partitionId)).lastEnqueuedOffset;\r\n    debug(`Partition ${partitionId} has last message with offset ${offset}.`);\r\n    debug(\"Sending one message %O\", obj);\r\n    breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(offset) });\r\n    await client.send(obj, partitionId);\r\n    debug(\"Successfully sent the large message.\");\r\n    const data = await breceiver.receive(5, 30);\r\n    await breceiver.close();\r\n    debug(\"received message: \", data);\r\n    should.exist(data);\r\n    data.length.should.equal(1);\r\n    debug(\"Received message: %O\", data);\r\n    assert.deepEqual(data[0].body, msgBody);\r\n    should.not.exist((data[0].properties || {}).message_id);\r\n  });\r\n\r\n  it(\"should be able to send and receive batched messages correctly\", async function (): Promise<void> {\r\n    try {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const offset = (await client.getPartitionInformation(partitionId)).lastEnqueuedOffset;\r\n      debug(`Partition ${partitionId} has last message with offset ${offset}.`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(offset) });\r\n      let data = await breceiver.receive(5, 10);\r\n      data.length.should.equal(0, \"Unexpected to receive message before client sends it\");\r\n      const messageCount = 5;\r\n      const d: EventData[] = [];\r\n      for (let i = 0; i < messageCount; i++) {\r\n        const obj: EventData = { body: `Hello EH ${i}` };\r\n        d.push(obj);\r\n      }\r\n      d[0].partitionKey = 'pk1234656';\r\n\r\n      await client.sendBatch(d, partitionId);\r\n      debug(\"Successfully sent 5 messages batched together.\");\r\n      data = await breceiver.receive(5, 30);\r\n      await breceiver.close();\r\n      debug(\"received message: \", data);\r\n      should.exist(data);\r\n      data.length.should.equal(5);\r\n      for (const message of data) {\r\n        should.not.exist((message.properties || {}).message_id);\r\n      }\r\n    } catch (err) {\r\n      debug(\"should not have happened, uber catch....\", err);\r\n      throw err;\r\n    }\r\n  });\r\n\r\n  it(\"should be able to send and receive batched messages as JSON objects correctly\", async function (): Promise<void> {\r\n    try {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const offset = (await client.getPartitionInformation(partitionId)).lastEnqueuedOffset;\r\n      debug(`Partition ${partitionId} has last message with offset ${offset}.`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(offset) });\r\n      let data = await breceiver.receive(5, 10);\r\n      data.length.should.equal(0, \"Unexpected to receive message before client sends it\");\r\n      const messageCount = 5;\r\n      const d: EventData[] = [];\r\n      for (let i = 0; i < messageCount; i++) {\r\n        const obj: EventData = {\r\n          body: {\r\n            id: '123-456-789',\r\n            count: i,\r\n            weight: 10,\r\n            isBlue: true,\r\n            siblings: [\r\n              {\r\n                id: '098-789-564',\r\n                weight: 20,\r\n                isBlue: false,\r\n              }\r\n            ]\r\n          },\r\n          properties: {\r\n            message_id: uuid()\r\n          }\r\n        };\r\n        d.push(obj);\r\n      }\r\n      d[0].partitionKey = 'pk1234656';\r\n\r\n      await client.sendBatch(d, partitionId);\r\n      debug(\"Successfully sent 5 messages batched together.\");\r\n      data = await breceiver.receive(5, 30);\r\n      await breceiver.close();\r\n      debug(\"received message: \", data);\r\n      should.exist(data);\r\n      data[0].body.count.should.equal(0);\r\n      data.length.should.equal(5);\r\n      for (const [index, message] of data.entries()) {\r\n        assert.strictEqual(message.properties!.message_id, d[index].properties!.message_id);\r\n      }\r\n    } catch (err) {\r\n      debug(\"should not have happened, uber catch....\", err);\r\n      throw err;\r\n    }\r\n  });\r\n\r\n  it(\"should consistently send messages with partitionkey to a partitionId\", async function (): Promise<void> {\r\n    const msgToSendCount = 50;\r\n    const partitionOffsets: any = {};\r\n    debug(\"Discovering end of stream on each partition.\");\r\n    const partitionIds = hubInfo.partitionIds;\r\n    for (const id of partitionIds) {\r\n      const pInfo = await client.getPartitionInformation(id);\r\n      partitionOffsets[id] = pInfo.lastEnqueuedOffset;\r\n      debug(`Partition ${id} has last message with offset ${pInfo.lastEnqueuedOffset}.`);\r\n    }\r\n    debug(\"Sending %d messages.\", msgToSendCount);\r\n    function getRandomInt(max: number): number {\r\n      return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n    for (let i = 0; i < msgToSendCount; i++) {\r\n      const partitionKey = getRandomInt(10);\r\n      await client.send({ body: \"Hello EventHub \" + i, partitionKey: partitionKey.toString() });\r\n    }\r\n    debug(\"Starting to receive all messages from each partition.\");\r\n    const partitionMap: any = {};\r\n    let totalReceived = 0;\r\n    for (const id of partitionIds) {\r\n      const data = await client.receiveBatch(id, 50, 10, { eventPosition: EventPosition.fromOffset(partitionOffsets[id]) });\r\n      debug(`Received ${data.length} messages from partition ${id}.`);\r\n      for (const d of data) {\r\n        debug(\">>>> _raw_amqp_mesage: \", d._raw_amqp_mesage);\r\n        const pk = d.partitionKey as string;\r\n        debug(\"pk: \", pk);\r\n        if (partitionMap[pk] && partitionMap[pk] !== id) {\r\n          debug(`#### Error: Received a message from partition ${id} with partition key ${pk}, whereas the same key was observed on partition ${partitionMap[pk]} before.`);\r\n          assert(partitionMap[pk] === id);\r\n        }\r\n        partitionMap[pk] = id;\r\n        debug(\"partitionMap \", partitionMap);\r\n      }\r\n      totalReceived += data.length;\r\n    }\r\n    totalReceived.should.equal(msgToSendCount);\r\n  });\r\n}).timeout(60000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nimport uuid from \"uuid/v4\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst debug = debugModule(\"azure:event-hubs:receiver-spec\");\r\nimport { EventPosition, EventHubClient, EventData, EventHubRuntimeInformation, MessagingError } from \"../lib\";\r\nimport { BatchingReceiver } from \"../lib/batchingReceiver\";\r\nimport { ReceiveHandler } from \"../lib/streamingReceiver\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\ndescribe(\"EventHub Receiver\", function (): void {\r\n  const service = { connectionString: process.env.EVENTHUB_CONNECTION_STRING, path: process.env.EVENTHUB_NAME };\r\n  const client: EventHubClient = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n  let breceiver: BatchingReceiver;\r\n  let hubInfo: EventHubRuntimeInformation;\r\n  before(\"validate environment\", async function (): Promise<void> {\r\n    should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n      \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_NAME,\r\n      \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n    hubInfo = await client.getHubRuntimeInformation();\r\n  });\r\n\r\n  after(\"close the connection\", async function (): Promise<void> {\r\n    await client.close();\r\n  });\r\n\r\n  afterEach(\"close the sender link\", async function (): Promise<void> {\r\n    if (breceiver) {\r\n      await breceiver.close();\r\n      debug(\"After each - Batching Receiver closed.\");\r\n    }\r\n  });\r\n\r\n  describe(\"with partitionId 0 as number\", function (): void {\r\n    it(\"should work for receiveBatch\", async function (): Promise<void> {\r\n      const result = await client.receiveBatch(0, 10, 20, { eventPosition: EventPosition.fromSequenceNumber(0) });\r\n      should.equal(true, Array.isArray(result));\r\n    });\r\n\r\n    it(\"should work for receive\", function (done: Mocha.Done): void {\r\n      let rcvHandler: ReceiveHandler;\r\n      let stopCalled = false;\r\n      const onError = (error: MessagingError | Error) => {\r\n        debug(\">>>> An error occurred: %O\", error);\r\n      };\r\n      const onMsg = (data: EventData) => {\r\n        debug(\">>>> Received Data: %O\", data);\r\n        if (!stopCalled) {\r\n          stopCalled = true;\r\n          rcvHandler.stop().then(() => {\r\n            done();\r\n          }).catch(() => {\r\n            done();\r\n          });\r\n        }\r\n      };\r\n      rcvHandler = client.receive(0, onMsg, onError, { epoch: 1, eventPosition: EventPosition.fromOffset(\"0\") });\r\n    });\r\n  });\r\n\r\n  describe(\"with EventPosition specified as\", function (): void {\r\n    it(\"'from end of stream' should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      for (let i = 0; i < 10; i++) {\r\n        const ed: EventData = {\r\n          body: \"Hello awesome world \" + i\r\n        };\r\n        await client.send(ed, partitionId);\r\n        debug(\"sent message - \" + i);\r\n      }\r\n      debug(\"Creating new receiver with offset EndOfStream\");\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromEnd() });\r\n      const data1 = await breceiver.receive(10, 10);\r\n      data1.length.should.equal(0, \"Unexpected message received when using EventPosition.fromEnd()\");\r\n      // send a new message. We should only receive this new message.\r\n      const uid = uuid();\r\n      const ed: EventData = {\r\n        body: \"New message\",\r\n        applicationProperties: {\r\n          stamp: uid\r\n        }\r\n      };\r\n      await client.send(ed, partitionId);\r\n      debug(\">>>>>>> Sent the new message after creating the receiver. We should only receive this message.\");\r\n      const data2 = await breceiver.receive(10, 20);\r\n      debug(\"received messages: \", data2);\r\n      data2.length.should.equal(1, \"Failed to receive the expected one single message\");\r\n      data2[0].applicationProperties!.stamp.should.equal(uid, \"Message received with unexpected uid\");\r\n      debug(\"Next receive on this partition should not receive any messages.\");\r\n      const data3 = await breceiver.receive(10, 10);\r\n      data3.length.should.equal(0, \"Unexpected message received\");\r\n    });\r\n\r\n    it(\"'after a particular offset' should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const pInfo = await client.getPartitionInformation(partitionId);\r\n      debug(`Creating new receiver with last enqueued offset: \"${pInfo.lastEnqueuedOffset}\".`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, parseInt(partitionId), { eventPosition: EventPosition.fromOffset(pInfo.lastEnqueuedOffset) });\r\n      debug(\"Establishing the receiver link...\");\r\n      const d = await breceiver.receive(10, 10);\r\n      d.length.should.equal(0);\r\n      // send a new message. We should only receive this new message.\r\n      const uid = uuid();\r\n      const ed: EventData = {\r\n        body: \"New message after last enqueued offset\",\r\n        applicationProperties: {\r\n          stamp: uid\r\n        }\r\n      };\r\n      await client.send(ed, \"0\");\r\n      debug(\"Sent the new message after creating the receiver. We should only receive this message.\");\r\n      const data = await breceiver.receive(10, 20);\r\n      debug(\"received messages: \", data);\r\n      data.length.should.equal(1);\r\n      data[0].applicationProperties!.stamp.should.equal(uid);\r\n      debug(\"Next receive on this partition should not receive any messages.\");\r\n      const data2 = await breceiver.receive(10, 10);\r\n      data2.length.should.equal(0);\r\n    });\r\n\r\n    it(\"'after a particular offset with isInclusive true' should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const uid = uuid();\r\n      const ed: EventData = {\r\n        body: \"New message after last enqueued offset\",\r\n        applicationProperties: {\r\n          stamp: uid\r\n        }\r\n      };\r\n      await client.send(ed, partitionId);\r\n      debug(`Sent message 1 with stamp: ${uid}.`);\r\n      const pInfo = await client.getPartitionInformation(partitionId);\r\n      const uid2 = uuid();\r\n      const ed2: EventData = {\r\n        body: \"New message after last enqueued offset\",\r\n        applicationProperties: {\r\n          stamp: uid2\r\n        }\r\n      };\r\n      await client.send(ed2, partitionId);\r\n      debug(`Sent message 2 with stamp: ${uid} after getting the enqueued offset.`);\r\n      debug(`Creating new receiver with last enqueued offset: \"${pInfo.lastEnqueuedOffset}\".`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromOffset(pInfo.lastEnqueuedOffset, true) });\r\n      debug(\"We should receive the last 2 messages.\");\r\n      const data = await breceiver.receive(10, 30);\r\n      debug(\"received messages: \", data);\r\n      data.length.should.equal(2, \"Failed to receive the two expected messages\");\r\n      data[0].applicationProperties!.stamp.should.equal(uid, \"First message has unexpected uid\");\r\n      data[1].applicationProperties!.stamp.should.equal(uid2, \"Second message has unexpected uid\");\r\n      debug(\"Next receive on this partition should not receive any messages.\");\r\n      const data2 = await breceiver.receive(10, 10);\r\n      data2.length.should.equal(0, \"Unexpected message received\");\r\n    });\r\n\r\n    it(\"'from a particular enqueued time' should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const pInfo = await client.getPartitionInformation(partitionId);\r\n      debug(`Creating new receiver with last enqueued time: \"${pInfo.lastEnqueuedTimeUtc}\".`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromEnqueuedTime(pInfo.lastEnqueuedTimeUtc) });\r\n      debug(\"Establishing the receiver link...\");\r\n      const d = await breceiver.receive(10, 10);\r\n      d.length.should.equal(0, \"Unexpected message received before sending any message\");\r\n      // send a new message. We should only receive this new message.\r\n      const uid = uuid();\r\n      const ed: EventData = {\r\n        body: \"New message after last enqueued time \" + pInfo.lastEnqueuedTimeUtc,\r\n        applicationProperties: {\r\n          stamp: uid\r\n        }\r\n      };\r\n      await client.send(ed, partitionId);\r\n      debug(\"Sent the new message after creating the receiver. We should only receive this message.\");\r\n      const data = await breceiver.receive(10, 20);\r\n      debug(\"received messages: \", data);\r\n      data.length.should.equal(1, \"Failed to received the expected single message\");\r\n      data[0].applicationProperties!.stamp.should.equal(uid);\r\n      debug(\"Next receive on this partition should not receive any messages.\");\r\n      const data2 = await breceiver.receive(10, 10);\r\n      data2.length.should.equal(0, \"Unexpected message received\");\r\n    });\r\n\r\n    it(\"'after the particular sequence number' should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const pInfo = await client.getPartitionInformation(partitionId);\r\n      // send a new message. We should only receive this new message.\r\n      const uid = uuid();\r\n      const ed: EventData = {\r\n        body: \"New message after last enqueued sequence number \" + pInfo.lastSequenceNumber,\r\n        applicationProperties: {\r\n          stamp: uid\r\n        }\r\n      };\r\n      await client.send(ed, partitionId);\r\n      debug(\"Sent the new message after getting the partition runtime information. We should only receive this message.\");\r\n      debug(`Creating new receiver with last enqueued sequence number: \"${pInfo.lastSequenceNumber}\".`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromSequenceNumber(pInfo.lastSequenceNumber) });\r\n      const data = await breceiver.receive(10, 20);\r\n      debug(\"received messages: \", data);\r\n      data.length.should.equal(1, \"Failed to receive the expected single message\");\r\n      data[0].applicationProperties!.stamp.should.equal(uid, \"Received message has unexpected uid\");\r\n      debug(\"Next receive on this partition should not receive any messages.\");\r\n      const data2 = await breceiver.receive(10, 10);\r\n      data2.length.should.equal(0, \"Unexpected message received\");\r\n    });\r\n\r\n    it(\"'after the particular sequence number' with isInclusive true should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const uid = uuid();\r\n      const ed: EventData = {\r\n        body: \"New message before getting the last sequence number\",\r\n        applicationProperties: {\r\n          stamp: uid\r\n        }\r\n      };\r\n      await client.send(ed, partitionId);\r\n      debug(`Sent message 1 with stamp: ${uid}.`);\r\n      const pInfo = await client.getPartitionInformation(partitionId);\r\n      const uid2 = uuid();\r\n      const ed2: EventData = {\r\n        body: \"New message after the last enqueued offset\",\r\n        applicationProperties: {\r\n          stamp: uid2\r\n        }\r\n      };\r\n      await client.send(ed2, partitionId);\r\n      debug(`Sent message 2 with stamp: ${uid}.`);\r\n      debug(`Creating new receiver with last sequence number: \"${pInfo.lastSequenceNumber}\".`);\r\n      breceiver = BatchingReceiver.create((client as any)._context, partitionId, { eventPosition: EventPosition.fromSequenceNumber(pInfo.lastSequenceNumber, true) });\r\n      debug(\"We should receive the last 2 messages.\");\r\n      const data = await breceiver.receive(10, 30);\r\n      debug(\"received messages: \", data);\r\n      data.length.should.equal(2, \"Failed to received two expected messages\");\r\n      data[0].applicationProperties!.stamp.should.equal(uid, \"Message 1 has unexpected uid\");\r\n      data[1].applicationProperties!.stamp.should.equal(uid2, \"Message 2 has unexpected uid\");\r\n      debug(\"Next receive on this partition should not receive any messages.\");\r\n      const data2 = await breceiver.receive(10, 10);\r\n      data2.length.should.equal(0, \"Unexpected message received\");\r\n    });\r\n  });\r\n\r\n  describe(\"in batch mode\", function (): void {\r\n    it(\"should receive messages correctly\", async function (): Promise<void> {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const data = await client.receiveBatch(partitionId, 5, 10);\r\n      debug(\"received messages: \", data);\r\n      data.length.should.equal(5, \"Failed to receive five expected messages\");\r\n    });\r\n  });\r\n\r\n  // describe(\"with receiverRuntimeMetricEnabled\", function (): void {\r\n  //   it(\"should have ReceiverRuntimeInfo populated\", async function (): Promise<void> {\r\n  //     const partitionId = hubInfo.partitionIds[0];\r\n  //     sender = client.createSender(partitionId);\r\n  //     for (let i = 0; i < 10; i++) {\r\n  //       const ed: EventData = {\r\n  //         body: \"Hello awesome world \" + i\r\n  //       }\r\n  //       await sender.send(ed);\r\n  //       debug(\"sent message - \" + i);\r\n  //     }\r\n  //     debug(\"Getting the partition information\");\r\n  //     const pInfo = await client.getPartitionInformation(partitionId);\r\n  //     debug(\"partition info: \", pInfo);\r\n  //     debug(\"Creating new receiver with offset EndOfStream\");\r\n  //     receiver = client.createReceiver(partitionId, { eventPosition: EventPosition.fromStart(), enableReceiverRuntimeMetric: true });\r\n  //     let data = await receiver.receive(1, 10);\r\n  //     debug(\"receiver.runtimeInfo \", receiver.runtimeInfo);\r\n  //     data.length.should.equal(1);\r\n  //     should.exist(receiver.runtimeInfo);\r\n  //     receiver.runtimeInfo!.lastEnqueuedOffset!.should.equal(pInfo.lastEnqueuedOffset);\r\n  //     receiver.runtimeInfo!.lastSequenceNumber!.should.equal(pInfo.lastSequenceNumber);\r\n  //     receiver.runtimeInfo!.lastEnqueuedTimeUtc!.getTime().should.equal(pInfo.lastEnqueuedTimeUtc.getTime());\r\n  //     receiver.runtimeInfo!.partitionId!.should.equal(pInfo.partitionId);\r\n  //     receiver.runtimeInfo!.retrievalTime!.getTime().should.be.greaterThan(Date.now() - 60000);\r\n  //   });\r\n  // });\r\n\r\n  describe(\"with epoch\", function (): void {\r\n    it(\"should behave correctly when a receiver with lower epoch value is connected after a receiver with higher epoch value to a partition in a consumer group\", function (done: Mocha.Done): void {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      let epochRcvr1: ReceiveHandler;\r\n      let epochRcvr2: ReceiveHandler;\r\n      const onError = (error: MessagingError | Error) => {\r\n        debug(\">>>> epoch Receiver 1\", error);\r\n        throw new Error(\"An Error should not have happened for epoch receiver with epoch value 2.\");\r\n      };\r\n      const onMsg = (data: EventData) => {\r\n        debug(\">>>> epoch Receiver 1\", data);\r\n      };\r\n      epochRcvr1 = client.receive(partitionId, onMsg, onError, { epoch: 2, eventPosition: EventPosition.fromEnd() });\r\n      debug(\"Created epoch receiver 1 %s\", epochRcvr1.name);\r\n      setTimeout(() => {\r\n        const onError2 = (error: MessagingError | Error) => {\r\n          debug(\">>>> epoch Receiver 2\", error);\r\n          should.exist(error);\r\n          should.equal(error.name, \"ReceiverDisconnectedError\");\r\n          epochRcvr2.stop()\r\n            .then(() => epochRcvr1.stop())\r\n            .then(() => {\r\n              debug(\"Successfully closed the epoch receivers 1 and 2.\");\r\n              done();\r\n            })\r\n            .catch((err) => {\r\n              debug(\"error occurred while closing the receivers... \", err);\r\n              done();\r\n            });\r\n        };\r\n        const onMsg2 = (data: EventData) => {\r\n          debug(\">>>> epoch Receiver 2\", data);\r\n        };\r\n        epochRcvr2 = client.receive(partitionId, onMsg2, onError2, { epoch: 1, eventPosition: EventPosition.fromEnd() });\r\n        debug(\"Created epoch receiver 2 %s\", epochRcvr2.name);\r\n      }, 3000);\r\n    });\r\n\r\n    it(\"should behave correctly when a receiver with higher epoch value is connected after a receiver with lower epoch value to a partition in a consumer group\", function (done: Mocha.Done): void {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      let epochRcvr1: ReceiveHandler;\r\n      let epochRcvr2: ReceiveHandler;\r\n      const onError = (error: MessagingError | Error) => {\r\n        debug(\">>>> epoch Receiver 1\", error);\r\n        should.exist(error);\r\n        should.equal(error.name, \"ReceiverDisconnectedError\");\r\n        epochRcvr1.stop()\r\n          .then(() => epochRcvr2.stop())\r\n          .then(() => {\r\n            debug(\"Successfully closed the epoch receivers 1 and 2.\");\r\n            done();\r\n          })\r\n          .catch((err) => {\r\n            debug(\"error occurred while closing the receivers... \", err);\r\n            done();\r\n          });\r\n      };\r\n      const onMsg = (data: EventData) => {\r\n        debug(\">>>> epoch Receiver 1\", data);\r\n      };\r\n      epochRcvr1 = client.receive(partitionId, onMsg, onError, { epoch: 1, eventPosition: EventPosition.fromEnd() });\r\n      debug(\"Created epoch receiver 1 %s\", epochRcvr1.name);\r\n      setTimeout(() => {\r\n        const onError2 = (error: MessagingError | Error) => {\r\n          debug(\">>>> epoch Receiver 2\", error);\r\n          throw new Error(\"An Error should not have happened for epoch receiver with epoch value 2.\");\r\n        };\r\n        const onMsg2 = (data: EventData) => {\r\n          debug(\">>>> epoch Receiver 2\", data);\r\n        };\r\n        epochRcvr2 = client.receive(partitionId, onMsg2, onError2, { epoch: 2, eventPosition: EventPosition.fromEnd() });\r\n        debug(\"Created epoch receiver 2 %s\", epochRcvr2.name);\r\n      }, 3000);\r\n    });\r\n\r\n    it(\"should behave correctly when a non epoch receiver is created after an epoch receiver\", function (done: Mocha.Done): void {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      let epochRcvr: ReceiveHandler;\r\n      let nonEpochRcvr: ReceiveHandler;\r\n      const onerr1 = (error: MessagingError | Error) => {\r\n        debug(\">>>> epoch Receiver \", error);\r\n        throw new Error(\"An Error should not have happened for epoch receiver with epoch value 1.\");\r\n      };\r\n      const onmsg1 = (data: EventData) => {\r\n        debug(\">>>> epoch Receiver \", data);\r\n      };\r\n      epochRcvr = client.receive(partitionId, onmsg1, onerr1, { epoch: 1, eventPosition: EventPosition.fromEnd() });\r\n      debug(\"Created epoch receiver %s\", epochRcvr.name);\r\n      const onerr2 = (error: MessagingError | Error) => {\r\n        debug(\">>>> non epoch Receiver\", error);\r\n        should.exist(error);\r\n        should.equal(error.name, \"ReceiverDisconnectedError\");\r\n        nonEpochRcvr.stop()\r\n          .then(() => epochRcvr.stop())\r\n          .then(() => {\r\n            debug(\"Successfully closed the nonEpoch and epoch receivers\");\r\n            done();\r\n          })\r\n          .catch((err) => {\r\n            debug(\"error occurred while closing the receivers... \", err);\r\n            done();\r\n          });\r\n      };\r\n      const onmsg2 = (data: EventData) => {\r\n        debug(\">>>> non epoch Receiver\", data);\r\n      };\r\n      nonEpochRcvr = client.receive(partitionId, onmsg2, onerr2, { eventPosition: EventPosition.fromEnd() });\r\n      debug(\"Created non epoch receiver %s\", nonEpochRcvr.name);\r\n    });\r\n\r\n    it(\"should behave correctly when an epoch receiver is created after a non epoch receiver\", function (done: Mocha.Done): void {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      let epochRcvr: ReceiveHandler;\r\n      let nonEpochRcvr: ReceiveHandler;\r\n      const onerr3 = (error: MessagingError | Error) => {\r\n        debug(\">>>> non epoch Receiver\", error);\r\n        should.exist(error);\r\n        should.equal(error.name, \"ReceiverDisconnectedError\");\r\n        nonEpochRcvr.stop()\r\n          .then(() => epochRcvr.stop())\r\n          .then(() => {\r\n            debug(\"Successfully closed the nonEpoch and epoch receivers\");\r\n            done();\r\n          })\r\n          .catch((err) => {\r\n            debug(\"error occurred while closing the receivers... \", err);\r\n            done();\r\n          });\r\n      };\r\n      const onmsg3 = (data: EventData) => {\r\n        debug(\">>>> non epoch Receiver\", data);\r\n      };\r\n      nonEpochRcvr = client.receive(partitionId, onmsg3, onerr3, { eventPosition: EventPosition.fromEnd() });\r\n      debug(\"Created non epoch receiver %s\", nonEpochRcvr.name);\r\n      setTimeout(() => {\r\n        const onerr4 = (error: MessagingError | Error) => {\r\n          debug(\">>>> epoch Receiver \", error);\r\n          throw new Error(\"OnErr4 >> An Error should not have happened for epoch receiver with epoch value 1.\");\r\n        };\r\n        const onmsg4 = (data: EventData) => {\r\n          debug(\">>>> epoch Receiver \", data);\r\n        };\r\n        epochRcvr = client.receive(partitionId, onmsg4, onerr4, { epoch: 1, eventPosition: EventPosition.fromEnd() });\r\n        debug(\"Created epoch receiver %s\", epochRcvr.name);\r\n      }, 3000);\r\n    });\r\n  });\r\n\r\n  describe(\"Negative scenarios\", function (): void {\r\n\r\n    describe(\"on invalid partition ids like\", function (): void {\r\n      const invalidIds = [\"XYZ\", \"-1\", \"1000\", \"-\"];\r\n      invalidIds.forEach(function (id: string): void {\r\n        it(`\"${id}\" should throw an error`, async function (): Promise<void> {\r\n          try {\r\n            debug(\"Created receiver and will be receiving messages from partition id ...\", id);\r\n            const d = await client.receiveBatch(id, 10, 3);\r\n            debug(\"received messages \", d.length);\r\n          } catch (err) {\r\n            debug(\"Receiver received an error\", err);\r\n            should.exist(err);\r\n            err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n          }\r\n        });\r\n      });\r\n\r\n      it(`\" \" should throw an invalid EventHub address error`, async function (): Promise<void> {\r\n        try {\r\n          const id = \" \";\r\n          debug(\"Created receiver and will be receiving messages from partition id ...\", id);\r\n          const d = await client.receiveBatch(id, 10, 3);\r\n          debug(\"received messages \", d.length);\r\n        } catch (err) {\r\n          debug(\"Receiver received an error\", err);\r\n          should.exist(err);\r\n          err.message.should.match(/.*Invalid EventHub address. It must be either of the following.*/ig);\r\n        }\r\n      });\r\n\r\n      const invalidIds2 = [\"\"];\r\n      invalidIds2.forEach(function (id: string): void {\r\n        it(`\"${id}\" should throw an error`, async function (): Promise<void> {\r\n          try {\r\n            await client.receiveBatch(id, 10, 3);\r\n          } catch (err) {\r\n            debug(`>>>> Received error - `, err);\r\n            should.exist(err);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    it(\"should receive 'QuotaExceededError' when attempting to connect more than 5 receivers to a partition in a consumer group\", function (done: Mocha.Done): void {\r\n      const partitionId = hubInfo.partitionIds[0];\r\n      const rcvHndlrs: ReceiveHandler[] = [];\r\n      const rcvrs: any[] = [];\r\n      debug(\">>> Receivers length: \", rcvHndlrs.length);\r\n      for (let i = 1; i <= 5; i++) {\r\n        const rcvrId = `rcvr-${i}`;\r\n        debug(rcvrId);\r\n        const onMsg = (data: EventData) => {\r\n          if (!rcvrs[i]) {\r\n            rcvrs[i] = rcvrId;\r\n            debug(\"receiver id %s\", rcvrId);\r\n          }\r\n        };\r\n        const onError = (err: MessagingError | Error) => {\r\n          debug(\"@@@@ Error received by receiver %s\", rcvrId);\r\n          debug(err);\r\n        };\r\n        const rcvHndlr = client.receive(partitionId, onMsg, onError, { eventPosition: EventPosition.fromStart(), identifier: rcvrId });\r\n        rcvHndlrs.push(rcvHndlr);\r\n      }\r\n      debug(\">>> Attached message handlers to each receiver.\");\r\n      setTimeout(() => {\r\n        debug(`Created 6th receiver - \"rcvr-6\"`);\r\n        const onmsg2 = (data: EventData) => {\r\n          // debug(data);\r\n        };\r\n        const onerr2 = (err: MessagingError | Error) => {\r\n          debug(\"@@@@ Error received by receiver rcvr-6\");\r\n          debug(err);\r\n          should.equal(err.name, \"QuotaExceededError\");\r\n          const promises = [];\r\n          for (const rcvr of rcvHndlrs) {\r\n            promises.push(rcvr.stop());\r\n          }\r\n          Promise.all(promises).then(() => {\r\n            debug(\"Successfully closed all the receivers..\");\r\n            done();\r\n          }).catch((err) => {\r\n            debug(\"An error occurred while closing the receiver in the 'QuotaExceededError' test.\", err);\r\n            done();\r\n          });\r\n        };\r\n        const failedRcvHandler = client.receive(partitionId, onmsg2, onerr2, { eventPosition: EventPosition.fromStart(), identifier: \"rcvr-6\" });\r\n        rcvHndlrs.push(failedRcvHandler);\r\n      }, 5000);\r\n    });\r\n  });\r\n}).timeout(90000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst debug = debugModule(\"azure:event-hubs:sender-spec\");\r\nimport { EventHubClient, EventData } from \"../lib\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\ndescribe(\"EventHub Sender\", function (): void {\r\n  const service = { connectionString: process.env.EVENTHUB_CONNECTION_STRING, path: process.env.EVENTHUB_NAME };\r\n  const client: EventHubClient = EventHubClient.createFromConnectionString(service.connectionString!, service.path);\r\n  before(\"validate environment\", function (): void {\r\n    should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n      \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_NAME,\r\n      \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n  });\r\n\r\n  after(\"close the connection\", async function (): Promise<void> {\r\n    debug(\"Closing the client..\");\r\n    await client.close();\r\n  });\r\n\r\n  describe(\"Single message\", function (): void {\r\n    it(\"should be sent successfully.\", async function (): Promise<void> {\r\n      const data: EventData = {\r\n        body: \"Hello World\"\r\n      };\r\n      const delivery = await client.send(data);\r\n      // debug(delivery);\r\n      delivery.format.should.equal(0);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n    it(\"with partition key should be sent successfully.\", async function (): Promise<void> {\r\n      const data: EventData = {\r\n        body: \"Hello World with partition key\",\r\n        partitionKey: \"p1234\"\r\n      };\r\n      const delivery = await client.send(data);\r\n      // debug(delivery);\r\n      delivery.format.should.equal(0);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n    it(\"should be sent successfully to a specific partition.\", async function (): Promise<void> {\r\n      const data: EventData = {\r\n        body: \"Hello World\"\r\n      };\r\n      const delivery = await client.send(data, \"0\");\r\n      // debug(delivery);\r\n      delivery.format.should.equal(0);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n  });\r\n\r\n  describe(\"Batch message\", function (): void {\r\n    it(\"should be sent successfully.\", async function (): Promise<void> {\r\n      const data: EventData[] = [\r\n        {\r\n          body: \"Hello World 1\"\r\n        },\r\n        {\r\n          body: \"Hello World 2\"\r\n        }\r\n      ];\r\n      const delivery = await client.sendBatch(data);\r\n      // debug(delivery);\r\n      delivery.format.should.equal(0x80013700);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n    it(\"with partition key should be sent successfully.\", async function (): Promise<void> {\r\n      const data: EventData[] = [\r\n        {\r\n          body: \"Hello World 1\",\r\n          partitionKey: \"p1234\"\r\n        },\r\n        {\r\n          body: \"Hello World 2\"\r\n        }\r\n      ];\r\n      const delivery = await client.sendBatch(data);\r\n      // debug(delivery);\r\n      delivery.format.should.equal(0x80013700);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n    it(\"should be sent successfully to a specific partition.\", async function (): Promise<void> {\r\n      const data: EventData[] = [\r\n        {\r\n          body: \"Hello World 1\"\r\n        },\r\n        {\r\n          body: \"Hello World 2\"\r\n        }\r\n      ];\r\n      const delivery = await client.sendBatch(data, \"0\");\r\n      // debug(delivery);\r\n      delivery.format.should.equal(0x80013700);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n  });\r\n\r\n  describe(\"Multiple messages\", function (): void {\r\n    it(\"should be sent successfully in parallel\", async function (): Promise<void> {\r\n      const promises = [];\r\n      for (let i = 0; i < 5; i++) {\r\n        promises.push(client.send({ body: `Hello World ${i}` }));\r\n      }\r\n      const result = await Promise.all(promises);\r\n      for (let i = 0; i < result.length; i++) {\r\n        const delivery = result[i];\r\n        // debug(\"delivery %d: %O\", i, delivery);\r\n        delivery.format.should.equal(0);\r\n        delivery.settled.should.equal(true);\r\n        delivery.remote_settled.should.equal(true);\r\n      }\r\n    });\r\n    it(\"should be sent successfully in parallel by multiple senders\", async function (): Promise<void> {\r\n      const senderCount = 3;\r\n      try {\r\n        const promises = [];\r\n        for (let i = 0; i < senderCount; i++) {\r\n          if (i === 0) {\r\n            debug(\">>>>> Sending a message to partition %d\", i);\r\n            promises.push(client.send({ body: `Hello World ${i}` }, i));\r\n          } else if (i === 1) {\r\n            debug(\">>>>> Sending a message to partition %d\", i);\r\n            promises.push(client.send({ body: `Hello World ${i}` }, i));\r\n          } else {\r\n            debug(\">>>>> Sending a message to the hub when i == %d\", i);\r\n            promises.push(client.send({ body: `Hello World ${i}` }));\r\n          }\r\n        }\r\n        const result = await Promise.all(promises);\r\n        for (let i = 0; i < result.length; i++) {\r\n          const delivery = result[i];\r\n          // debug(\"delivery %d: %O\", i, delivery);\r\n          delivery.format.should.equal(0);\r\n          delivery.settled.should.equal(true);\r\n          delivery.remote_settled.should.equal(true);\r\n        }\r\n      } catch (err) {\r\n        debug(\"An error occurred while running the test: \", err);\r\n        throw err;\r\n      }\r\n    });\r\n\r\n    it(\"should fail when a message greater than 256 KB is sent and succeed when a normal message is sent after that on the same link.\", async function (): Promise<void> {\r\n      const data: EventData = {\r\n        body: Buffer.from(\"Z\".repeat(300000))\r\n      };\r\n      try {\r\n        debug(\"Sendina message of 300KB...\");\r\n        await client.send(data, \"0\");\r\n      } catch (err) {\r\n        debug(err);\r\n        should.exist(err);\r\n        should.equal(err.name, \"MessageTooLargeError\");\r\n        err.message.should.match(/.*The received message \\(delivery-id:(\\d+), size:3000\\d\\d bytes\\) exceeds the limit \\(262144 bytes\\) currently allowed on the link\\..*/ig);\r\n      }\r\n      const delivery = await client.send({ body: \"Hello World EventHub!!\" }, \"0\");\r\n      debug(\"Sent the message successfully on the same link..\");\r\n      delivery.format.should.equal(0);\r\n      delivery.settled.should.equal(true);\r\n      delivery.remote_settled.should.equal(true);\r\n    });\r\n  });\r\n\r\n  describe(\"Negative scenarios\", function (): void {\r\n    it(\"a message greater than 256 KB should fail.\", async function (): Promise<void> {\r\n      const data: EventData = {\r\n        body: Buffer.from(\"Z\".repeat(300000))\r\n      };\r\n      try {\r\n        await client.send(data);\r\n      } catch (err) {\r\n        debug(err);\r\n        should.exist(err);\r\n        should.equal(err.name, \"MessageTooLargeError\");\r\n        err.message.should.match(/.*The received message \\(delivery-id:(\\d+), size:3000\\d\\d bytes\\) exceeds the limit \\(262144 bytes\\) currently allowed on the link\\..*/ig);\r\n      }\r\n    });\r\n\r\n  \r\n    it.only(\"Error thrown when the 'partitionKey' is not of type 'string'\", async function (): Promise<void> {\r\n      const data: EventData = {\r\n        body: \"Hello World\",\r\n        partitionKey: 1 as any\r\n      };\r\n      try{\r\n       await client.send(data, \"0\");\r\n      } catch(err){\r\n        debug(err);\r\n        should.exist(err);\r\n        err.message.should.match(/.*'partitionKey' must be of type 'string'.*/ig);\r\n      }\r\n    });\r\n\r\n    describe(\"on invalid partition ids like\", function (): void {\r\n      // tslint:disable-next-line: no-null-keyword\r\n      const invalidIds = [\"XYZ\", \"-1\", \"1000\", \"-\", null];\r\n      invalidIds.forEach(function (id: string | null): void {\r\n        it(`\"${id}\" should throw an error`, async function (): Promise<void> {\r\n          try {\r\n            debug(\"Created sender and will be sending a message to partition id ...\", id);\r\n            await client.send({ body: \"Hello world!\" }, id as any);\r\n            debug(\"sent the message.\");\r\n          } catch (err) {\r\n            debug(`>>>> Received error for invalid partition id \"${id}\" - `, err);\r\n            should.exist(err);\r\n            err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n          }\r\n        });\r\n      });\r\n\r\n      const invalidIds2 = [\"\", \" \"];\r\n      invalidIds2.forEach(function (id: string): void {\r\n        it(`\"${id}\" should throw an invalid EventHub address error`, async function (): Promise<void> {\r\n          try {\r\n            debug(\"Created sender and will be sending a message to partition id ...\", id);\r\n            await client.send({ body: \"Hello world!\" }, id as any);\r\n            debug(\"sent the message.\");\r\n          } catch (err) {\r\n            debug(`>>>> Received invalid EventHub address error for partition id \"${id}\" - `, err);\r\n            should.exist(err);\r\n            err.message.should.match(/.*Invalid EventHub address. It must be either of the following.*/ig);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  });\r\n}).timeout(20000);\r\n"],"names":["path","this","global","type","AssertionError","getName","inspect","functionNameMatch","getMessage","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","assert","util","core","checkError","config","Constants","messageProperties","messageHeader","bytesToUuid","context","uuid","log.link","defaultLock","log.error","link","translate","ErrorNameConditionMapper","log.receiver","receiver","RetryOperationType","retry","types","log.streaming","ReceiverEvents","log.mgmt","RequestResponseLink","SenderEvents","ConnectionContextBase","log.context","delay","sender","ConnectionEvents","log.sender","message","randomNumberFromInterval","log.batching","SessionEvents","error","MessagingError","IotHubConnectionConfig","IotSasTokenProvider","log.iotClient","log.client","EventHubConnectionConfig","AadTokenProvider","should","chai","dotenv","debug"],"mappings":"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"}