{"version":3,"file":"index.js","sources":["../node_modules/assertion-error/index.js","../node_modules/pathval/index.js","../node_modules/chai/lib/chai/utils/flag.js","../node_modules/chai/lib/chai/utils/test.js","../node_modules/type-detect/type-detect.js","../node_modules/chai/lib/chai/utils/expectTypes.js","../node_modules/chai/lib/chai/utils/getActual.js","../node_modules/get-func-name/index.js","../node_modules/chai/lib/chai/utils/getProperties.js","../node_modules/chai/lib/chai/utils/getEnumerableProperties.js","../node_modules/chai/lib/chai/config.js","../node_modules/chai/lib/chai/utils/inspect.js","../node_modules/chai/lib/chai/utils/objDisplay.js","../node_modules/chai/lib/chai/utils/getMessage.js","../node_modules/chai/lib/chai/utils/transferFlags.js","../node_modules/deep-eql/index.js","../node_modules/chai/lib/chai/utils/isProxyEnabled.js","../node_modules/chai/lib/chai/utils/addProperty.js","../node_modules/chai/lib/chai/utils/addLengthGuard.js","../node_modules/chai/lib/chai/utils/proxify.js","../node_modules/chai/lib/chai/utils/addMethod.js","../node_modules/chai/lib/chai/utils/overwriteProperty.js","../node_modules/chai/lib/chai/utils/overwriteMethod.js","../node_modules/chai/lib/chai/utils/addChainableMethod.js","../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","../node_modules/chai/lib/chai/utils/compareByInspect.js","../node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","../node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","../node_modules/check-error/index.js","../node_modules/chai/lib/chai/utils/isNaN.js","../node_modules/chai/lib/chai/utils/index.js","../node_modules/chai/lib/chai/assertion.js","../node_modules/chai/lib/chai/core/assertions.js","../node_modules/chai/lib/chai/interface/expect.js","../node_modules/chai/lib/chai/interface/should.js","../node_modules/chai/lib/chai/interface/assert.js","../node_modules/chai/lib/chai.js","../node_modules/chai/index.js","../node_modules/uuid/lib/rng.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v4.js","../node_modules/chai-as-promised/lib/chai-as-promised.js","../node_modules/dotenv/lib/main.js","../lib/log.ts","../lib/util/utils.ts","../lib/checkpointInfo.ts","../lib/partitionContext.ts","../lib/modelTypes.ts","../lib/partitionPump.ts","../lib/pumpManager.ts","../lib/partitionScanner.ts","../lib/partitionManager.ts","../lib/util/constants.ts","../lib/blobService.ts","../lib/azureBlob.ts","../lib/baseLease.ts","../lib/completeLease.ts","../lib/azureBlobLease.ts","../lib/azureStorageCheckpointLeaseManager.ts","../lib/hostContext.ts","../lib/eventProcessorHost.ts","../lib/index.ts","../tests/eph.spec.ts","../tests/iothub.spec.ts","../tests/negative.spec.ts","../tests/retry.spec.ts"],"sourcesContent":["/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy &&\n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been', 'is'\n  , 'and', 'has', 'have', 'with'\n  , 'that', 'which', 'at', 'of'\n  , 'same', 'but', 'does', 'still' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n\n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount > n\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= n\n        , 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount < n\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount <= n\n        , 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , errorMessage\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= start && itemsCount <= finish\n        , 'expected #{this} to have a ' + descriptor + ' within ' + range\n        , 'expected #{this} to not have a ' + descriptor + ' within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , nameType = typeof name;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string when using nested syntax',\n          undefined,\n          ssfi\n        );\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string, number, or symbol',\n          undefined,\n          ssfi\n        );\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , descriptor = 'length'\n      , itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(\n        itemsCount == n\n      , 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}'\n      , 'expected #{this} to not have a ' + descriptor + ' of #{act}'\n      , n\n      , itemsCount\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , actual\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === 'number' && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n          message = actual;\n          actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        // Comply with Node's fail([message]) interface\n\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *\n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'Error thrown must have this msg');\n   *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.2.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","\"use strict\";\n/* eslint-disable no-invalid-this */\nlet checkError = require(\"check-error\");\n\nmodule.exports = (chai, utils) => {\n    const Assertion = chai.Assertion;\n    const assert = chai.assert;\n    const proxify = utils.proxify;\n\n    // If we are using a version of Chai that has checkError on it,\n    // we want to use that version to be consistent. Otherwise, we use\n    // what was passed to the factory.\n    if (utils.checkError) {\n        checkError = utils.checkError;\n    }\n\n    function isLegacyJQueryPromise(thenable) {\n        // jQuery promises are Promises/A+-compatible since 3.0.0. jQuery 3.0.0 is also the first version\n        // to define the catch method.\n        return typeof thenable.catch !== \"function\" &&\n               typeof thenable.always === \"function\" &&\n               typeof thenable.done === \"function\" &&\n               typeof thenable.fail === \"function\" &&\n               typeof thenable.pipe === \"function\" &&\n               typeof thenable.progress === \"function\" &&\n               typeof thenable.state === \"function\";\n    }\n\n    function assertIsAboutPromise(assertion) {\n        if (typeof assertion._obj.then !== \"function\") {\n            throw new TypeError(utils.inspect(assertion._obj) + \" is not a thenable.\");\n        }\n        if (isLegacyJQueryPromise(assertion._obj)) {\n            throw new TypeError(\"Chai as Promised is incompatible with thenables of jQuery<3.0.0, sorry! Please \" +\n                                \"upgrade jQuery or use another Promises/A+ compatible library (see \" +\n                                \"http://promisesaplus.com/).\");\n        }\n    }\n\n    function proxifyIfSupported(assertion) {\n        return proxify === undefined ? assertion : proxify(assertion);\n    }\n\n    function method(name, asserter) {\n        utils.addMethod(Assertion.prototype, name, function () {\n            assertIsAboutPromise(this);\n            return asserter.apply(this, arguments);\n        });\n    }\n\n    function property(name, asserter) {\n        utils.addProperty(Assertion.prototype, name, function () {\n            assertIsAboutPromise(this);\n            return proxifyIfSupported(asserter.apply(this, arguments));\n        });\n    }\n\n    function doNotify(promise, done) {\n        promise.then(() => done(), done);\n    }\n\n    // These are for clarity and to bypass Chai refusing to allow `undefined` as actual when used with `assert`.\n    function assertIfNegated(assertion, message, extra) {\n        assertion.assert(true, null, message, extra.expected, extra.actual);\n    }\n\n    function assertIfNotNegated(assertion, message, extra) {\n        assertion.assert(false, message, null, extra.expected, extra.actual);\n    }\n\n    function getBasePromise(assertion) {\n        // We need to chain subsequent asserters on top of ones in the chain already (consider\n        // `eventually.have.property(\"foo\").that.equals(\"bar\")`), only running them after the existing ones pass.\n        // So the first base-promise is `assertion._obj`, but after that we use the assertions themselves, i.e.\n        // previously derived promises, to chain off of.\n        return typeof assertion.then === \"function\" ? assertion : assertion._obj;\n    }\n\n    function getReasonName(reason) {\n        return reason instanceof Error ? reason.toString() : checkError.getConstructorName(reason);\n    }\n\n    // Grab these first, before we modify `Assertion.prototype`.\n\n    const propertyNames = Object.getOwnPropertyNames(Assertion.prototype);\n\n    const propertyDescs = {};\n    for (const name of propertyNames) {\n        propertyDescs[name] = Object.getOwnPropertyDescriptor(Assertion.prototype, name);\n    }\n\n    property(\"fulfilled\", function () {\n        const derivedPromise = getBasePromise(this).then(\n            value => {\n                assertIfNegated(this,\n                                \"expected promise not to be fulfilled but it was fulfilled with #{act}\",\n                                { actual: value });\n                return value;\n            },\n            reason => {\n                assertIfNotNegated(this,\n                                   \"expected promise to be fulfilled but it was rejected with #{act}\",\n                                   { actual: getReasonName(reason) });\n                return reason;\n            }\n        );\n\n        module.exports.transferPromiseness(this, derivedPromise);\n        return this;\n    });\n\n    property(\"rejected\", function () {\n        const derivedPromise = getBasePromise(this).then(\n            value => {\n                assertIfNotNegated(this,\n                                   \"expected promise to be rejected but it was fulfilled with #{act}\",\n                                   { actual: value });\n                return value;\n            },\n            reason => {\n                assertIfNegated(this,\n                                \"expected promise not to be rejected but it was rejected with #{act}\",\n                                { actual: getReasonName(reason) });\n\n                // Return the reason, transforming this into a fulfillment, to allow further assertions, e.g.\n                // `promise.should.be.rejected.and.eventually.equal(\"reason\")`.\n                return reason;\n            }\n        );\n\n        module.exports.transferPromiseness(this, derivedPromise);\n        return this;\n    });\n\n    method(\"rejectedWith\", function (errorLike, errMsgMatcher, message) {\n        let errorLikeName = null;\n        const negate = utils.flag(this, \"negate\") || false;\n\n        // rejectedWith with that is called without arguments is\n        // the same as a plain \".rejected\" use.\n        if (errorLike === undefined && errMsgMatcher === undefined &&\n            message === undefined) {\n            /* eslint-disable no-unused-expressions */\n            return this.rejected;\n            /* eslint-enable no-unused-expressions */\n        }\n\n        if (message !== undefined) {\n            utils.flag(this, \"message\", message);\n        }\n\n        if (errorLike instanceof RegExp || typeof errorLike === \"string\") {\n            errMsgMatcher = errorLike;\n            errorLike = null;\n        } else if (errorLike && errorLike instanceof Error) {\n            errorLikeName = errorLike.toString();\n        } else if (typeof errorLike === \"function\") {\n            errorLikeName = checkError.getConstructorName(errorLike);\n        } else {\n            errorLike = null;\n        }\n        const everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n\n        let matcherRelation = \"including\";\n        if (errMsgMatcher instanceof RegExp) {\n            matcherRelation = \"matching\";\n        }\n\n        const derivedPromise = getBasePromise(this).then(\n            value => {\n                let assertionMessage = null;\n                let expected = null;\n\n                if (errorLike) {\n                    assertionMessage = \"expected promise to be rejected with #{exp} but it was fulfilled with #{act}\";\n                    expected = errorLikeName;\n                } else if (errMsgMatcher) {\n                    assertionMessage = `expected promise to be rejected with an error ${matcherRelation} #{exp} but ` +\n                                       `it was fulfilled with #{act}`;\n                    expected = errMsgMatcher;\n                }\n\n                assertIfNotNegated(this, assertionMessage, { expected, actual: value });\n                return value;\n            },\n            reason => {\n                const errorLikeCompatible = errorLike && (errorLike instanceof Error ?\n                                                        checkError.compatibleInstance(reason, errorLike) :\n                                                        checkError.compatibleConstructor(reason, errorLike));\n\n                const errMsgMatcherCompatible = errMsgMatcher && checkError.compatibleMessage(reason, errMsgMatcher);\n\n                const reasonName = getReasonName(reason);\n\n                if (negate && everyArgIsDefined) {\n                    if (errorLikeCompatible && errMsgMatcherCompatible) {\n                        this.assert(true,\n                                    null,\n                                    \"expected promise not to be rejected with #{exp} but it was rejected \" +\n                                    \"with #{act}\",\n                                    errorLikeName,\n                                    reasonName);\n                    }\n                } else {\n                    if (errorLike) {\n                        this.assert(errorLikeCompatible,\n                                    \"expected promise to be rejected with #{exp} but it was rejected with #{act}\",\n                                    \"expected promise not to be rejected with #{exp} but it was rejected \" +\n                                    \"with #{act}\",\n                                    errorLikeName,\n                                    reasonName);\n                    }\n\n                    if (errMsgMatcher) {\n                        this.assert(errMsgMatcherCompatible,\n                                    `expected promise to be rejected with an error ${matcherRelation} #{exp} but got ` +\n                                    `#{act}`,\n                                    `expected promise not to be rejected with an error ${matcherRelation} #{exp}`,\n                                    errMsgMatcher,\n                                    checkError.getMessage(reason));\n                    }\n                }\n\n                return reason;\n            }\n        );\n\n        module.exports.transferPromiseness(this, derivedPromise);\n        return this;\n    });\n\n    property(\"eventually\", function () {\n        utils.flag(this, \"eventually\", true);\n        return this;\n    });\n\n    method(\"notify\", function (done) {\n        doNotify(getBasePromise(this), done);\n        return this;\n    });\n\n    method(\"become\", function (value, message) {\n        return this.eventually.deep.equal(value, message);\n    });\n\n    // ### `eventually`\n\n    // We need to be careful not to trigger any getters, thus `Object.getOwnPropertyDescriptor` usage.\n    const methodNames = propertyNames.filter(name => {\n        return name !== \"assert\" && typeof propertyDescs[name].value === \"function\";\n    });\n\n    methodNames.forEach(methodName => {\n        Assertion.overwriteMethod(methodName, originalMethod => function () {\n            return doAsserterAsyncAndAddThen(originalMethod, this, arguments);\n        });\n    });\n\n    const getterNames = propertyNames.filter(name => {\n        return name !== \"_obj\" && typeof propertyDescs[name].get === \"function\";\n    });\n\n    getterNames.forEach(getterName => {\n        // Chainable methods are things like `an`, which can work both for `.should.be.an.instanceOf` and as\n        // `should.be.an(\"object\")`. We need to handle those specially.\n        const isChainableMethod = Assertion.prototype.__methods.hasOwnProperty(getterName);\n\n        if (isChainableMethod) {\n            Assertion.overwriteChainableMethod(\n                getterName,\n                originalMethod => function () {\n                    return doAsserterAsyncAndAddThen(originalMethod, this, arguments);\n                },\n                originalGetter => function () {\n                    return doAsserterAsyncAndAddThen(originalGetter, this);\n                }\n            );\n        } else {\n            Assertion.overwriteProperty(getterName, originalGetter => function () {\n                return proxifyIfSupported(doAsserterAsyncAndAddThen(originalGetter, this));\n            });\n        }\n    });\n\n    function doAsserterAsyncAndAddThen(asserter, assertion, args) {\n        // Since we're intercepting all methods/properties, we need to just pass through if they don't want\n        // `eventually`, or if we've already fulfilled the promise (see below).\n        if (!utils.flag(assertion, \"eventually\")) {\n            asserter.apply(assertion, args);\n            return assertion;\n        }\n\n        const derivedPromise = getBasePromise(assertion).then(value => {\n            // Set up the environment for the asserter to actually run: `_obj` should be the fulfillment value, and\n            // now that we have the value, we're no longer in \"eventually\" mode, so we won't run any of this code,\n            // just the base Chai code that we get to via the short-circuit above.\n            assertion._obj = value;\n            utils.flag(assertion, \"eventually\", false);\n\n            return args ? module.exports.transformAsserterArgs(args) : args;\n        }).then(newArgs => {\n            asserter.apply(assertion, newArgs);\n\n            // Because asserters, for example `property`, can change the value of `_obj` (i.e. change the \"object\"\n            // flag), we need to communicate this value change to subsequent chained asserters. Since we build a\n            // promise chain paralleling the asserter chain, we can use it to communicate such changes.\n            return assertion._obj;\n        });\n\n        module.exports.transferPromiseness(assertion, derivedPromise);\n        return assertion;\n    }\n\n    // ### Now use the `Assertion` framework to build an `assert` interface.\n    const originalAssertMethods = Object.getOwnPropertyNames(assert).filter(propName => {\n        return typeof assert[propName] === \"function\";\n    });\n\n    assert.isFulfilled = (promise, message) => (new Assertion(promise, message)).to.be.fulfilled;\n\n    assert.isRejected = (promise, errorLike, errMsgMatcher, message) => {\n        const assertion = new Assertion(promise, message);\n        return assertion.to.be.rejectedWith(errorLike, errMsgMatcher, message);\n    };\n\n    assert.becomes = (promise, value, message) => assert.eventually.deepEqual(promise, value, message);\n\n    assert.doesNotBecome = (promise, value, message) => assert.eventually.notDeepEqual(promise, value, message);\n\n    assert.eventually = {};\n    originalAssertMethods.forEach(assertMethodName => {\n        assert.eventually[assertMethodName] = function (promise) {\n            const otherArgs = Array.prototype.slice.call(arguments, 1);\n\n            let customRejectionHandler;\n            const message = arguments[assert[assertMethodName].length - 1];\n            if (typeof message === \"string\") {\n                customRejectionHandler = reason => {\n                    throw new chai.AssertionError(`${message}\\n\\nOriginal reason: ${utils.inspect(reason)}`);\n                };\n            }\n\n            const returnedPromise = promise.then(\n                fulfillmentValue => assert[assertMethodName].apply(assert, [fulfillmentValue].concat(otherArgs)),\n                customRejectionHandler\n            );\n\n            returnedPromise.notify = done => {\n                doNotify(returnedPromise, done);\n            };\n\n            return returnedPromise;\n        };\n    });\n};\n\nmodule.exports.transferPromiseness = (assertion, promise) => {\n    assertion.then = promise.then.bind(promise);\n};\n\nmodule.exports.transformAsserterArgs = values => values;\n","'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\n\n/*\n * Parses a string or buffer into an object\n * @param {(string|Buffer)} src - source to be parsed\n * @returns {Object} keys and values from src\n*/\nfunction parse (src) {\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split('\\n').forEach(function (line) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(/^\\s*([\\w\\.\\-]+)\\s*=\\s*(.*)?\\s*$/)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n\n      // default undefined or missing values to empty string\n      let value = keyValueArr[2] || ''\n\n      // expand newlines in quoted values\n      const len = value ? value.length : 0\n      if (len > 0 && value.charAt(0) === '\"' && value.charAt(len - 1) === '\"') {\n        value = value.replace(/\\\\n/gm, '\\n')\n      }\n\n      // remove any surrounding quotes and extra spaces\n      value = value.replace(/(^['\"]|['\"]$)/g, '').trim()\n\n      obj[key] = value\n    }\n  })\n\n  return obj\n}\n\n/*\n * Main entry point into dotenv. Allows configuration before loading .env\n * @param {Object} options - options for parsing .env file\n * @param {string} [options.path=.env] - path to .env file\n * @param {string} [options.encoding=utf8] - encoding of .env file\n * @returns {Object} parsed object or error\n*/\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n\n  if (options) {\n    if (options.path) {\n      dotenvPath = options.path\n    }\n    if (options.encoding) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!process.env.hasOwnProperty(key)) {\n        process.env[key] = parsed[key]\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.load = config\nmodule.exports.parse = parse\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport debugModule from \"debug\";\r\n/**\r\n * @ignore\r\n * log statements for error\r\n */\r\nexport const error = debugModule(\"azure:eph:error\");\r\n/**\r\n * @ignore\r\n * log statements for lease\r\n */\r\nexport const baseLease = debugModule(\"azure:eph:baseLease\");\r\n/**\r\n * @ignore\r\n * log statements for lease\r\n */\r\nexport const completeLease = debugModule(\"azure:eph:completeLease\");\r\n/**\r\n * @ignore\r\n * log statements for azurebloblease\r\n */\r\nexport const azurebloblease = debugModule(\"azure:eph:azurebloblease\");\r\n/**\r\n * @ignore\r\n * log statements for leaseManager\r\n */\r\nexport const leaseManager = debugModule(\"azure:eph:leaseManager\");\r\n/**\r\n * @ignore\r\n * log statements for partitionManager\r\n */\r\nexport const partitionManager = debugModule(\"azure:eph:partitionManager\");\r\n/**\r\n * @ignore\r\n * log statements for partitionManager\r\n */\r\nexport const partitionPump = debugModule(\"azure:eph:partitionPump\");\r\n/**\r\n * @ignore\r\n * log statements for pumpManager\r\n */\r\nexport const pumpManager = debugModule(\"azure:eph:pumpManager\");\r\n/**\r\n * @ignore\r\n * log statements for partitionScanner\r\n */\r\nexport const partitionScanner = debugModule(\"azure:eph:partitionScanner\");\r\n/**\r\n * @ignore\r\n * log statements for host\r\n */\r\nexport const host = debugModule(\"azure:eph:host\");\r\n/**\r\n * @ignore\r\n * log statements for blobService\r\n */\r\nexport const blobService = debugModule(\"azure:eph:blobService\");\r\n/**\r\n * @ignore\r\n * log statements for partitionContext\r\n */\r\nexport const partitionContext = debugModule(\"azure:eph:partitionContext\");\r\n/**\r\n * @ignore\r\n * log statements for checkpointLeaseMgr\r\n */\r\nexport const checkpointLeaseMgr = debugModule(\"azure:eph:checkpointLeaseMgr\");\r\n/**\r\n * @ignore\r\n * log statements for checkpointLeaseMgr\r\n */\r\nexport const checkpoint = debugModule(\"azure:eph:checkpointInfo\");\r\n\r\n/**\r\n * @ignore\r\n * log statements for checkpointLeaseMgr\r\n */\r\nexport const util = debugModule(\"azure:eph:util\");\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"../log\";\r\nimport { StorageError } from \"azure-storage\";\r\nimport { EPHDiagnosticInfo } from \"../modelTypes\";\r\n\r\n/**\r\n * Generates a random number between the given interval\r\n * @param {number} min Min number of the range (inclusive).\r\n * @param {number} max Max number of the range (inclusive).\r\n */\r\nexport function randomNumberFromInterval(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n/**\r\n * Validates the type and requiredness of a given parameter.\r\n * @param paramName The name of the parameter.\r\n * @param paramValue The parameter value\r\n * @param type The type of the parameter\r\n */\r\nexport function validateType(paramName: string, paramValue: any, required: boolean,\r\n  type: \"string\" | \"number\" | \"boolean\" | \"Array\" | \"object\" | \"Date\" | \"function\"): void {\r\n  if (required && paramValue == undefined) {\r\n    throw new TypeError(`${paramName} is required. Given value: ${paramValue}. Hence it cannot be null or undefined.`);\r\n  }\r\n  if (paramValue != undefined) {\r\n    if (type === \"Array\") {\r\n      if (!Array.isArray(paramValue)) {\r\n        throw new TypeError(`${paramName} must be of type \"${type}\".`);\r\n      }\r\n    } else if (type === \"Date\") {\r\n      if (!(paramValue instanceof Date)) {\r\n        throw new TypeError(`${paramName} must be of type \"${type}\".`);\r\n      }\r\n    } else if (type === \"string\" || type === \"number\" || type === \"boolean\"\r\n      || type === \"object\" || type === \"function\") {\r\n      if (typeof paramValue !== type) {\r\n        throw new TypeError(`${paramName} must be of type \"${type}\".`);\r\n      }\r\n    } else {\r\n      throw new Error(`Invalid argument. type \"${type}\" is not a valid type. Valid values are: ` +\r\n        `\"string\", \"number\", \"boolean\", \"Array\", \"object\", \"Date\", \"function\"`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface StorageErrorInfo {\r\n  name: string;\r\n  message: string;\r\n  statusCode: number;\r\n  code: string;\r\n  requestId: string;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function getStorageError(err: StorageError): StorageErrorInfo {\r\n  return {\r\n    name: err.name,\r\n    message: err.message,\r\n    statusCode: err.statusCode!,\r\n    code: err.code!,\r\n    requestId: err.requestId!\r\n  };\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface RetryConfig<T> {\r\n  hostName: string;\r\n  operation: () => Promise<T>;\r\n  partitionId?: string;\r\n  retryMessage: string;\r\n  finalFailureMessage: string;\r\n  action: string;\r\n  maxRetries: number;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport enum EPHActionStrings {\r\n  acquireLease = \"Acquire Lease\",\r\n  gettingPartitionIds = \"Getting PartitionIds\",\r\n  gettingAllLeases = \"Getting All Leases\",\r\n  creatingAllLeases = \"Creating All Leases\",\r\n  scanningLeases = \"Scanning leases\",\r\n  checkingLeases = \"Checking Leases\",\r\n  checkingExpiredLeases = \"Checking Expired Leases\",\r\n  renewingLease = \"Renewing Lease\",\r\n  stealingLease = \"Stealing Lease\",\r\n  creatingLease = \"Creating Lease\",\r\n  creatingCheckpoint = \"Creating Checkpoint\",\r\n  updatingCheckpoint = \"Updating Checkpoint\",\r\n  creatingCheckpointStore = \"Creating Checkpoint Store\",\r\n  creatingEventProcessor = \"Creating Event Processor\",\r\n  creatingLeaseStore = \"Creating Lease Store\",\r\n  initializingStores = \"Initializing Stores\",\r\n  partitionManagerCleanup = \"Partition Manager Cleanup\",\r\n  partitionManagerMainLoop = \"Partition Manager Main Loop\",\r\n  partitionReceiverManagement = \"Partition Receiver Management\",\r\n  deletingLeaseStore = \"Deleting Lease Store\"\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport async function retry<T>(config: RetryConfig<T>): Promise<T> {\r\n  let createdOK: boolean = false;\r\n  let retryCount: number = 0;\r\n  let result: T = undefined as any;\r\n  let innerError: Error | undefined = undefined;\r\n  do {\r\n    try {\r\n      result = await config.operation();\r\n      createdOK = true;\r\n      if (config.partitionId) {\r\n        log.util(\"[%s] Retry attempt: %d. Action '%s' for partitionId: '%s' suceeded.\",\r\n          config.hostName, retryCount, config.action, config.partitionId);\r\n      } else {\r\n        log.util(\"[%s] Retry attempt: %d. Action '%s' suceeded.\",\r\n          config.hostName, retryCount, config.action);\r\n      }\r\n    } catch (err) {\r\n      innerError = err;\r\n      if (config.partitionId) {\r\n        log.error(\"[%s] An error occurred. Retry attempt: %d. PartitionId: '%s'. %s: %O\",\r\n          config.hostName, config.partitionId, retryCount, config.retryMessage, err);\r\n      } else {\r\n        log.error(\"[%s] An error occurred. Retry attempt: %d. %s: %O\", config.hostName,\r\n          retryCount, config.retryMessage, err);\r\n      }\r\n      retryCount++;\r\n    }\r\n  } while (!createdOK && (retryCount < config.maxRetries));\r\n\r\n  if (!createdOK) {\r\n    let msg: string;\r\n    if (innerError) {\r\n      msg = `${config.finalFailureMessage} while performing the action \"${config.action}\" ` +\r\n        `due to ${innerError.stack ? innerError.stack : JSON.stringify(innerError)}`;\r\n    } else {\r\n      msg = `${config.finalFailureMessage} while performing the action \"${config.action}\"`;\r\n    }\r\n\r\n    log.error(\"[%s] %s\", config.hostName, msg);\r\n    const info: EPHDiagnosticInfo = {\r\n      action: config.action,\r\n      hostName: config.hostName,\r\n      partitionId: config.partitionId || \"N/A\",\r\n      error: new Error(msg)\r\n    };\r\n    throw info;\r\n  }\r\n  return result;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"./log\";\r\nimport { EventData } from \"@azure/event-hubs\";\r\nimport { LeaseInfo } from \"./azureBlobLease\";\r\nimport { validateType } from \"./util/utils\";\r\n\r\n/**\r\n * Describes the checkoint information.\r\n * @interface CheckpointInfo\r\n */\r\nexport interface CheckpointInfo {\r\n  /**\r\n   * @property {string} partitionId The EventHub partition id.\r\n   */\r\n  partitionId: string;\r\n  /**\r\n   * @property {string} offset The offset of the event to be checked in.\r\n   */\r\n  offset: string;\r\n  /**\r\n   * @property {string} sequenceNumber The sequence number of the event to be checked in.\r\n   */\r\n  sequenceNumber: number;\r\n}\r\n\r\n/**\r\n * Describes the checkoint information.\r\n * @namespace CheckpointInfo\r\n */\r\nexport namespace CheckpointInfo {\r\n  /**\r\n   * Creates the checkpoint info\r\n   * @param {string} partitionId The partition id for the checkpoint\r\n   * @param {string} [offset] The offset of the event to be checked in.\r\n   * @param {number} [sequenceNumber] The sequence number of the event to be checked in.\r\n   * @return {CheckpointInfo} CheckpointInfo\r\n   */\r\n  export function create(partitionId: string, offset?: string, sequenceNumber?: number): CheckpointInfo {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    validateType(\"offset\", offset, false, \"string\");\r\n    validateType(\"sequenceNumber\", sequenceNumber, false, \"number\");\r\n    const checkpoint: CheckpointInfo = {\r\n      partitionId: partitionId,\r\n      offset: offset || \"-1\",\r\n      sequenceNumber: sequenceNumber != undefined ? sequenceNumber : 0\r\n    };\r\n    log.checkpoint(\"The created CheckpointInfo is: %o\", checkpoint);\r\n    return checkpoint;\r\n  }\r\n\r\n  /**\r\n   * Creates the checkpoint info\r\n   * @param {LeaseInfo} lease The lease info from which the checkpoint info needs to created.\r\n   * @return {CheckpointInfo} CheckpointInfo\r\n   */\r\n  export function createFromLease(lease: LeaseInfo): CheckpointInfo {\r\n    validateType(\"lease\", lease, true, \"object\");\r\n    const checkpoint: CheckpointInfo = {\r\n      offset: lease.offset || \"-1\",\r\n      partitionId: lease.partitionId,\r\n      sequenceNumber: lease.sequenceNumber\r\n    };\r\n    log.checkpoint(\"The created CheckpointInfo from lease %o is: %o\", lease, checkpoint);\r\n    return checkpoint;\r\n  }\r\n\r\n  /**\r\n   * Creates the checkpoint info.\r\n   * @param {string} partitionId The partition id for the checkpoint\r\n   * @param {EventData} eventData The event data from which the checkpoint info needs to created.\r\n   * @return {CheckpointInfo} CheckpointInfo\r\n   */\r\n  export function createFromEventData(partitionId: string, eventData: EventData): CheckpointInfo {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    validateType(\"eventData\", eventData, true, \"object\");\r\n    validateType(\"eventData.offset\", eventData.offset, true, \"string\");\r\n    validateType(\"eventData.sequenceNumber\", eventData.sequenceNumber, true, \"number\");\r\n\r\n    const checkpoint: CheckpointInfo = {\r\n      partitionId: partitionId,\r\n      offset: eventData.offset!,\r\n      sequenceNumber: eventData.sequenceNumber!\r\n    };\r\n    log.checkpoint(\"The created CheckpointInfo from EventData %o is: %o\", eventData, checkpoint);\r\n    return checkpoint;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { EventData, EventPosition } from \"@azure/event-hubs\";\r\nimport { CompleteLease } from \"./completeLease\";\r\nimport { CheckpointInfo } from \"./checkpointInfo\";\r\nimport * as log from \"./log\";\r\nimport { HostContextWithCheckpointLeaseManager } from \"./hostContext\";\r\nimport { validateType } from \"./util/utils\";\r\n\r\n/**\r\n * Describes the Partition Context.\r\n * @class PartitionContext\r\n */\r\nexport class PartitionContext {\r\n  /**\r\n   * @property {Lease} lease The most recdent checkpointed lease with the partitionId.\r\n   */\r\n  lease: CompleteLease;\r\n  /**\r\n   * @property {string} partitionId The eventhub partition id.\r\n   * @readonly\r\n   */\r\n  readonly partitionId: string;\r\n  /**\r\n   * @property {string} owner The host/owner of the partition.\r\n   * @readonly\r\n   */\r\n  get owner(): string {\r\n    return this.lease.owner;\r\n  }\r\n  /**\r\n   * @property {string} eventhubPath The path of the eventhub\r\n   * @readonly\r\n   */\r\n  get eventhubPath(): string {\r\n    return this._context.eventHubPath;\r\n  }\r\n  /**\r\n   * @property {string} consumerGroup The name of the consumer group.\r\n   * @readonly\r\n   */\r\n  get consumerGroup(): string {\r\n    return this._context.consumerGroup;\r\n  }\r\n\r\n  private _context: HostContextWithCheckpointLeaseManager;\r\n  private _offset: string = EventPosition.startOfStream;\r\n  private _sequenceNumber: number = 0;\r\n\r\n  /**\r\n   * Creates a new PartitionContext.\r\n   * @param {string} partitionId The eventhub partition id.\r\n   * @param {string} owner The name of the owner.\r\n   * @param {CompleteLease} lease The lease object.\r\n   */\r\n  constructor(context: HostContextWithCheckpointLeaseManager, partitionId: string, lease: CompleteLease) {\r\n    this._context = context;\r\n    this.partitionId = partitionId;\r\n    this.lease = lease;\r\n  }\r\n\r\n  /**\r\n   * Sets the offset and sequence number of the partition context from the provided EventData.\r\n   * @param {EventData} eventData The event data `received` from the EventHubReceiver.\r\n   */\r\n  setOffsetAndSequenceNumber(eventData: EventData): void {\r\n    validateType(\"eventData\", eventData, true, \"object\");\r\n    validateType(\"eventData.offset\", eventData.offset, true, \"string\");\r\n    validateType(\"eventData.sequenceNumber\", eventData.sequenceNumber, true, \"number\");\r\n    this._offset = eventData.offset!;\r\n    this._sequenceNumber = eventData.sequenceNumber!;\r\n  }\r\n\r\n  /**\r\n   * Writes the current offset and sequenceNumber to the checkpoint store via the checkpoint manager.\r\n   *\r\n   * The checkpoint data is structured as a JSON payload (example):\r\n   * `{ \"partitionId\":\"0\",\"owner\":\"ephtest\",\"token\":\"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a\",\r\n   * \"epoch\":1,\"offset\":\"\",\"SequenceNumber\":0 }`.\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  async checkpoint(): Promise<void> {\r\n    const capturedCheckpoint: CheckpointInfo = {\r\n      offset: this._offset,\r\n      partitionId: this.partitionId,\r\n      sequenceNumber: this._sequenceNumber\r\n    };\r\n    const withHostAndPartiton = this._context.withHostAndPartition;\r\n    log.partitionContext(withHostAndPartiton(this, \"Checkpointing: %O\"), capturedCheckpoint);\r\n    await this._context.checkpointLock.acquire(this._context.checkpointLockId, () => {\r\n      return this._persistCheckpoint(capturedCheckpoint);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Writes the current offset and sequenceNumber to the checkpoint store via the checkpoint manager.\r\n   *\r\n   * The checkpoint data is structured as a JSON payload (example):\r\n   * `{ \"partitionId\":\"0\",\"owner\":\"ephtest\",\"token\":\"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a\",\r\n   * \"epoch\":1,\"offset\":\"\",\"SequenceNumber\":0 }`.\r\n   *\r\n   * @param {EventData} eventData The event data received from the EventHubReceiver.\r\n   * @return {Promise<void>}\r\n   */\r\n  async checkpointFromEventData(eventData: EventData): Promise<void> {\r\n    const data = CheckpointInfo.createFromEventData(this.partitionId, eventData);\r\n    const withHostAndPartiton = this._context.withHostAndPartition;\r\n    log.partitionContext(withHostAndPartiton(this, \"Checkpointing from ED: %O\"), data);\r\n    await this._context.checkpointLock.acquire(this._context.checkpointLockId, () => {\r\n      return this._persistCheckpoint(data);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  async getInitialOffset(): Promise<EventPosition> {\r\n    const startingCheckpoint = await this._context.checkpointManager.getCheckpoint(this.partitionId);\r\n    const withHostAndPartiton = this._context.withHostAndPartition;\r\n    let result: EventPosition;\r\n    if (!startingCheckpoint) {\r\n      if (this._context.initialOffset) {\r\n        log.partitionContext(withHostAndPartiton(this, \"User provided initial offset: %s\"),\r\n          this._context.initialOffset.getExpression());\r\n      }\r\n      result = this._context.initialOffset || EventPosition.fromOffset(this._offset);\r\n    } else {\r\n      if (startingCheckpoint.offset != undefined) this._offset = startingCheckpoint.offset;\r\n      if (startingCheckpoint.sequenceNumber != undefined) this._sequenceNumber = startingCheckpoint.sequenceNumber;\r\n      result = EventPosition.fromOffset(this._offset);\r\n      log.partitionContext(withHostAndPartiton(this, \"Retrieved starting offset/sequence \" +\r\n        \"number: %s/%d\"),\r\n        this._offset, this._sequenceNumber);\r\n    }\r\n    log.partitionContext(withHostAndPartiton(this, \"Initial position provider offset: %s, \" +\r\n      \"sequenceNumber: %d, enqueuedTime: %d\"), result.offset, result.sequenceNumber, result.enqueuedTime);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private async _persistCheckpoint(checkpoint: CheckpointInfo): Promise<void> {\r\n    const withHostAndPartiton = this._context.withHostAndPartition;\r\n    try {\r\n      const inStoreCheckpoint = await this._context.checkpointManager.getCheckpoint(checkpoint.partitionId);\r\n      if (inStoreCheckpoint && inStoreCheckpoint.sequenceNumber >= checkpoint.sequenceNumber) {\r\n        const msg = `Ignoring out of date checkpoint with offset: '${checkpoint.offset}', ` +\r\n          `sequenceNumber: ${checkpoint.sequenceNumber} because currently persisted checkpoint ` +\r\n          ` has higher offset '${inStoreCheckpoint.offset}', sequenceNumber ` +\r\n          `${inStoreCheckpoint.sequenceNumber}.`;\r\n        log.error(withHostAndPartiton(this, \"%s\"), msg);\r\n        throw new Error(msg);\r\n      }\r\n      log.partitionContext(withHostAndPartiton(this, \"Persisting the checkpoint: %O.\"), checkpoint);\r\n      await this._context.checkpointManager.updateCheckpoint(this.lease, checkpoint);\r\n      log.partitionContext(withHostAndPartiton(this, \"Successfully persisted the checkpoint: %O.\"),\r\n        checkpoint);\r\n    } catch (err) {\r\n      const msg = `An error occurred while checkpointing info for partition ` +\r\n        `'${checkpoint.partitionId}': ${err ? err.stack : JSON.stringify(err)}.`;\r\n      log.error(withHostAndPartiton(this, \"%s\"), msg);\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { PartitionContext } from \"./partitionContext\";\r\nimport {\r\n  EventData, MessagingError, EventPosition, TokenProvider, ClientOptionsBase\r\n} from \"@azure/event-hubs\";\r\nimport { CheckpointManager } from \"./checkpointManager\";\r\nimport { LeaseManager } from \"./leaseManager\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport enum CloseReason {\r\n  leaseLost = \"LeaseLost\",\r\n  shutdown = \"ShutDown\"\r\n}\r\n\r\n/**\r\n * Provides information about internal errors that occur while managing partitions or leases for\r\n * the partitions.\r\n * @interface EPHDiagnosticInfo\r\n */\r\nexport interface EPHDiagnosticInfo {\r\n  /**\r\n   * @property {string} hostName The name of the host that experienced the error. Allows\r\n   * distinguishing the error source if multiple hosts in a single process.\r\n   */\r\n  hostName: string;\r\n  /**\r\n   * @property {string} partitionId The partitionId that experienced the error. Allows\r\n   * distinguishing the error source if multiple hosts in a single process.\r\n   */\r\n  partitionId: string;\r\n  /**\r\n   * @property {string} action A short string that indicates what general activity threw the\r\n   * error.\r\n   */\r\n  action: string;\r\n  /**\r\n   * @property {any} error The error that was thrown.\r\n   */\r\n  error: any;\r\n}\r\n\r\n/**\r\n * Describes the error handler signature to receive notifcation for general errors.\r\n *\r\n * Errors which occur while processing events from a particular EventHub partition are delivered\r\n * to the `onError` handler provided in the `start()` method. This handler is called on\r\n * occasions when an error occurs while managing partitions or leases for the partitions.\r\n * @function\r\n */\r\nexport type OnEphError = (error: EPHDiagnosticInfo) => void;\r\n\r\n/**\r\n * Describes the message handler signature for messages received from an EventHub.\r\n * @function\r\n */\r\nexport type OnReceivedMessage = (context: PartitionContext, eventData: EventData) => void;\r\n\r\n/**\r\n * Describes the message handler signature for errors that occur while receiving messages from an\r\n * EventHub.\r\n * @function\r\n */\r\nexport type OnReceivedError = (error: MessagingError | Error) => void;\r\n\r\n/**\r\n * Describes the optional parameters that can be provided for creating an EventProcessorHost while\r\n * creating from an iothub connectionstring.\r\n * @interface FromIotHubConnectionStringOptions\r\n */\r\nexport type FromIotHubConnectionStringOptions = FromTokenProviderOptions;\r\n\r\n/**\r\n * Describes the optional parameters that can be provided for creating an EventProcessorHost while\r\n * creating from the given token provider\r\n * @interface FromTokenProviderOptions\r\n */\r\nexport interface FromTokenProviderOptions extends ClientOptionsBase {\r\n  /**\r\n   * @property {EventPosition} initialOffset This is only used when then receiver is being created\r\n   * for the very first time and there is no checkpoint data in the blob. For this option to be\r\n   * effective please make sure to provide a new hostName that was not used previously.\r\n   */\r\n  initialOffset?: EventPosition;\r\n  /**\r\n   * @property {string} [consumerGroup] The name of the consumer group within the Event Hub. Default\r\n   * value: **`\"$default\"`**.\r\n   */\r\n  consumerGroup?: string;\r\n  /**\r\n   * @property {string} [storageBlobPrefix] Prefix used when naming blobs within the storage\r\n   * container.\r\n   */\r\n  storageBlobPrefix?: string;\r\n  /**\r\n   * @property {OnEphError} [onEphError] Error handler that can be provided to receive notifcation\r\n   * for general errors.\r\n   *\r\n   * Errors which occur while processing events from a particular EventHub partition are delivered\r\n   * to the `onError` handler provided in the `start()` method. This handler is called on\r\n   * occasions when an error occurs while managing partitions or leases for the partitions.\r\n   */\r\n  onEphError?: OnEphError;\r\n  /**\r\n   * @property {number} [leaseRenewInterval] The sleep interval **`in seconds`** between scans.\r\n   * Default: **`10` seconds**.\r\n   *\r\n   * Allows a lease manager implementation to specify to PartitionManager how often it should\r\n   * scan leases and renew them. In order to redistribute leases in a timely fashion after a host\r\n   * ceases operating, we recommend a relatively short interval, such as ten seconds. Obviously it\r\n   * should be less than half of the lease length, to prevent accidental expiration.\r\n   */\r\n  leaseRenewInterval?: number;\r\n  /**\r\n   * @property {number} [leaseDuration] Duration of a lease **`in seconds`** before it expires\r\n   * unless renewed. Default: **`30` seconds**, Min Value: **`15` seconds**,\r\n   * Max value: **`60` seconds**.\r\n   */\r\n  leaseDuration?: number;\r\n  /**\r\n   * @property {number} [startupScanDelay] The delay time **`in seconds`** between the first scan\r\n   * for available partitions and the second. This is part of a startup optimization which allows\r\n   * individual hosts to become visible to other hosts, and thereby get a more accurate count\r\n   * of the number of hosts in the system, before they try to estimate how many partitions they\r\n   * should own. Default: **`30` seconds**.\r\n   */\r\n  startupScanDelay?: number;\r\n  /**\r\n   * @property {number} [fastScanInterval] There are two possible interval times between scans for\r\n   * available partitions, fast and slow. The fast (short) interval **`in seconds`** is used after\r\n   * a scan in which lease stealing has occurred, to promote quicker rebalancing.\r\n   * Default: **`3` seconds**.\r\n   */\r\n  fastScanInterval?: number;\r\n  /**\r\n   * @property {number} [slowScanInterval] The slow (long) interval **`in seconds`** is used\r\n   * after a scan in which lease stealing did not occur, to reduce unnecessary scanning when\r\n   * the system is in steady state. Default: **`5` seconds**.\r\n   */\r\n  slowScanInterval?: number;\r\n}\r\n\r\n/**\r\n * Describes the optional parameters that can be provided for creating an EventProcessorHost while\r\n * creating from the eventhub connection string.\r\n * @interface FromConnectionStringOptions\r\n */\r\nexport interface FromConnectionStringOptions extends FromTokenProviderOptions {\r\n  /**\r\n   * @property {string} [eventHubPath] The name of the EventHub. This is optional if the\r\n   * EventHub connection string contains EntityPath=hub-name else an Error will be thrown.\r\n   */\r\n  eventHubPath?: string;\r\n}\r\n\r\n/**\r\n * Describes the optional parameters that can be provided for creating an EventProcessorHost.\r\n * @interface EventProcessorHostOptions\r\n */\r\nexport interface EventProcessorHostOptions extends FromConnectionStringOptions {\r\n  /**\r\n   * @property {string} [eventHubConnectionString] Connection string for the Event Hub to receive\r\n   * from. Example: \"Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;\r\n   * SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key\".\r\n   */\r\n  eventHubConnectionString?: string;\r\n  /**\r\n   * @property {string} [storageConnectionString] Connection string to Azure Storage account used\r\n   * for leases and checkpointing. Example \"DefaultEndpointsProtocol=https;AccountName=<account-name>;\r\n   * AccountKey=<account-key>;EndpointSuffix=core.windows.net\"\r\n   */\r\n  storageConnectionString?: string;\r\n  /**\r\n   * @property {string} [storageContainerName] Azure Storage container name for use by built-in\r\n   * lease and checkpoint manager.\r\n   */\r\n  storageContainerName?: string;\r\n  /**\r\n   * @property {CheckpointManager} [checkpointManager] A manager to manage checkpoints.\r\n   * Default: **`AzureStorageCheckpointLeaseManager`**.\r\n   */\r\n  checkpointManager?: CheckpointManager;\r\n  /**\r\n   * @property {LeaseManager} [LeaseManager] A manager to manage leases. Default:\r\n   * **`AzureStorageCheckpointLeaseManager`**.\r\n   */\r\n  leaseManager?: LeaseManager;\r\n  /**\r\n   * @property {TokenProvider} [tokenProvider] An instance of the token provider interface that\r\n   * provides the token for authentication. Default value: **`SasTokenProvider`**.\r\n   */\r\n  tokenProvider?: TokenProvider;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"./log\";\r\nimport { HostContextWithCheckpointLeaseManager } from \"./hostContext\";\r\nimport { CompleteLease } from \"./completeLease\";\r\nimport {\r\n  ReceiveHandler, EventHubClient, EventPosition, ReceiveOptions, EventData, MessagingError,\r\n  OnMessage, OnError, ErrorNameConditionMapper\r\n} from \"@azure/event-hubs\";\r\nimport { PartitionContext } from \"./partitionContext\";\r\nimport { CloseReason, OnReceivedMessage, OnReceivedError } from \"./modelTypes\";\r\nimport { AzureBlobLease } from \"./azureBlobLease\";\r\nimport { EPHActionStrings } from \"./util/utils\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class PartitionPump {\r\n  private _context: HostContextWithCheckpointLeaseManager;\r\n  private _lease: CompleteLease;\r\n  private _partitionContext: PartitionContext;\r\n  private _onMessage: OnReceivedMessage;\r\n  private _onError: OnReceivedError;\r\n  private _client?: EventHubClient;\r\n  private _receiveHandler?: ReceiveHandler;\r\n  private _leaseRenewalTimer?: NodeJS.Timer;\r\n\r\n  constructor(context: HostContextWithCheckpointLeaseManager, lease: CompleteLease,\r\n    onMessage: OnReceivedMessage, onError: OnReceivedError) {\r\n    this._context = context;\r\n    this._lease = lease;\r\n    this._partitionContext = new PartitionContext(this._context, lease.partitionId, lease);\r\n    this._onMessage = onMessage;\r\n    this._onError = onError;\r\n  }\r\n\r\n  get lease(): CompleteLease {\r\n    return this._lease;\r\n  }\r\n  set lease(newLease: CompleteLease) {\r\n    this._lease = newLease;\r\n    if (this._partitionContext) {\r\n      this._partitionContext.lease = this._lease;\r\n    }\r\n  }\r\n\r\n  isOpen(): boolean {\r\n    if (this._receiveHandler && this._receiveHandler.isReceiverOpen) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async start(): Promise<void> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    await this._createNewReceiver();\r\n    await this._scheduleLeaseRenewer();\r\n    log.partitionPump(withHostAndPartition(this._lease,\r\n      \"Successfully started the receiver and scheduled lease renewer.\"));\r\n  }\r\n\r\n  async stop(reason: CloseReason): Promise<void> {\r\n    await this._removeReceiver(reason);\r\n  }\r\n\r\n  private async _createNewReceiver(): Promise<void> {\r\n    const partitionId = this._partitionContext.partitionId;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    try {\r\n      this._client = this._context.getEventHubClient();\r\n    } catch (err) {\r\n      log.error(withHostAndPartition(partitionId, \"An error occurred while creating \" +\r\n        \"the eventhub client: %O.\"), err);\r\n      throw err;\r\n    }\r\n    log.partitionPump(withHostAndPartition(partitionId, \"Getting the initial offset.\"));\r\n    const eventPosition: EventPosition = await this._partitionContext.getInitialOffset();\r\n    this._context.pumps.set(partitionId, this);\r\n    log.partitionPump(withHostAndPartition(partitionId, \"Added the pump to the internal map.\"));\r\n    let receiveHandler: ReceiveHandler;\r\n    const rcvrOptions: ReceiveOptions = {\r\n      consumerGroup: this._context.consumerGroup,\r\n      eventPosition: eventPosition,\r\n      epoch: this._lease.epoch\r\n    };\r\n    const onMessage: OnMessage = (eventData: EventData) => {\r\n      this._partitionContext.setOffsetAndSequenceNumber(eventData);\r\n      this._onMessage(this._partitionContext, eventData);\r\n    };\r\n    const onError: OnError = async (error: MessagingError | Error) => {\r\n      log.error(withHostAndPartition(partitionId, \"Receiver '%s' received an error: %O.\"),\r\n        receiveHandler.address, error);\r\n      // Let the user know about the error only if it is not ReceiverDisconnectedError.\r\n      // This error happens when another instance of EPH connects a receiver with a higher epoch\r\n      // value to a partition in the same consumer group that this receiver was connected to.\r\n      // This happens due to lease being stolen or current lease expiring, which is expected.\r\n      // Hence not reporting suxh errors to the user will try to make it less confusing for the user.\r\n      if (!this._isReceiverDisconnectedError(error)) {\r\n        this._onError!(error);\r\n      }\r\n      try {\r\n        await this._removeReceiver(CloseReason.shutdown);\r\n      } catch (err) {\r\n        log.error(withHostAndPartition(partitionId, \"Since we received an error %O \" +\r\n          \"on the error handler for receiver with address '%s', we tried closing it. However, \" +\r\n          \"error occurred while closing it and it is: %O.\"), error, receiveHandler.address, err);\r\n      }\r\n    };\r\n    log.partitionPump(withHostAndPartition(partitionId, \"Trying to create receiver in \" +\r\n      \"consumergroup: '%s' with epoch %d from offset: %s.\"), rcvrOptions.consumerGroup,\r\n      rcvrOptions.epoch, eventPosition.getExpression());\r\n    receiveHandler = this._client.receive(partitionId, onMessage, onError, rcvrOptions);\r\n    this._receiveHandler = receiveHandler;\r\n    log.partitionPump(withHostAndPartition(partitionId, \"Created receiver '%s' with eventPosition: %s\"),\r\n      receiveHandler.address, eventPosition.getExpression());\r\n  }\r\n\r\n  private async _leaseRenewer(): Promise<void> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    let result: boolean = true;\r\n    let error: Error | undefined;\r\n    log.partitionPump(withHostAndPartition(this._lease, \"Lease renewer is active after \" +\r\n      \"%d seconds. Trying to renew the lease\"), this._context.leaseRenewInterval);\r\n    try {\r\n      result = await this._context.leaseManager.renewLease(this._lease);\r\n      if (result) {\r\n        log.partitionPump(withHostAndPartition(this._lease, \"Successfully renewed the lease.\"));\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while renewing the lease for partitionId ` +\r\n        `'${this._lease.partitionId}': ${err ? err.stack : JSON.stringify(err)}`;\r\n      error = new Error(msg);\r\n      this._context.onEphError({\r\n        hostName: this._context.hostName,\r\n        partitionId: this._lease.partitionId,\r\n        error: error,\r\n        action: EPHActionStrings.renewingLease\r\n      });\r\n      log.error(withHostAndPartition(this._lease, msg));\r\n    }\r\n    if (!result) {\r\n      log.error(withHostAndPartition(this._lease, \"Failed to renew the lease, result: %s. \" +\r\n        \"Shutting down the receiver.\"), result);\r\n      await this._removeReceiver(CloseReason.leaseLost);\r\n    } else {\r\n      this._scheduleLeaseRenewer();\r\n    }\r\n  }\r\n\r\n  private _scheduleLeaseRenewer(): void {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    const renewalTime = this._context.leaseRenewInterval * 1000;\r\n    log.partitionPump(withHostAndPartition(this._lease, \"Scheduling lease renewal in %d seconds.\"),\r\n      this._context.leaseRenewInterval);\r\n    this._leaseRenewalTimer = setTimeout(async () => {\r\n      try {\r\n        await this._leaseRenewer();\r\n      } catch (err) {\r\n        log.error(withHostAndPartition(this._lease, \"An error occurred in the _leaseRenewer(): %O\"),\r\n          err);\r\n      }\r\n    }, renewalTime);\r\n  }\r\n\r\n  private async _removeReceiver(reason: CloseReason): Promise<void> {\r\n    const receiveHandler = this._receiveHandler;\r\n    const partitionContext = this._partitionContext;\r\n    const partitionId = partitionContext.partitionId;\r\n    const leaseId = (this._lease as AzureBlobLease).token;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n\r\n    if (receiveHandler && this._client) {\r\n      try {\r\n        this._context.pumps.delete(partitionId);\r\n        log.partitionPump(withHostAndPartition(partitionId, \"Deleted the pump from internal map.\"));\r\n        clearTimeout(this._leaseRenewalTimer as NodeJS.Timer);\r\n        log.partitionPump(withHostAndPartition(partitionId,\r\n          \"Removing receiver '%s', due to reason '%s'.\"), receiveHandler.address, partitionId, reason);\r\n        await this._client.close();\r\n        log.partitionPump(withHostAndPartition(partitionId,\r\n          \"Successfully stopped the receiver '%s' for partitionId '%s' due to reason '%s'.\"),\r\n          receiveHandler.address, partitionId, reason);\r\n      } catch (err) {\r\n        const msg = `An error occurred while closing the receiver '${receiveHandler.address}' : ` +\r\n          `${err ? err.stack : JSON.stringify(err)}`;\r\n        log.error(withHostAndPartition(partitionId, \"%s\"), msg);\r\n      }\r\n      this._receiveHandler = undefined;\r\n      this._client = undefined;\r\n      // Release the lease if it was not lost.\r\n      if (reason !== CloseReason.leaseLost) {\r\n        try {\r\n          log.partitionPump(withHostAndPartition(partitionContext,\r\n            \"Releasing lease %s after closing the receiver '%s' due to reason '%s'.\"), leaseId,\r\n            receiveHandler.address, reason);\r\n          await this._context.leaseManager.releaseLease(partitionContext.lease);\r\n        } catch (err) {\r\n          const msg = `An error occurred while releasing the lease ${leaseId} ` +\r\n            `the receiver '${receiveHandler.address}' : ${err ? err.stack : JSON.stringify(err)} `;\r\n          log.error(withHostAndPartition(partitionId, \"%s\"), msg);\r\n          throw err;\r\n        }\r\n      }\r\n    } else {\r\n      log.partitionPump(withHostAndPartition(partitionId, \"No receiver was found to remove.\"));\r\n    }\r\n  }\r\n\r\n  private _isReceiverDisconnectedError(error: MessagingError | Error): boolean {\r\n    const partitionId = this._partitionContext.partitionId;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    let result = false;\r\n    if (error) {\r\n      // condition is \"amqp:link:stolen\"\r\n      if ((error as MessagingError).condition === ErrorNameConditionMapper.ReceiverDisconnectedError) {\r\n        result = true;\r\n      } else if (error.message.match(/.*New receiver with higher epoch.*/i) !== null) {\r\n        result = true;\r\n        log.error(withHostAndPartition(partitionId, \"It looks like the error should have \" +\r\n          \"been a 'ReceiverDisconnectedError', however it was not translated correctly: %O.\"), error);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"./log\";\r\nimport { HostContextWithCheckpointLeaseManager } from \"./hostContext\";\r\nimport { PartitionPump } from \"./partitionPump\";\r\nimport { CompleteLease } from \"./completeLease\";\r\nimport { CloseReason } from \"./modelTypes\";\r\nimport { EPHActionStrings } from \"./util/utils\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class PumpManager {\r\n  private _context: HostContextWithCheckpointLeaseManager;\r\n\r\n  constructor(context: HostContextWithCheckpointLeaseManager) {\r\n    this._context = context;\r\n  }\r\n\r\n  async addPump(lease: CompleteLease): Promise<void> {\r\n    const hostName = this._context.hostName;\r\n    const partitionId = lease.partitionId;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    try {\r\n      const capturedPump = this._context.pumps.get(partitionId);\r\n      if (capturedPump) {\r\n        const isOpen = capturedPump.isOpen();\r\n        if (!isOpen) {\r\n          log.error(withHostAndPartition(partitionId, \"The existing pump is open -> %s.\"), isOpen);\r\n          await this.removePump(partitionId, CloseReason.shutdown);\r\n        } else {\r\n          log.pumpManager(withHostAndPartition(partitionId, \"Updating lease for pump since it\" +\r\n            \"is open -> %s.\"), partitionId, isOpen);\r\n          capturedPump.lease = lease;\r\n        }\r\n      } else {\r\n        log.pumpManager(withHostAndPartition(partitionId, \"Creating a new pump with lease %o.\"),\r\n          lease.getInfo());\r\n        const pump = new PartitionPump(this._context, lease, this._context.onMessage!,\r\n          this._context.onError!);\r\n        await pump.start();\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while adding/updating a pump for partitionId ` +\r\n        `'${partitionId}': ${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(withHostAndPartition(partitionId, \"%s.\"), msg);\r\n      this._context.onEphError({\r\n        hostName: hostName,\r\n        partitionId: partitionId,\r\n        error: new Error(msg),\r\n        action: EPHActionStrings.partitionReceiverManagement\r\n      });\r\n    }\r\n  }\r\n\r\n  async removePump(partitionId: string, reason: CloseReason): Promise<void> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    try {\r\n      const capturedPump = this._context.pumps.get(partitionId);\r\n      if (capturedPump) {\r\n        log.pumpManager(withHostAndPartition(partitionId, \"Stopping the pump.\"));\r\n        await capturedPump.stop(reason);\r\n      } else {\r\n        log.pumpManager(withHostAndPartition(partitionId, \"No pump was found, to remove.\"));\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while removing a pump for partitionId '${partitionId}': ` +\r\n        `${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(withHostAndPartition(partitionId, \"%s.\"), msg);\r\n      this._context.onEphError({\r\n        hostName: this._context.hostName,\r\n        partitionId: partitionId,\r\n        error: new Error(msg),\r\n        action: EPHActionStrings.partitionReceiverManagement\r\n      });\r\n    }\r\n  }\r\n\r\n  async removeAllPumps(reason: CloseReason): Promise<void> {\r\n    const withHost = this._context.withHost;\r\n    const tasks: Promise<void>[] = [];\r\n    for (const id of this._context.pumps.keys()) {\r\n      tasks.push(this.removePump(id, reason));\r\n    }\r\n    log.partitionManager(withHost(\"Removing all the pumps due to reason %s.\"), reason);\r\n    await Promise.all(tasks);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { randomNumberFromInterval } from \"./util/utils\";\r\nimport { HostContextWithPumpManager } from \"./hostContext\";\r\nimport { CompleteLease } from \"./completeLease\";\r\nimport { BaseLease } from \"./baseLease\";\r\nimport { EPHActionStrings } from \"./util/utils\";\r\nimport * as log from \"./log\";\r\nimport { EPHDiagnosticInfo } from \"./modelTypes\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class PartitionScanner {\r\n  private _context: HostContextWithPumpManager;\r\n  private _allLeaseStates: BaseLease[] = [];\r\n  private _desiredCount: number = 0;\r\n  private _unownedCount: number = 0;\r\n  private _leaseOwnedByOthers: Map<string, BaseLease> = new Map<string, BaseLease>();\r\n\r\n  constructor(context: HostContextWithPumpManager) {\r\n    this._context = context;\r\n  }\r\n\r\n  async scan(isFirst: boolean): Promise<boolean> {\r\n    const hostName = this._context.hostName;\r\n    const withHost = this._context.withHost;\r\n    let didSteal = false;\r\n    try {\r\n      this._reset();\r\n      log.partitionScanner(withHost(\"Starting a new iteration to scan partitions.\"));\r\n      log.partitionScanner(withHost(\"Getting lease states to find out who owns what.\"));\r\n      await this._getAllLeaseStates();\r\n      log.partitionScanner(withHost(\"Sorting leases to find out the desired partition count.\"));\r\n      const ourLeasesCount: number = await this._sortLeasesAndCalculateDesiredCount(isFirst);\r\n      log.partitionScanner(withHost(\"Our lease count: %d.\"), ourLeasesCount);\r\n      const attemptToAcquire: number = this._desiredCount - ourLeasesCount;\r\n      log.partitionScanner(withHost(\"Attempting to acquire %d leases in parallel starting from \" +\r\n        \"position 0.\"), attemptToAcquire);\r\n      const remainingNeeded = await this._acquireExpiredInParallel(0, attemptToAcquire);\r\n      log.partitionScanner(withHost(\"Looking to steal: %d.\"), remainingNeeded);\r\n      if (remainingNeeded > 0) {\r\n        const stealThese = await this._findLeasesToSteal(remainingNeeded);\r\n        log.partitionScanner(withHost(\"Number of lease found to steal: %d.\"), stealThese.length);\r\n        didSteal = await this._stealLeases(stealThese);\r\n        log.partitionScanner(withHost(\"Have succesfully stolen: %d leases -> %s.\"),\r\n          stealThese.length, didSteal);\r\n      } else {\r\n        log.partitionScanner(withHost(\"No need to scan further since remaining needed: %d.\"),\r\n          remainingNeeded);\r\n      }\r\n    } catch (err) {\r\n      didSteal = false;\r\n      const msg = `An error occurred while scanning leases: ` +\r\n        `${err ? err.stack : JSON.stringify(err)}.`;\r\n      log.error(withHost(\"%s\"), hostName, msg);\r\n      const info: EPHDiagnosticInfo = {\r\n        action: EPHActionStrings.scanningLeases,\r\n        error: new Error(msg),\r\n        hostName: hostName,\r\n        partitionId: \"N/A\"\r\n      };\r\n      this._context.onEphError(info);\r\n    }\r\n    return didSteal;\r\n  }\r\n\r\n  private _reset(): void {\r\n    this._allLeaseStates = [];\r\n    this._desiredCount = 0;\r\n    this._unownedCount = 0;\r\n    this._leaseOwnedByOthers = new Map<string, BaseLease>();\r\n  }\r\n\r\n\r\n  private async _getAllLeaseStates(): Promise<void> {\r\n    const result = await this._context.leaseManager.getAllLeases();\r\n    this._allLeaseStates = result.sort();\r\n    log.partitionScanner(this._context.withHost(\"State of all the leases that we know about:\\n%O\"),\r\n      this._allLeaseStates);\r\n    return;\r\n  }\r\n\r\n  private _sortLeasesAndCalculateDesiredCount(isFirst: boolean): number {\r\n    const hostName: string = this._context.hostName;\r\n    const withHost = this._context.withHost;\r\n    log.partitionScanner(withHost(\"Accounting input: allLeaseStates count is: %d\"),\r\n      this._allLeaseStates.length);\r\n    const uniqueOwners: Set<string> = new Set<string>();\r\n    uniqueOwners.add(hostName);\r\n    let ourLeasesCount = 0;\r\n    this._unownedCount = 0;\r\n    for (const lease of this._allLeaseStates) {\r\n      const ownedByUs: boolean = lease.isOwned && lease.owner === hostName;\r\n      if (lease.isOwned && lease.owner) {\r\n        uniqueOwners.add(lease.owner);\r\n      } else {\r\n        this._unownedCount++;\r\n      }\r\n      if (ownedByUs) {\r\n        ourLeasesCount++;\r\n      } else if (lease.isOwned) {\r\n        this._leaseOwnedByOthers.set(lease.partitionId, lease);\r\n      }\r\n    }\r\n    const hostCount = uniqueOwners.size;\r\n    const countPerHost = Math.floor(this._allLeaseStates.length / hostCount);\r\n    this._desiredCount = isFirst ? 1 : countPerHost;\r\n    if (!isFirst && this._unownedCount > 0\r\n      && this._unownedCount < hostCount\r\n      && this._allLeaseStates.length % hostCount !== 0) {\r\n      // distribute leftovers\r\n      this._desiredCount++;\r\n    }\r\n\r\n    const sortedHosts: Array<string> = Array.from(uniqueOwners).sort();\r\n    let hostOrdinal: number = -1;\r\n    let startingPoint: number = 0;\r\n    if (isFirst) {\r\n      // If the entire system is starting up, the list of hosts is probably not complete and we\r\n      // can not really compute a meaningful hostOrdinal. But we only want hostOrdinal to\r\n      // calculate startingPoint. Instead, just randomly select a startingPoint.\r\n      startingPoint = randomNumberFromInterval(0, this._allLeaseStates.length - 1);\r\n    } else {\r\n      for (hostOrdinal = 0; hostOrdinal > sortedHosts.length; hostOrdinal++) {\r\n        if (sortedHosts[hostOrdinal] === hostName) {\r\n          break;\r\n        }\r\n      }\r\n      startingPoint = countPerHost * hostOrdinal;\r\n    }\r\n    // rotate this._allLeaseStates\r\n    log.partitionScanner(withHost(\"Host ordinal: %d. Rotating leases to start at: %d.\"),\r\n      hostOrdinal, startingPoint);\r\n    if (startingPoint !== 0) {\r\n      const rotatedList: Array<BaseLease> = [];\r\n      for (let i = 0; i < this._allLeaseStates.length; i++) {\r\n        const index = (i + startingPoint) % this._allLeaseStates.length;\r\n        rotatedList.push(this._allLeaseStates[index]);\r\n      }\r\n      this._allLeaseStates = rotatedList;\r\n    }\r\n    log.partitionScanner(withHost(\"Host count is %d. So Desired partition count is %d.\"), hostCount,\r\n      this._desiredCount);\r\n    log.partitionScanner(withHost(\"our leases count: %d v/s leases owned by others: %d.\"),\r\n      ourLeasesCount, this._leaseOwnedByOthers.size);\r\n    log.partitionScanner(withHost(\"Total number of pumps: %d.\"), this._context.pumps.size);\r\n    return ourLeasesCount;\r\n  }\r\n\r\n  private _findExpiredLeases(startAt: number, endAt: number): BaseLease[] {\r\n    const withHost = this._context.withHost;\r\n    const expiredLeases: BaseLease[] = [];\r\n    log.partitionScanner(withHost(\"Finding expired leases from '%s': [%d] upto '%s': [%d]\"),\r\n      this._allLeaseStates[startAt].partitionId, startAt,\r\n      endAt < this._allLeaseStates.length ? this._allLeaseStates[endAt].partitionId : \"end\", endAt);\r\n    for (const lease of this._allLeaseStates.slice(startAt, endAt)) {\r\n      if (!lease.isOwned) {\r\n        expiredLeases.push(lease);\r\n      }\r\n    }\r\n    log.partitionScanner(withHost(\"Found in range: %d\"), expiredLeases.length);\r\n    return expiredLeases;\r\n  }\r\n\r\n  private _acquireExpiredInParallel(startAt: number, needed: number): Promise<number> {\r\n    const hostName = this._context.hostName;\r\n    const withHost = this._context.withHost;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    const resultPromise = Promise.resolve(needed);\r\n    if (startAt < this._allLeaseStates.length) {\r\n      const lease = this._allLeaseStates[startAt];\r\n      const partitionId = lease ? lease.partitionId : \"undefined\";\r\n      log.partitionScanner(withHost(\"Examining chunk at '%s': [%d], needed %d.\"),\r\n        partitionId, startAt, needed);\r\n    } else {\r\n      log.partitionScanner(withHost(\"Examining chunk skipping, startAt is off end: %d\"), startAt);\r\n    }\r\n\r\n    if (needed > 0 && this._unownedCount > 0 && startAt < this._allLeaseStates.length) {\r\n      let runningNeeded = needed;\r\n      const endAt = Math.min(startAt + needed, this._allLeaseStates.length);\r\n      log.partitionScanner(withHost(\"Finding expired leases from inclusive position range %d - %d\"),\r\n        startAt, endAt);\r\n      const getThese: BaseLease[] = this._findExpiredLeases(startAt, endAt);\r\n      const leaseManager = this._context.leaseManager;\r\n      const getTheseResult: Promise<void>[] = [];\r\n      for (const thisLease of getThese) {\r\n        let lease: CompleteLease | undefined = undefined;\r\n        const getThisPromise = leaseManager.getLease(thisLease.partitionId).then((receivedLease) => {\r\n          lease = receivedLease;\r\n          if (lease) {\r\n            return leaseManager.acquireLease(lease);\r\n          } else {\r\n            return false;\r\n          }\r\n        }).then((acquired) => {\r\n          if (acquired) {\r\n            runningNeeded--;\r\n            log.partitionScanner(withHostAndPartition(thisLease, \"Acquired unowned/expired lease.\"));\r\n            if (this._leaseOwnedByOthers.has(lease!.partitionId)) {\r\n              this._leaseOwnedByOthers.delete(lease!.partitionId);\r\n              this._unownedCount--;\r\n            }\r\n            return this._context.pumpManager.addPump(lease!);\r\n          } else if (lease) {\r\n            this._leaseOwnedByOthers.set(lease.partitionId, lease);\r\n          }\r\n          return Promise.resolve();\r\n        }).catch((err) => {\r\n          const msg = `An error occurred while getting/acquiring lease for partitionId ` +\r\n            `'${thisLease.partitionId}': ${err ? err.stack : JSON.stringify(err)}`;\r\n          log.error(withHostAndPartition(thisLease, \"%s\"), msg);\r\n          const info: EPHDiagnosticInfo = {\r\n            action: EPHActionStrings.checkingLeases,\r\n            error: new Error(msg),\r\n            hostName: hostName,\r\n            partitionId: thisLease.partitionId\r\n          };\r\n          this._context.onEphError(info);\r\n        });\r\n        getTheseResult.push(getThisPromise);\r\n      }\r\n\r\n      return resultPromise.then(() => {\r\n        return Promise.all(getTheseResult).catch((err) => {\r\n          const msg = `An error occurred while getting/acquiring leases for some partitionId: ` +\r\n            `${err ? err.stack : JSON.stringify(err)}`;\r\n          log.error(withHost(\"%s\"), msg);\r\n        }).then(() => {\r\n          log.partitionScanner(withHost(\"Calling _acquireExpiredInParallel with startAt %d, \" +\r\n            \"needed %d.\"), endAt, runningNeeded);\r\n          return this._acquireExpiredInParallel(endAt, runningNeeded);\r\n        });\r\n      });\r\n    } else {\r\n      log.partitionScanner(withHost(\"Short circuit: needed is %d, unowned is: %d, off end -> %s.\"),\r\n        needed, this._unownedCount, startAt < this._allLeaseStates.length);\r\n    }\r\n\r\n    return resultPromise;\r\n  }\r\n\r\n  private _findLeasesToSteal(stealAsk: number): BaseLease[] {\r\n    // Generate a map of hostnames and owned counts.\r\n    const hostOwns: Map<string, number> = new Map<string, number>();\r\n    for (const lease of this._leaseOwnedByOthers.values()) {\r\n      if (hostOwns.has(lease.owner)) {\r\n        const newCount = hostOwns.get(lease.owner)! + 1;\r\n        hostOwns.set(lease.owner, newCount);\r\n      } else {\r\n        hostOwns.set(lease.owner, 1);\r\n      }\r\n    }\r\n\r\n    // Extract hosts which own more than the desired count\r\n    const bigOwners: Array<string> = [];\r\n    const withHost = this._context.withHost;\r\n    for (const entry of hostOwns.entries()) {\r\n      if (entry[1] > this._desiredCount) {\r\n        bigOwners.push(entry[0]);\r\n        log.partitionScanner(withHost(\"Big owner %s has %d\"), entry[0], entry[1]);\r\n      }\r\n    }\r\n    const stealLeases: BaseLease[] = [];\r\n    if (bigOwners.length > 0) {\r\n      // Randomly pick one of the big owners\r\n      const index: number = randomNumberFromInterval(0, bigOwners.length);\r\n      const bigVictim: string = bigOwners[index];\r\n      const victimExtra = hostOwns.get(bigVictim)! - this._desiredCount - 1;\r\n      const stealCount = Math.min(victimExtra, stealAsk);\r\n      log.partitionScanner(withHost(\"Stealing %d from %s.\"), stealCount, bigVictim);\r\n\r\n      // Grab stealCount partitions owned by bigVictim and return the leases.\r\n      for (const candidate of this._allLeaseStates) {\r\n        if (candidate.owner != undefined && candidate.owner === bigVictim) {\r\n          stealLeases.push(candidate);\r\n          if (stealLeases.length >= stealCount) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      log.partitionScanner(withHost(\"No big owners found, skipping steal.\"));\r\n    }\r\n    return stealLeases;\r\n  }\r\n\r\n  private async _stealLeases(stealThese: BaseLease[]): Promise<boolean> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    if (stealThese.length > 0) {\r\n      const steals: Promise<boolean>[] = [];\r\n      for (const stealableLease of stealThese) {\r\n        let lease: CompleteLease | undefined = undefined;\r\n        const tryStealPromise: Promise<boolean> =\r\n          this._context.leaseManager.getLease(stealableLease.partitionId).then((receivedLease) => {\r\n            lease = receivedLease;\r\n            if (receivedLease) {\r\n              return this._context.leaseManager.acquireLease(receivedLease);\r\n            } else {\r\n              return false;\r\n            }\r\n          }).then((acquired) => {\r\n            if (acquired) {\r\n              this._context.pumpManager.addPump(lease!).catch();\r\n              log.partitionScanner(withHostAndPartition(stealableLease,\r\n                \"Successfully stolen the lease.\"));\r\n            }\r\n            return acquired;\r\n          }).catch((err) => {\r\n            const msg = `An error occurred while stealing the lease for partitionId ` +\r\n              `'${stealableLease.partitionId}': ${err ? err.stack : JSON.stringify(err)}`;\r\n            log.error(withHostAndPartition(stealableLease, \"%s\"), msg);\r\n            const info: EPHDiagnosticInfo = {\r\n              action: EPHActionStrings.stealingLease,\r\n              partitionId: stealableLease.partitionId,\r\n              hostName: this._context.hostName,\r\n              error: err\r\n            };\r\n            this._context.onEphError(info);\r\n            return false;\r\n          });\r\n        steals.push(tryStealPromise);\r\n      }\r\n\r\n      const stealResult = await Promise.all<boolean>(steals);\r\n      // If we found at least one case where the lease could not be stolen then `.some()`\r\n      // returns true. The final result will be true if `.some()` was not able to find a single\r\n      // lease that could not be stolen.\r\n      const result = !stealResult.some((x) => { return !x; });\r\n      return result;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { HostContextWithPumpManager } from \"./hostContext\";\r\nimport { validateType, RetryConfig, retry, EPHActionStrings } from \"./util/utils\";\r\nimport { delay } from \"@azure/event-hubs\";\r\nimport * as log from \"./log\";\r\nimport { OnReceivedMessage, OnReceivedError, CloseReason } from \"./modelTypes\";\r\nimport { PartitionScanner } from \"./partitionScanner\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class PartitionManager {\r\n\r\n  private _context: HostContextWithPumpManager;\r\n  private _partitionScanner: PartitionScanner;\r\n  private _isCancelRequested: boolean = false;\r\n  private _isRunning: boolean = false;\r\n  private _runTask?: Promise<void>;\r\n\r\n  constructor(context: HostContextWithPumpManager) {\r\n    this._context = context;\r\n    this._partitionScanner = new PartitionScanner(this._context);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  async start(onMessage: OnReceivedMessage, onError: OnReceivedError): Promise<void> {\r\n    validateType(\"onMessage\", onMessage, true, \"function\");\r\n    validateType(\"onError\", onError, true, \"function\");\r\n    if (this._isRunning) {\r\n      throw new Error(\"A partition manager cannot be started multiple times.\");\r\n    }\r\n\r\n    try {\r\n      this._reset();\r\n      this._isRunning = true;\r\n      this._context.onMessage = onMessage;\r\n      this._context.onError = onError;\r\n      await this._cachePartitionIds();\r\n      await this._initializeStores();\r\n      this._runTask = this._run();\r\n    } catch (err) {\r\n      this._isRunning = false;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  async stop(): Promise<void> {\r\n    const withHost = this._context.withHost;\r\n    this._isCancelRequested = true;\r\n    const localRunTask = this._runTask;\r\n    if (localRunTask) {\r\n      try {\r\n        await localRunTask;\r\n      } catch (err) {\r\n        const msg = `An error occurred while stopping the run task: ` +\r\n          `${err ? err.stack : JSON.stringify(err)}.`;\r\n        log.error(withHost(\"%s\"), msg);\r\n      } finally {\r\n        this._isRunning = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  shouldStop(): boolean {\r\n    if (this._isCancelRequested) {\r\n      log.partitionManager(this._context.withHost(\"Cancellation was requested -> %s. \" +\r\n        \"Hence stopping further execution.\"), this._isCancelRequested);\r\n    }\r\n    return this._isCancelRequested;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private _reset(): void {\r\n    const withHost = this._context.withHost;\r\n    log.partitionManager(withHost(\"Resetting the partition manager.\"));\r\n    this._context.blobReferenceByPartition = {};\r\n    this._context.onMessage = undefined;\r\n    this._context.onError = undefined;\r\n    this._isRunning = false;\r\n    this._isCancelRequested = false;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private async _run(): Promise<void> {\r\n    const withHost = this._context.withHost;\r\n    try {\r\n      await this._scan(true);\r\n    } catch (err) {\r\n      const msg = `An error occurred in the main loop of the partition ` +\r\n        `manager: ${err ? err.stack : JSON.stringify(err)}. Hence shutting down.`;\r\n      log.error(withHost(\"%s\"), msg);\r\n      this._context.onEphError({\r\n        hostName: this._context.hostName,\r\n        partitionId: \"N/A\",\r\n        error: err,\r\n        action: EPHActionStrings.partitionManagerMainLoop\r\n      });\r\n    }\r\n    try {\r\n      // clean up\r\n      log.partitionManager(withHost(\"Shutting down all the receivers.\"));\r\n      await this._context.pumpManager.removeAllPumps(CloseReason.shutdown);\r\n    } catch (err) {\r\n      const msg = `An error occurred while shutting down the partition ` +\r\n        `manager: ${err ? err.stack : JSON.stringify(err)}.`;\r\n      log.error(withHost(\"%s\"), msg);\r\n      this._context.onEphError({\r\n        hostName: this._context.hostName,\r\n        partitionId: \"N/A\",\r\n        error: err,\r\n        action: EPHActionStrings.partitionManagerCleanup\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private async _cachePartitionIds(): Promise<void> {\r\n    const hostName = this._context.hostName;\r\n    const withHost = this._context.withHost;\r\n    if (!this._context.partitionIds.length) {\r\n      log.partitionManager(withHost(\"Get the list of partition ids.\"));\r\n      const config: RetryConfig<string[]> = {\r\n        hostName: hostName,\r\n        operation: () => this._context.getPartitionIds(),\r\n        retryMessage: \"Failure getting partition ids for this Event Hub, retrying\",\r\n        finalFailureMessage: \"Out of retries for getting partition ids for this Event Hub\",\r\n        action: EPHActionStrings.gettingPartitionIds,\r\n        maxRetries: 5\r\n      };\r\n      await retry<string[]>(config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private async _initializeStores(): Promise<void> {\r\n    const hostName = this._context.hostName;\r\n    const withHost = this._context.withHost;\r\n    const leaseManager = this._context.leaseManager;\r\n    const checkpointManager = this._context.checkpointManager;\r\n\r\n    validateType(\"this._context.onMessage\", this._context.onMessage, true, \"function\");\r\n    validateType(\"this._context.onError\", this._context.onError, true, \"function\");\r\n\r\n    log.partitionManager(withHost(\"Ensuring that the lease store exists.\"));\r\n    if (!await leaseManager.leaseStoreExists()) {\r\n      const config: RetryConfig<void> = {\r\n        hostName: hostName,\r\n        operation: () => leaseManager.createLeaseStoreIfNotExists(),\r\n        retryMessage: \"Failure creating lease store for this Event Hub, retrying\",\r\n        finalFailureMessage: \"Out of retries for creating lease store for this Event Hub\",\r\n        action: EPHActionStrings.creatingLeaseStore,\r\n        maxRetries: 5\r\n      };\r\n      await retry<void>(config);\r\n    }\r\n\r\n    if (this.shouldStop()) return;\r\n\r\n    log.partitionManager(withHost(\"Ensure the checkpointstore exists.\"));\r\n    if (!await checkpointManager.checkpointStoreExists()) {\r\n      const config: RetryConfig<void> = {\r\n        hostName: hostName,\r\n        operation: () => checkpointManager.createCheckpointStoreIfNotExists(),\r\n        retryMessage: \"Failure creating checkpoint store for this Event Hub, retrying\",\r\n        finalFailureMessage: \"Out of retries for creating checkpoint store for this Event Hub\",\r\n        action: EPHActionStrings.creatingCheckpointStore,\r\n        maxRetries: 5\r\n      };\r\n      await retry<void>(config);\r\n    }\r\n\r\n    if (this.shouldStop()) return;\r\n\r\n    log.partitionManager(withHost(\"Ensure that the leases exist.\"));\r\n    const leaseConfig: RetryConfig<void> = {\r\n      hostName: hostName,\r\n      operation: () => leaseManager.createAllLeasesIfNotExists(this._context.partitionIds),\r\n      retryMessage: \"Failure creating lease for partition, retrying\",\r\n      finalFailureMessage: \"Out of retries for creating lease for partition\",\r\n      action: EPHActionStrings.creatingLease,\r\n      maxRetries: 5\r\n    };\r\n    await retry<void>(leaseConfig);\r\n\r\n    if (this.shouldStop()) return;\r\n\r\n    log.partitionManager(withHost(\"Ensure that the checkpoint exists.\"));\r\n    const checkpointConfig: RetryConfig<void> = {\r\n      hostName: hostName,\r\n      operation: () => checkpointManager.createAllCheckpointsIfNotExists(this._context.partitionIds),\r\n      retryMessage: \"Failure creating checkpoint for partition, retrying\",\r\n      finalFailureMessage: \"Out of retries for creating checkpoint for partition\",\r\n      action: EPHActionStrings.creatingCheckpoint,\r\n      maxRetries: 5\r\n    };\r\n    await retry<void>(checkpointConfig);\r\n\r\n    if (this.shouldStop()) return;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  private async _scan(isFirst: boolean): Promise<void> {\r\n    const withHost = this._context.withHost;\r\n    while (!this.shouldStop()) {\r\n      if (isFirst) {\r\n        log.partitionManager(withHost(\"Starting the first scan.\"));\r\n      }\r\n      const didSteal = await this._partitionScanner.scan(isFirst);\r\n      log.partitionManager(withHost(\"Did we steal any leases in this scan: %s.\"), didSteal);\r\n      let seconds: number = didSteal ? this._context.fastScanInterval! : this._context.slowScanInterval!;\r\n      if (isFirst) {\r\n        seconds = this._context.startupScanDelay!;\r\n        isFirst = false;\r\n      }\r\n      log.partitionManager(withHost(\"Sleeping for %d seconds before starting the next scan.\"), seconds);\r\n      await delay(seconds * 1000);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport const minLeaseDurationInSeconds = 15;\r\nexport const maxLeaseDurationInSeconds = 60;\r\nexport const defaultLeaseDurationInSeconds = 30;\r\nexport const defaultLeaseRenewIntervalInSeconds = 10;\r\nexport const defaultMaximumExecutionTimeInMs = 120000;\r\nexport const maximumExecutionTimeInMsForLeaseRenewal = 60000;\r\nexport const defaultCheckpointTimeoutInSeconds = 120;\r\nexport const defaultStartupScanDelayInSeconds = 30;\r\nexport const defaultFastScanIntervalInSeconds = 3;\r\nexport const defaultSlowScanIntervalInSeconds = 5;\r\nexport const metadataOwnerName = \"owninghost\";\r\nexport const leaseLost = \"leaselost\";\r\nexport const leaseIdMismatchWithLeaseOperation = \"leaseidmismatchwithleaseoperation\";\r\nexport const leaseIdMismatchWithBlobOperation = \"leaseidmismatchwithbloboperation\";\r\nexport const userAgentPrefix = \"/js-event-processor-host\";\r\nexport const defaultConsumerGroup = \"$default\";\r\nexport const packageInfo = {\r\n  name: \"@azure/event-processor-host\",\r\n  version: \"1.0.5\"\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Dictionary } from \"@azure/event-hubs\";\r\nimport { createBlobService, BlobService as StorageBlobService, ServiceResponse } from \"azure-storage\";\r\nimport * as log from \"./log\";\r\nimport { validateType, getStorageError } from \"./util/utils\";\r\nimport { defaultMaximumExecutionTimeInMs } from \"./util/constants\";\r\nimport path from \"path\";\r\n/**\r\n * @ignore\r\n */\r\nexport interface CreateContainerResult {\r\n  created: StorageBlobService.ContainerResult;\r\n  details: ServiceResponse;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport enum LeaseState {\r\n  /**\r\n   * The lease state is not specified.\r\n   */\r\n  unspecified = \"unspecified\",\r\n\r\n  /**\r\n   * The lease is in the \"available\" state.\r\n   */\r\n  available = \"available\",\r\n\r\n  /**\r\n   * The lease is in the \"leased\" state.\r\n   */\r\n  leased = \"leased\",\r\n\r\n  /**\r\n   * The lease is in the \"expired\" state.\r\n   */\r\n  expired = \"expired\",\r\n\r\n  /**\r\n   * The lease is in the \"breaking\" state.\r\n   */\r\n  breaking = \"breaking\",\r\n\r\n  /**\r\n   * The lease is in the \"broken\" state.\r\n   */\r\n  broken = \"broken\"\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class BlobService {\r\n  private _hostName: string;\r\n  private _connectionString: string;\r\n  private _storageBlobService: StorageBlobService;\r\n  private _beginningOfTime: string = new Date(1990, 0, 1).toUTCString();\r\n\r\n  constructor(hostName: string, connectionString: string) {\r\n    this._hostName = hostName;\r\n    this._connectionString = connectionString;\r\n    this._storageBlobService = createBlobService(this._connectionString);\r\n    this._storageBlobService.defaultMaximumExecutionTimeInMs = defaultMaximumExecutionTimeInMs;\r\n  }\r\n\r\n  /**\r\n   * Ensures that the container and blob exist.\r\n   */\r\n  async ensureContainerAndBlobExist(containerName: string, blobPath: string): Promise<void> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n    try {\r\n      await this.ensureContainerExists(containerName);\r\n      await this.ensureBlobExists(containerName, blobPath, \"{}\");\r\n    } catch (err) {\r\n      const msg = `An error occurred while ensuring that the container and blob exists. ` +\r\n        `It is: \\n${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(\"[%s] [%s] %s\", this._hostName, partitionId, msg);\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  ensureContainerExists(containerName: string): Promise<CreateContainerResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n\r\n    return new Promise<CreateContainerResult>((resolve, reject) => {\r\n      log.blobService(\"[%s] Ensuring that the container '%s' exists.\", this._hostName, containerName);\r\n      this._storageBlobService.createContainerIfNotExists(containerName, (error, result, response) => {\r\n        if (error) {\r\n          log.error(\"[%s] An error occurred while ensuring that the container '%s' exists: %O\",\r\n            this._hostName, containerName, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          const containerInfo = { created: result, details: response };\r\n          log.blobService(\"[%s] Result for Container '%s': %O\",\r\n            this._hostName, containerName, containerInfo);\r\n          resolve(containerInfo);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  doesContainerExist(containerName: string): Promise<boolean> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      this._storageBlobService.doesContainerExist(containerName, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] An error occurred while determining whether the container \" +\r\n            \"'%s' exists: % O.\", this._hostName, containerName, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] Does container '%s' exist -> %s.\", this._hostName,\r\n            containerName, result.exists);\r\n          resolve(result.exists);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  doesBlobExist(containerName: string, blobPath: string): Promise<boolean> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      this._storageBlobService.doesBlobExist(containerName, blobPath, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while determining whether the blob '%s' exists in \" +\r\n            \"container '%s': %O\", this._hostName, partitionId, blobPath, containerName,\r\n            getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Does blob '%s' exist in container '%s' -> %s.\", this._hostName,\r\n            partitionId, blobPath, containerName, result.exists);\r\n          resolve(result.exists);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ensureBlobExists(containerName: string, blobPath: string, text: string): Promise<void> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"text\", text, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      const options: StorageBlobService.CreateBlobRequestOptions = {\r\n        accessConditions: {\r\n          DateUnModifiedSince: this._beginningOfTime\r\n        }\r\n      };\r\n      log.blobService(\"[%s] [%s] Ensuring that blob '%s' exists in container '%s'.\",\r\n        this._hostName, partitionId, blobPath, containerName);\r\n      this._storageBlobService.createBlockBlobFromText(containerName, blobPath, text, options, (error) => {\r\n        if (error) {\r\n          if ((error as any).statusCode === 412) {\r\n            // Blob already exists.\r\n            resolve();\r\n          } else {\r\n            log.error(\"[%s] [%s] An error occurred while ensuring that blob '%s' exists in \" +\r\n              \"container '%s': %O\", this._hostName, partitionId, blobPath, containerName,\r\n              getStorageError(error));\r\n            reject(error);\r\n          }\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  renewLease(containerName: string, blobPath: string, leaseId: string,\r\n    options: StorageBlobService.LeaseRequestOptions): Promise<StorageBlobService.LeaseResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"leaseId\", leaseId, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.LeaseResult>((resolve, reject) => {\r\n      if (!options) options = {};\r\n      log.blobService(\"[%s] [%s] Attempting to renew lease '%s' for blobPath '%s'.\", this._hostName,\r\n        partitionId, leaseId, blobPath);\r\n      this._storageBlobService.renewLease(containerName, blobPath, leaseId, options, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while renewing lease '%s' for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, leaseId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, renewed lease with leaseId: '%s' for blobPath '%s'.\",\r\n            this._hostName, partitionId, leaseId, blobPath);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  releaseLease(containerName: string, blobPath: string, leaseId: string,\r\n    options?: StorageBlobService.LeaseRequestOptions): Promise<StorageBlobService.LeaseResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"leaseId\", leaseId, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.LeaseResult>((resolve, reject) => {\r\n      if (!options) options = {};\r\n      log.blobService(\"[%s] [%s] Attempting to release lease '%s' for blobPath '%s'.\", this._hostName,\r\n        partitionId, leaseId, blobPath);\r\n      this._storageBlobService.releaseLease(containerName, blobPath, leaseId, options, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while releasing lease '%s' for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, leaseId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, released lease with leaseId: '%s' for blobPath '%s'.\",\r\n            this._hostName, partitionId, leaseId, blobPath);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateContent(containerName: string, blobPath: string, text: string,\r\n    options?: StorageBlobService.CreateBlobRequestOptions): Promise<StorageBlobService.BlobResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"text\", text, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.BlobResult>((resolve, reject) => {\r\n      if (!options) options = {};\r\n      log.blobService(\"[%s] [%s] Updating content '%s' in the container '%s' of the blob '%s' .\",\r\n        this._hostName, partitionId, text, containerName, blobPath);\r\n      this._storageBlobService.createBlockBlobFromText(containerName, blobPath, text, options, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while updating content '%s' to blobPath '%s': %O.\",\r\n            this._hostName, partitionId, text, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, updated blob content '%s' for blobPath '%s'.\",\r\n            this._hostName, partitionId, text, blobPath);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getContent(containerName: string, blobPath: string,\r\n    options?: StorageBlobService.GetBlobRequestOptions): Promise<string> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (!options) options = {};\r\n      log.blobService(\"[%s] [%s] Attempting to getcontent from blobPath '%s'.\", this._hostName,\r\n        partitionId, blobPath);\r\n      this._storageBlobService.getBlobToText(containerName, blobPath, options, (error, text, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while getting content from blobPath '%s': %O.\",\r\n            this._hostName, partitionId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, fetched blob content '%s' for blobPath '%s'.\",\r\n            this._hostName, partitionId, text, blobPath);\r\n          resolve(text);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  changeLease(containerName: string, blobPath: string, currentLeaseId: string,\r\n    proposedLeaseId: string): Promise<StorageBlobService.LeaseResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"currentLeaseId\", currentLeaseId, true, \"string\");\r\n    validateType(\"proposedLeaseId\", proposedLeaseId, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.LeaseResult>((resolve, reject) => {\r\n      log.blobService(\"[%s] [%s] Attempting to change lease '%s' for blobPath '%s' with new lease '%s'.\",\r\n        this._hostName, partitionId, currentLeaseId, blobPath, proposedLeaseId);\r\n      this._storageBlobService.changeLease(containerName, blobPath, currentLeaseId,\r\n        proposedLeaseId, (error, result) => {\r\n          if (error) {\r\n            log.error(\"[%s] [%s] An error occurred while changing lease '%s' to '%s' for blobPath \" +\r\n              \"'%s': %O.\", this._hostName, partitionId, currentLeaseId, proposedLeaseId, blobPath,\r\n              error);\r\n            reject(error);\r\n          } else {\r\n            log.blobService(\"[%s] [%s] Successfully, changed current lease '%s' with proposed lease \" +\r\n              \"'%s' for blobPath '%s'.\", this._hostName, partitionId, currentLeaseId,\r\n              proposedLeaseId, blobPath);\r\n            resolve(result);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  getBlobProperties(containerName: string, blobPath: string): Promise<StorageBlobService.BlobResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.BlobResult>((resolve, reject) => {\r\n      log.blobService(\"[%s] [%s] Attempting to get blob props for blobPath '%s'.\", this._hostName,\r\n        partitionId, blobPath);\r\n      this._storageBlobService.getBlobProperties(containerName, blobPath, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while getting blob props for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, got blob props for blobPath '%s'.\",\r\n            this._hostName, partitionId, blobPath);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  listBlobsSegmented(containerName: string,\r\n    options?: StorageBlobService.ListBlobsSegmentedRequestOptions): Promise<StorageBlobService.ListBlobsResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    if (!options) {\r\n      options = {\r\n        maxResults: 5000,\r\n        include: \"metadata\"\r\n      };\r\n    }\r\n    return new Promise<StorageBlobService.ListBlobsResult>((resolve, reject) => {\r\n      log.blobService(\"[%s] Attempting to list blobs for container '%s'.\", this._hostName,\r\n        containerName);\r\n      this._storageBlobService.listBlobsSegmented(containerName, undefined as any, options!, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] An error occurred while listing blobs for container '%s': %O.\",\r\n            this._hostName, containerName, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] Successfully, received the list of blobs for container '%s'.\",\r\n            this._hostName, containerName);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getBlobMetadata(containerName: string, blobPath: string): Promise<StorageBlobService.BlobResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.BlobResult>((resolve, reject) => {\r\n      log.blobService(\"[%s] [%s] Attempting to get blob metadata for blobPath '%s'.\", this._hostName,\r\n        partitionId, blobPath);\r\n      this._storageBlobService.getBlobMetadata(containerName, blobPath, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while getting blob metadata for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, got the blob metadata %o for blobPath '%s'.\",\r\n            this._hostName, partitionId, result, blobPath);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setBlobMetadata(containerName: string, blobPath: string, metadata: Dictionary<string>,\r\n    options?: StorageBlobService.BlobRequestOptions): Promise<StorageBlobService.BlobResult> {\r\n    if (!options) options = {};\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"metadata\", metadata, true, \"object\");\r\n    validateType(\"options\", options, true, \"object\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.BlobResult>((resolve, reject) => {\r\n      log.blobService(\"[%s] [%s] Attempting to set blob metadata %o for blobPath '%s'.\",\r\n        this._hostName, partitionId, metadata, blobPath);\r\n      this._storageBlobService.setBlobMetadata(containerName, blobPath, metadata, options!, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while setting blob metadata for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Successfully, set the blob metadata for blobPath '%s'. \" +\r\n            \"The result is: name: %s, metadata: %o, lease: %o\", this._hostName, partitionId,\r\n            blobPath, result.name, result.metadata, result.lease);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  acquireLease(containerName: string, blobPath: string,\r\n    options: StorageBlobService.AcquireLeaseRequestOptions): Promise<StorageBlobService.LeaseResult> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<StorageBlobService.LeaseResult>((resolve, reject) => {\r\n      if (!options) options = {};\r\n      log.blobService(\"[%s] [%s] Attempting to acquire lease for blobPath '%s'.\", this._hostName,\r\n        partitionId, blobPath);\r\n      this._storageBlobService.acquireLease(containerName, blobPath, options, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] [%s] An error occurred while acquiring lease for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Acquired lease '%s' for blobPath '%s.\",\r\n            this._hostName, partitionId, result.id, blobPath);\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async deleteBlobIfExists(containerName: string, blobPath: string): Promise<void> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n    validateType(\"blobPath\", blobPath, true, \"string\");\r\n    const partitionId = path.basename(blobPath);\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      log.blobService(\"[%s] Attempting to delete blob for blobPath '%s'.\", this._hostName,\r\n        partitionId, blobPath);\r\n      this._storageBlobService.deleteBlobIfExists(containerName, blobPath, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] An error occurred while deleting blob for blobPath '%s': %O.\",\r\n            this._hostName, partitionId, blobPath, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] [%s] Deleted blob '%s' ->  %s.\", this._hostName, partitionId,\r\n            partitionId, blobPath, result);\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async deleteContainerIfExists(containerName: string): Promise<void> {\r\n    validateType(\"containerName\", containerName, true, \"string\");\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      log.blobService(\"[%s] Attempting to delete container '%s'.\", this._hostName, containerName);\r\n      this._storageBlobService.deleteContainerIfExists(containerName, (error, result) => {\r\n        if (error) {\r\n          log.error(\"[%s] An error occurred while deleting container '%s': %O.\",\r\n            this._hostName, containerName, getStorageError(error));\r\n          reject(error);\r\n        } else {\r\n          log.blobService(\"[%s] Deleted container '%s' ->  %s.\", this._hostName, containerName, result);\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static create(hostName: string, connectionString: string): BlobService {\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"connectionString\", connectionString, true, \"string\");\r\n\r\n    return new BlobService(hostName, connectionString);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { BlobService, CreateContainerResult } from \"./blobService\";\r\nimport { BlobService as StorageBlobService } from \"azure-storage\";\r\nimport { Dictionary } from \"@azure/event-hubs\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class AzureBlob {\r\n  private _blobService: BlobService;\r\n  private _containerName: string;\r\n  private _blobPath: string;\r\n  private _containerAndBlobExist: boolean = false;\r\n\r\n  constructor(hostName: string, connectionString: string, containerName: string,\r\n    blob: string, blobService?: BlobService) {\r\n    this._blobPath = blob;\r\n    this._containerName = containerName;\r\n    this._blobService = blobService || BlobService.create(hostName, connectionString);\r\n  }\r\n\r\n  async ensureContainerAndBlobExist(): Promise<void> {\r\n    try {\r\n      if (!this._containerAndBlobExist) {\r\n        await this._blobService.ensureContainerAndBlobExist(this._containerName, this._blobPath);\r\n        this._containerAndBlobExist = true;\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while ensuring that the container and blob exists. ` +\r\n        `It is: \\n${err ? err.stack : JSON.stringify(err)}`;\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  ensureContainerExists(): Promise<CreateContainerResult> {\r\n    return this._blobService.ensureContainerExists(this._containerName);\r\n  }\r\n\r\n  doesContainerExist(): Promise<boolean> {\r\n    return this._blobService.doesContainerExist(this._containerName);\r\n  }\r\n\r\n  doesBlobExist(): Promise<boolean> {\r\n    return this._blobService.doesBlobExist(this._containerName, this._blobPath);\r\n  }\r\n\r\n  ensureBlobExists(text: string): Promise<void> {\r\n    return this._blobService.ensureBlobExists(this._containerName, this._blobPath, text);\r\n  }\r\n\r\n  renewLease(leaseId: string,\r\n    options: StorageBlobService.LeaseRequestOptions): Promise<StorageBlobService.LeaseResult> {\r\n    return this._blobService.renewLease(this._containerName, this._blobPath, leaseId, options);\r\n  }\r\n\r\n  releaseLease(leaseId: string,\r\n    options?: StorageBlobService.LeaseRequestOptions): Promise<StorageBlobService.LeaseResult> {\r\n    return this._blobService.releaseLease(this._containerName, this._blobPath, leaseId, options);\r\n  }\r\n\r\n  updateContent(text: string,\r\n    options?: StorageBlobService.CreateBlobRequestOptions): Promise<StorageBlobService.BlobResult> {\r\n    return this._blobService.updateContent(this._containerName, this._blobPath, text, options);\r\n  }\r\n\r\n  getContent(options?: StorageBlobService.GetBlobRequestOptions): Promise<string> {\r\n    return this._blobService.getContent(this._containerName, this._blobPath, options);\r\n  }\r\n\r\n  changeLease(currentLeaseId: string,\r\n    proposedLeaseId: string): Promise<StorageBlobService.LeaseResult> {\r\n    return this._blobService.changeLease(this._containerName,\r\n      this._blobPath, currentLeaseId, proposedLeaseId);\r\n  }\r\n\r\n  getBlobProperties(): Promise<StorageBlobService.BlobResult> {\r\n    return this._blobService.getBlobProperties(this._containerName, this._blobPath);\r\n  }\r\n\r\n  getBlobMetadata(): Promise<StorageBlobService.BlobResult> {\r\n    return this._blobService.getBlobMetadata(this._containerName, this._blobPath);\r\n  }\r\n\r\n  setBlobMetadata(metadata: Dictionary<string>,\r\n    options?: StorageBlobService.BlobRequestOptions): Promise<StorageBlobService.BlobResult> {\r\n    return this._blobService.setBlobMetadata(this._containerName, this._blobPath,\r\n      metadata, options);\r\n  }\r\n\r\n  listBlobsSegmented(options?: StorageBlobService.ListBlobsSegmentedRequestOptions):\r\n    Promise<StorageBlobService.ListBlobsResult> {\r\n    return this._blobService.listBlobsSegmented(this._containerName, options);\r\n  }\r\n\r\n  acquireLease(options: StorageBlobService.AcquireLeaseRequestOptions):\r\n    Promise<StorageBlobService.LeaseResult> {\r\n    return this._blobService.acquireLease(this._containerName, this._blobPath, options);\r\n  }\r\n\r\n  deleteBlobIfExists(): Promise<void> {\r\n    return this._blobService.deleteBlobIfExists(this._containerName, this._blobPath);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * Describes the basic information required in a lease.\r\n */\r\nexport interface BaseLeaseInfo {\r\n  /**\r\n   * @property {string} partitionId The associated partitionId for which the lease is held.\r\n   */\r\n  partitionId: string;\r\n  /**\r\n   * @property {string} owner The host owner for the partition.\r\n   */\r\n  owner: string;\r\n}\r\n\r\n/**\r\n * Describes the base lease.\r\n */\r\nexport class BaseLease implements BaseLeaseInfo {\r\n  /**\r\n   * @property {string} partitionId The associated partitionId for which the lease is held.\r\n   * @readonly\r\n   */\r\n  readonly partitionId: string;\r\n  /**\r\n   * @property {string} owner The host owner for the partition.\r\n   */\r\n  owner: string;\r\n  /**\r\n   * @property {boolean} isOwned Indicates wether the lease is owned. `true` if it is owned by\r\n   * someone; `false` otherwise.\r\n   */\r\n  isOwned: boolean = false;\r\n\r\n  /**\r\n   * @constructor\r\n   * @param info The information required to create a base lease.\r\n   */\r\n  constructor(info: BaseLeaseInfo) {\r\n    this.partitionId = info.partitionId;\r\n    this.owner = info.owner;\r\n  }\r\n\r\n  /**\r\n   * Compares possibleOwner against this.owner\r\n   * @param {string} possibleOwner The owner name to check.\r\n   * @returns {boolean} boolean - true if possibleOwner is the same as this.owner, false otherwise.\r\n   */\r\n  isOwnedBy(possibleOwner: string): boolean {\r\n    return this.owner === possibleOwner;\r\n  }\r\n\r\n  /**\r\n   * Gets the lease information.\r\n   * @returns {CompleteLeaseInfo} CompleteLeaseInfo.\r\n   */\r\n  getInfo(): BaseLeaseInfo {\r\n    const info: BaseLeaseInfo = {\r\n      partitionId: this.partitionId,\r\n      owner: this.owner,\r\n    };\r\n    return info;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as log from \"./log\";\r\nimport { BaseLease, BaseLeaseInfo } from \"./baseLease\";\r\n\r\n\r\n/**\r\n * Describes the properties of a Complete Lease.\r\n * @interface CompleteLeaseInfo\r\n */\r\nexport interface CompleteLeaseInfo extends BaseLeaseInfo {\r\n  /**\r\n   * @property {number} epoch The epoch(time) of the lease, which is a value you can use to\r\n   * determine the most recent owner of a partition between competing nodes.\r\n   */\r\n  epoch: number;\r\n}\r\n\r\n/**\r\n * Describes a Complete Lease.\r\n * @class CompleteLease.\r\n */\r\nexport class CompleteLease extends BaseLease {\r\n  /**\r\n   * @property {number} epoch The epoch(time) of the lease, which is a value you can use to\r\n   * determine the most recent owner of a partition between competing nodes.\r\n   */\r\n  epoch: number;\r\n\r\n  /**\r\n   * Creates an instance of the Lease.\r\n   * @constructor\r\n   * @param {CompleteLeaseInfo} info The Lease info.\r\n   */\r\n  constructor(info: CompleteLeaseInfo) {\r\n    super(info);\r\n    this.epoch = info.epoch != undefined ? info.epoch : -1;\r\n  }\r\n\r\n  /**\r\n   * Increments the value of epoch by 1.\r\n   * @returns {number} The incremented value of the epoch.\r\n   */\r\n  incrementEpoch(): number {\r\n    const result = ++this.epoch;\r\n    log.completeLease(\"[%s] [%s] New epoch for lease is %s.\", this.owner, this.partitionId, result);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Gets the lease information.\r\n   * @returns {CompleteLeaseInfo} CompleteLeaseInfo.\r\n   */\r\n  getInfo(): CompleteLeaseInfo {\r\n    const info = super.getInfo() as CompleteLeaseInfo;\r\n    info.epoch = this.epoch;\r\n    log.completeLease(\"[%s] [%s] Lease info is: %o\", this.owner, this.partitionId, info);\r\n    return info;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { CompleteLeaseInfo, CompleteLease } from \"./completeLease\";\r\nimport { AzureBlob } from \"./azureBlob\";\r\nimport * as log from \"./log\";\r\n\r\n/**\r\n * Describes the properties of a lease.\r\n * @interface LeaseInfo\r\n */\r\nexport interface LeaseInfo extends CompleteLeaseInfo {\r\n  /**\r\n   * @property {string} token The lease token that manages concurrency between hosts. You can use\r\n   * this token to guarantee single access to any resource needed by the EPH.\r\n   */\r\n  token: string;\r\n  /**\r\n   * @property {string} sequenceNumber The sequence number of the event to be checked in.\r\n   */\r\n  sequenceNumber: number;\r\n  /**\r\n   * @property {string} offset The offset of the event to be checked in.\r\n   */\r\n  offset?: string;\r\n}\r\n\r\n/**\r\n * Describes the properties of a lease representing an Azure Blob.\r\n * @interface AzureBlobLeaseInfo\r\n */\r\nexport interface AzureBlobLeaseInfo extends LeaseInfo {\r\n  /**\r\n   * @property {AzureBlob} blob Reference to the azure blob.\r\n   */\r\n  blob: AzureBlob;\r\n}\r\n\r\n/**\r\n * Describes the lease used with an Azure Blob for storing the checkpoint information.\r\n */\r\nexport class AzureBlobLease extends CompleteLease implements AzureBlobLeaseInfo {\r\n\r\n  // It is important to keep the offset optional. While getting the startingCheckpoint in\r\n  // PartitionContext.getInitialOffset(), we internally call leaseManager.getCheckpoint() which will\r\n  // return undefined, if the offset is undefined. At that time, if the user had provided\r\n  // initialOffset using the EPHOptions then that will be used. Thus not initializing the offset\r\n  // with default value of \"-1\" is crucial to ensure that user provided initial offset is honored\r\n  // when a new lease container is used.\r\n  /**\r\n   * @property {string} offset The offset of the event to be checked in.\r\n   */\r\n  offset?: string;\r\n  /**\r\n   * @property {string} sequenceNumber The sequence number of the event to be checked in.\r\n   */\r\n  sequenceNumber: number;\r\n  /**\r\n   * @property {string} token The lease token that manages concurrency between hosts. You can use\r\n   * this token to guarantee single access to any resource needed by the EPH.\r\n   */\r\n  token: string;\r\n  /**\r\n   * @property {AzureBlob} blob Reference to the azure blob.\r\n   */\r\n  blob: AzureBlob;\r\n\r\n  constructor(info: AzureBlobLeaseInfo) {\r\n    super(info);\r\n    this.offset = info.offset;\r\n    this.sequenceNumber = info.sequenceNumber != undefined ? info.sequenceNumber : 0;\r\n    this.token = info.token || \"\";\r\n    this.blob = info.blob;\r\n  }\r\n\r\n  /**\r\n   * Gets the lease information.\r\n   * @returns {LeaseInfo} LeaseInfo.\r\n   */\r\n  getInfo(): LeaseInfo {\r\n    const info = super.getInfo() as LeaseInfo;\r\n    info.sequenceNumber = this.sequenceNumber;\r\n    info.token = this.token;\r\n    info.offset = this.offset;\r\n    log.azurebloblease(\"[%s] [%s] Lease info is: %o\", this.owner, this.partitionId, info);\r\n    return (info as LeaseInfo);\r\n  }\r\n\r\n  /**\r\n   * Serializes the lease information.\r\n   * @returns {string} string The serialized lease info.\r\n   */\r\n  serialize(): string {\r\n    return JSON.stringify(this.getInfo());\r\n  }\r\n\r\n  /**\r\n   * Creates a Lease for the given partitionId.\r\n   * @param {string} id The partitionId for which the lease needs to be created.\r\n   * @param {AzureBlob} blob The azure blob reference\r\n   * @returns {CompleteLease} Lease.\r\n   */\r\n  static createFromPartitionId(id: string, blob: AzureBlob): AzureBlobLease {\r\n    return new AzureBlobLease({\r\n      partitionId: id,\r\n      epoch: -1,\r\n      sequenceNumber: 0,\r\n      owner: \"\",\r\n      token: \"\",\r\n      blob: blob,\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport { CheckpointInfo } from \"./checkpointInfo\";\r\nimport { CheckpointManager } from \"./checkpointManager\";\r\nimport { LeaseManager } from \"./leaseManager\";\r\nimport { BaseHostContext } from \"./hostContext\";\r\nimport { AzureBlob } from \"./azureBlob\";\r\nimport { validateType, getStorageError, EPHActionStrings } from \"./util/utils\";\r\nimport { CompleteLease } from \"./completeLease\";\r\nimport { AzureBlobLease, AzureBlobLeaseInfo, LeaseInfo } from \"./azureBlobLease\";\r\nimport { BlobService as StorageBlobService, StorageError } from \"azure-storage\";\r\nimport { LeaseState } from \"./blobService\";\r\nimport { BaseLease, BaseLeaseInfo } from \"./baseLease\";\r\nimport { EPHDiagnosticInfo } from \"./modelTypes\";\r\nimport {\r\n  maximumExecutionTimeInMsForLeaseRenewal, metadataOwnerName, leaseLost,\r\n  leaseIdMismatchWithLeaseOperation, leaseIdMismatchWithBlobOperation\r\n} from \"./util/constants\";\r\nimport * as log from \"./log\";\r\nimport path from \"path\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nenum UploadActivity {\r\n  create = \"create\",\r\n  acquire = \"acquire\",\r\n  release = \"release\",\r\n  update = \"update\"\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class AzureStorageCheckpointLeaseManager implements CheckpointManager, LeaseManager {\r\n  leaseRenewInterval: number;\r\n  leaseDuration: number;\r\n  private _context: BaseHostContext;\r\n  private _latestCheckpoint: Map<string, CheckpointInfo> = new Map<string, CheckpointInfo>();\r\n\r\n  constructor(context: BaseHostContext) {\r\n    this._context = context;\r\n    this.leaseDuration = this._context.leaseDuration;\r\n    this.leaseRenewInterval = this._context.leaseRenewInterval;\r\n  }\r\n\r\n  getAzureBlob(partitionId: string): AzureBlob {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    let result = this._context.blobReferenceByPartition[partitionId];\r\n    if (!result) {\r\n      const blobPath = `${this._context.composedBlobPrefix}${partitionId}`;\r\n      result = new AzureBlob(this._context.hostName, this._context.storageConnectionString!,\r\n        this._context.storageContainerName!, blobPath, this._context.blobService);\r\n      this._context.blobReferenceByPartition[partitionId] = result;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async downloadLease(partitionId: string, blob: AzureBlob): Promise<AzureBlobLease> {\r\n    try {\r\n      const text: string = await blob.getContent();\r\n      const jsonLease: LeaseInfo = JSON.parse(text);\r\n      const blobLeaseInfo: AzureBlobLeaseInfo = {\r\n        ...jsonLease,\r\n        blob: blob\r\n      };\r\n      return new AzureBlobLease(blobLeaseInfo);\r\n    } catch (err) {\r\n      const msg = `An error occurred while downloading the lease for blobPath ` +\r\n        `\"${this._context.composedBlobPrefix}${partitionId}\". It is: \\n` +\r\n        `${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(this._context.withHost(msg));\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  leaseStoreExists(): Promise<boolean> {\r\n    return this._context.blobService!.doesContainerExist(this._context.storageContainerName!);\r\n  }\r\n\r\n  async createLeaseStoreIfNotExists(): Promise<void> {\r\n    await this._context.blobService!.ensureContainerExists(this._context.storageContainerName!);\r\n    return;\r\n  }\r\n\r\n  async deleteLeaseStore(): Promise<void> {\r\n    const blobService = this._context.blobService;\r\n    const storageContainerName = this._context.storageContainerName!;\r\n    try {\r\n      if (blobService) {\r\n        const listResult = await blobService.listBlobsSegmented(storageContainerName);\r\n        const deleteBlobs: Promise<void>[] = [];\r\n        for (const blob of listResult.entries) {\r\n          deleteBlobs.push(blobService.deleteBlobIfExists(storageContainerName, blob.name));\r\n        }\r\n        await Promise.all(deleteBlobs);\r\n        await blobService.deleteContainerIfExists(storageContainerName);\r\n      } else {\r\n        throw new Error(\"'blobService' is not defined in the 'hostContext', hence cannot \" +\r\n          \"list all the blobs.\");\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while deleting the lease store '${storageContainerName}': %O` +\r\n        `${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(this._context.withHost(msg));\r\n      const info: EPHDiagnosticInfo = {\r\n        error: new Error(msg),\r\n        hostName: this._context.hostName,\r\n        partitionId: \"N/A\",\r\n        action: EPHActionStrings.deletingLeaseStore\r\n      };\r\n      this._context.onEphError(info);\r\n    }\r\n  }\r\n\r\n  async getLease(partitionId: string): Promise<AzureBlobLease | undefined> {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    let result: AzureBlobLease | undefined;\r\n    const blob = this.getAzureBlob(partitionId);\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    log.checkpointLeaseMgr(withHostAndPartition(partitionId, \"Getting lease.\"));\r\n    try {\r\n      if (await blob.doesBlobExist()) {\r\n        result = await this.downloadLease(partitionId, blob);\r\n      }\r\n    } catch (err) {\r\n      const msg = `An error occurred while getting lease for partitionId '${partitionId}': \\n` +\r\n        `${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(withHostAndPartition(partitionId, msg));\r\n      throw new Error(msg);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getAllLeases(): Promise<BaseLease[]> {\r\n    const result: BaseLease[] = [];\r\n    const withHost = this._context.withHost;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    try {\r\n      const leaseBlobs: StorageBlobService.BlobResult[] = await this._listBlobs();\r\n      for (const lbi of leaseBlobs) {\r\n        const name = lbi.name;\r\n        const partitionId = path.basename(name);\r\n        const leaseInfo: BaseLeaseInfo = {\r\n          partitionId: partitionId,\r\n          owner: lbi.metadata![metadataOwnerName]\r\n        };\r\n        const lease = new BaseLease(leaseInfo);\r\n        lease.isOwned = (lbi.lease && lbi.lease.state === LeaseState.leased) || false;\r\n        result.push(lease);\r\n        log.checkpointLeaseMgr(withHostAndPartition(partitionId, \"BlobResult item from the list \" +\r\n          \"of blobs is: name: %s, lease: %o, metadata: %o.\"), lbi.name, lbi.lease, lbi.metadata);\r\n      }\r\n    } catch (err) {\r\n      const info: EPHDiagnosticInfo = {\r\n        error: err,\r\n        action: EPHActionStrings.gettingAllLeases,\r\n        hostName: this._context.hostName,\r\n        partitionId: \"N/A\"\r\n      };\r\n      this._context.onEphError(info);\r\n    }\r\n    log.checkpointLeaseMgr(withHost(\"Number of leases: %d\"), result.length);\r\n    return result;\r\n  }\r\n\r\n  async createAllLeasesIfNotExists(partitionIds: string[]): Promise<void> {\r\n    try {\r\n      const withHost = this._context.withHost;\r\n      const leaseBlobs = await this._listBlobs();\r\n      if (leaseBlobs.length === partitionIds.length) {\r\n        log.checkpointLeaseMgr(withHost(\"Number of blobs %d === Number of partitionIds %d. \" +\r\n          \"Hence no need to create leases.\"), leaseBlobs.length, partitionIds.length);\r\n        return;\r\n      } else {\r\n        const createPromises: Promise<CompleteLease>[] = [];\r\n        for (const id of partitionIds) {\r\n          const createPromise: Promise<CompleteLease> = this.createLeaseIfNotExists(id);\r\n          createPromises.push(createPromise);\r\n        }\r\n        await Promise.all(createPromises);\r\n      }\r\n    } catch (err) {\r\n      const info: EPHDiagnosticInfo = {\r\n        error: err,\r\n        action: EPHActionStrings.creatingAllLeases,\r\n        hostName: this._context.hostName,\r\n        partitionId: \"N/A\"\r\n      };\r\n      this._context.onEphError(info);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async createLeaseIfNotExists(partitionId: string): Promise<CompleteLease> {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    log.checkpointLeaseMgr(withHostAndPartition(partitionId, \"createLeaseIfNotExists.\"));\r\n    let returnLease: AzureBlobLease;\r\n    try {\r\n      const blob = this.getAzureBlob(partitionId);\r\n      returnLease = AzureBlobLease.createFromPartitionId(partitionId, blob);\r\n      await this._uploadLease(returnLease, UploadActivity.create);\r\n    } catch (error) {\r\n      const statusCode = (error as StorageError).statusCode;\r\n      const code = (error as StorageError).code;\r\n      // https://docs.microsoft.com/en-us/rest/api/storageservices/blob-service-error-codes\r\n      // LeaseIdMissing || BlobAlreadyExists\r\n      if ((statusCode === 412 && code && code.toLowerCase() === \"leaseidmissing\") ||\r\n        (statusCode === 409 && code && code.toLowerCase() === \"blobalreadyexists\")) {\r\n        returnLease = <AzureBlobLease>await this.getLease(partitionId);\r\n      } else {\r\n        log.error(withHostAndPartition(partitionId, \"An error occurred while creating lease if \" +\r\n          \"it does not exist: %O.\"), error);\r\n        throw error;\r\n      }\r\n    }\r\n    return returnLease;\r\n  }\r\n\r\n  async deleteLease(lease: AzureBlobLease): Promise<void> {\r\n    try {\r\n      return await (lease).blob.deleteBlobIfExists();\r\n    } catch (err) {\r\n      const msg = `An error occurred while deleting the lease for blobPath ` +\r\n        `\"${this._context.composedBlobPrefix}${lease.partitionId}\". It is: \\n` +\r\n        `${err ? err.stack : JSON.stringify(err)}`;\r\n      log.error(this._context.withHostAndPartition(lease, msg));\r\n      throw new Error(msg);\r\n    }\r\n  }\r\n\r\n  async acquireLease(lease: AzureBlobLease): Promise<boolean> {\r\n    let result: boolean = true;\r\n    const newLeaseId: string = uuid();\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    try {\r\n      // TODO: We are initializing newToken to empty string.\r\n      let newToken: string = \"\";\r\n      const blobResult = await lease.blob.getBlobProperties();\r\n      if (blobResult.lease && blobResult.lease.state && blobResult.lease.state === \"leased\") {\r\n        if (!lease.token) {\r\n          // We reach here in a race condition: when this instance of EventProcessorHost scanned the\r\n          // lease blobs, this partition was unowned (token is empty) but between then and now, another\r\n          // instance of EPH has established a lease (getLeaseState() is LEASED). We normally enforce\r\n          // that we only steal the lease if it is still owned by the instance which owned it when we\r\n          // scanned, but we can't do that when we don't know who owns it. The safest thing to do is just\r\n          // fail the acquisition. If that means that one EPH instance gets more partitions than it should,\r\n          // rebalancing will take care of that quickly enough.\r\n          return false;\r\n        }\r\n        log.checkpointLeaseMgr(withHostAndPartition(lease, \"Need to change lease '%s' -> '%s' \" +\r\n          \"for partitionId '%s'.\"), lease.token, newLeaseId, lease.partitionId);\r\n        const changeLeaseResult = await lease.blob.changeLease(lease.token, newLeaseId);\r\n        newToken = changeLeaseResult.id;\r\n      } else {\r\n        try {\r\n          const options: StorageBlobService.AcquireLeaseRequestOptions = {\r\n            leaseDuration: this.leaseDuration,\r\n            proposedLeaseId: newLeaseId\r\n          };\r\n          const acquireResult = await lease.blob.acquireLease(options);\r\n          newToken = acquireResult.id;\r\n        } catch (err) {\r\n          const statusCode = err && (err as StorageError).statusCode;\r\n          const code = err && (err as StorageError).code;\r\n          if (statusCode === 409 && code && code.toLowerCase() === \"leasealreadypresent\") {\r\n            // Either some other host grabbed the lease or checkpoint call renewed it.\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      lease.token = newToken;\r\n      lease.owner = this._context.hostName;\r\n      // Increment epoch each time lease is acquired or stolen by a new host\r\n      lease.incrementEpoch();\r\n      await this._uploadLease(lease, UploadActivity.acquire);\r\n    } catch (err) {\r\n      if (this._wasLeaseLost(lease.partitionId, err)) {\r\n        result = false;\r\n      } else {\r\n        throw err;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async renewLease(lease: AzureBlobLease): Promise<boolean> {\r\n    let result: boolean = false;\r\n    try {\r\n      const options: StorageBlobService.LeaseRequestOptions = {\r\n        timeoutIntervalInMs: this.leaseRenewInterval * 1000,\r\n        maximumExecutionTimeInMs: maximumExecutionTimeInMsForLeaseRenewal\r\n      };\r\n      await lease.blob.renewLease(lease.token, options);\r\n      result = true;\r\n    } catch (err) {\r\n      if (!this._wasLeaseLost(lease.partitionId, err)) {\r\n        throw err;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async releaseLease(lease: AzureBlobLease): Promise<void> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    try {\r\n      const leaseId: string = lease.token;\r\n      log.checkpointLeaseMgr(withHostAndPartition(lease, \"Trying to release the lease.\"));\r\n      const releasedCopy = new AzureBlobLease({ ...lease.getInfo(), blob: lease.blob });\r\n      releasedCopy.owner = \"\";\r\n      releasedCopy.token = \"\";\r\n      await this._uploadLease(lease, UploadActivity.release);\r\n      await lease.blob.releaseLease(leaseId);\r\n    } catch (err) {\r\n      if (!this._wasLeaseLost(lease.partitionId, err)) {\r\n        throw err;\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  async updateLease(lease: AzureBlobLease): Promise<boolean> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    if (lease == undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (!lease.token) {\r\n      return false;\r\n    }\r\n\r\n    log.checkpointLeaseMgr(withHostAndPartition(lease, \"Let us renew the lease to make sure the \" +\r\n      \"update with offset '%s' and sequence number %d will go through.\"), lease.offset,\r\n      lease.sequenceNumber);\r\n    let result = await this.renewLease(lease);\r\n    if (result) {\r\n      try {\r\n        await this._uploadLease(lease, UploadActivity.update);\r\n      } catch (err) {\r\n        if (this._wasLeaseLost(lease.partitionId, err)) {\r\n          result = false;\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n    // else could not renew lease due to lease loss. Result is already false, so pass it unchanged\r\n    return result;\r\n  }\r\n\r\n  checkpointStoreExists(): Promise<boolean> {\r\n    log.checkpointLeaseMgr(this._context.withHost(\"Checking whether the checkpoint store exists.\"));\r\n    return this.leaseStoreExists();\r\n  }\r\n\r\n  async deleteCheckpointStore(): Promise<void> {\r\n    return this.deleteLeaseStore();\r\n  }\r\n\r\n  async createCheckpointStoreIfNotExists(): Promise<void> {\r\n    // This is a no-op since this method will be called only creating the lease store.\r\n    // The lease store and the checkpoint store are the same thing.\r\n    return;\r\n  }\r\n\r\n  async createAllCheckpointsIfNotExists(partitionIds: string[]): Promise<void> {\r\n    validateType(\"partitionIds\", partitionIds, true, \"Array\");\r\n    // Because we control the caller, we know that this method will only be called after\r\n    // createAllLeasesIfNotExists. In this implementation checkpoints are in the same\r\n    // blobs as leases, so the blobs will already exist if execution reaches here.\r\n    return;\r\n  }\r\n\r\n  async getCheckpoint(partitionId: string): Promise<CheckpointInfo | undefined> {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    let result: CheckpointInfo | undefined;\r\n    log.checkpointLeaseMgr(withHostAndPartition(partitionId, \"Getting checkpoint.\"));\r\n    const lease: AzureBlobLease | undefined = await this.getLease(partitionId);\r\n    if (lease != undefined && lease.offset) {\r\n      result = CheckpointInfo.createFromLease(lease.getInfo());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async updateCheckpoint(lease: AzureBlobLease, checkpoint: CheckpointInfo): Promise<void> {\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    log.checkpointLeaseMgr(withHostAndPartition(checkpoint, \"Checkpoint at offset '%s' and seqno %d.\"),\r\n      checkpoint.offset, checkpoint.sequenceNumber);\r\n    lease.offset = checkpoint.offset;\r\n    lease.sequenceNumber = checkpoint.sequenceNumber;\r\n    try {\r\n      if (await this.updateLease(lease)) {\r\n        return;\r\n      } else {\r\n        const msg = `Lease lost while updating the checkpoint for partitionId ` +\r\n          `'${checkpoint.partitionId}'.Hence could not update it.`;\r\n        log.error(withHostAndPartition(lease, msg));\r\n        throw new Error(msg);\r\n      }\r\n    } catch (err) {\r\n      const info: EPHDiagnosticInfo = {\r\n        action: EPHActionStrings.updatingCheckpoint,\r\n        error: err,\r\n        hostName: this._context.hostName,\r\n        partitionId: checkpoint.partitionId\r\n      };\r\n      this._context.onEphError(info);\r\n    }\r\n  }\r\n\r\n  async deleteCheckpoint(partitionId: string): Promise<void> {\r\n    validateType(\"partitionId\", partitionId, true, \"string\");\r\n    // This is a no-op to avoid deleting leases accidentally.\r\n  }\r\n\r\n  private async _listBlobs(): Promise<StorageBlobService.BlobResult[]> {\r\n    const blobService = this._context.blobService;\r\n    const withHost = this._context.withHost;\r\n    if (blobService) {\r\n      const listResult = await blobService.listBlobsSegmented(this._context.storageContainerName!);\r\n      log.checkpointLeaseMgr(withHost(\"Number of blobs: %d\"), listResult.entries.length);\r\n      return listResult.entries;\r\n    } else {\r\n      throw new Error(\"'blobService' is not defined in the 'hostContext', hence cannot \" +\r\n        \"list all the blobs.\");\r\n    }\r\n  }\r\n\r\n  private async _uploadLease(lease: AzureBlobLease, activity: UploadActivity,\r\n    options?: StorageBlobService.CreateBlobRequestOptions): Promise<void> {\r\n    const partitionId = lease.partitionId;\r\n    const blob = lease.blob;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    if (activity !== UploadActivity.create) {\r\n      // It is possible for AzureBlobLease objects in memory to have stale offset/sequence number\r\n      // fields if a checkpoint was written but PartitionManager hasn't done its ten-second sweep\r\n      // which downloads new copies of all the leases. This can happen because we're trying to\r\n      // maintain the fiction that checkpoints and leases are separate -- which they can be in\r\n      // other implementations -- even though they are completely intertwined in this\r\n      // implementation. To prevent writing stale checkpoint data to the store, merge the\r\n      // checkpoint data from the most recently written checkpoint into this write, if needed.\r\n      if (this._latestCheckpoint.has(partitionId)) {\r\n        const cached: CheckpointInfo = this._latestCheckpoint.get(partitionId)!;\r\n        if (cached.sequenceNumber > lease.sequenceNumber || lease.offset == undefined) {\r\n          lease.offset = cached.offset,\r\n            lease.sequenceNumber = cached.sequenceNumber;\r\n          log.checkpointLeaseMgr(withHostAndPartition(lease, \"Updating stale offset/seqno with \" +\r\n            \"new values %s/%d while uploading lease.\"), lease.offset, lease.sequenceNumber);\r\n        } else if (lease.offset != undefined) {\r\n          this._latestCheckpoint.set(partitionId, CheckpointInfo.createFromLease(lease.getInfo()));\r\n        }\r\n      }\r\n    }\r\n    const jsonToUpload = lease.serialize();\r\n    if (!options) {\r\n      options = {\r\n        leaseId: lease.token,\r\n      };\r\n    }\r\n    if (!options.metadata) options.metadata = {};\r\n    // - For \"acquire\" and \"update\" activities, the metadata must be set, since that is the time\r\n    // when the host actually owns the lease. If metadata is not set for update activity\r\n    // (i.e. while checkpointing), then the metadata is wiped off (over-written).\r\n    // This causes problems for the partition scanner while trying to determine the lease owner.\r\n    // - For \"release\" activity the metadata needs to be deleted/unset, since the intention is to\r\n    // not own the lease anymore (due to lease being lost or the receiver shutting down). Hence,\r\n    // setting the metadata as an empty object.\r\n    // - For \"create\" activity, the intention is to create a lease if it does not exist, but not own\r\n    // it. The lease state will be available and the status will be unlocked. Hence setting the\r\n    // metadata as an empty object.\r\n    if (activity === UploadActivity.acquire || activity === UploadActivity.update) {\r\n      options.metadata[metadataOwnerName] = lease.owner || this._context.hostName;\r\n    }\r\n    log.checkpointLeaseMgr(withHostAndPartition(lease, \"Trying to upload raw JSON for activity \" +\r\n      \"'%s': %s, with options: %o\"), activity, jsonToUpload, options);\r\n    await blob.updateContent(jsonToUpload, options);\r\n  }\r\n\r\n  private _wasLeaseLost(partitionId: string, err: StorageError): boolean {\r\n    let result: boolean = false;\r\n    const statusCode = err.statusCode;\r\n    const code = err.code;\r\n    const withHostAndPartition = this._context.withHostAndPartition;\r\n    // conflict OR precondition failed.\r\n    if (statusCode && statusCode === 409 || statusCode === 412) {\r\n      if (!code || (code &&\r\n        (code.toLowerCase() === leaseLost ||\r\n          code.toLowerCase() === leaseIdMismatchWithLeaseOperation ||\r\n          code.toLowerCase() === leaseIdMismatchWithBlobOperation))) {\r\n        result = true;\r\n      }\r\n    }\r\n    log.error(withHostAndPartition(partitionId, \"Was lease lost -> %s, err: %O.\"),\r\n      result, getStorageError(err));\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport {\r\n  EventHubClient, EventPosition, TokenProvider, DefaultDataTransformer, Dictionary,\r\n  EventHubRuntimeInformation, EventHubPartitionRuntimeInformation, EventHubConnectionConfig\r\n} from \"@azure/event-hubs\";\r\nimport AsyncLock from \"async-lock\";\r\nimport { LeaseManager } from \"./leaseManager\";\r\nimport { PumpManager } from \"./pumpManager\";\r\nimport { PartitionManager } from \"./partitionManager\";\r\nimport { PartitionScanner } from \"./partitionScanner\";\r\nimport { BlobService } from \"./blobService\";\r\nimport { AzureBlob } from \"./azureBlob\";\r\nimport { AzureStorageCheckpointLeaseManager } from \"./azureStorageCheckpointLeaseManager\";\r\nimport { CheckpointManager } from \"./checkpointManager\";\r\nimport { validateType } from \"./util/utils\";\r\nimport { PartitionContext } from \"./partitionContext\";\r\nimport { BaseLease } from \"./baseLease\";\r\nimport { PartitionPump } from \"./partitionPump\";\r\nimport {\r\n  EventProcessorHostOptions, OnEphError, OnReceivedMessage, OnReceivedError\r\n} from \"./modelTypes\";\r\nimport {\r\n  maxLeaseDurationInSeconds, minLeaseDurationInSeconds, defaultLeaseRenewIntervalInSeconds,\r\n  defaultLeaseDurationInSeconds, defaultStartupScanDelayInSeconds, packageInfo, userAgentPrefix,\r\n  defaultFastScanIntervalInSeconds, defaultSlowScanIntervalInSeconds, defaultConsumerGroup\r\n} from \"./util/constants\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface BaseHostContext {\r\n  hostName: string;\r\n  checkpointLock: AsyncLock;\r\n  checkpointLockId: string;\r\n  consumerGroup: string;\r\n  eventHubPath: string;\r\n  storageContainerName?: string;\r\n  eventHubConnectionString: string;\r\n  connectionConfig: EventHubConnectionConfig;\r\n  onEphError: OnEphError;\r\n  leaseRenewInterval: number;\r\n  leaseDuration: number;\r\n  partitionIds: string[];\r\n  blobReferenceByPartition: Dictionary<AzureBlob>;\r\n  storageConnectionString?: string;\r\n  tokenProvider?: TokenProvider;\r\n  initialOffset?: EventPosition;\r\n  storageBlobPrefix?: string;\r\n  blobService?: BlobService;\r\n  composedBlobPrefix: string;\r\n  onMessage?: OnReceivedMessage;\r\n  onError?: OnReceivedError;\r\n  startupScanDelay?: number;\r\n  fastScanInterval?: number;\r\n  slowScanInterval?: number;\r\n  pumps: Map<string, PartitionPump>;\r\n  userAgent: string;\r\n  withHost(msg: string): string;\r\n  withHostAndPartition(partition: string | { partitionId: string }, msg: string): string;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface HostContextWithCheckpointLeaseManager extends BaseHostContext {\r\n  leaseManager: LeaseManager;\r\n  checkpointManager: CheckpointManager;\r\n  getEventHubClient(): EventHubClient;\r\n  getHubRuntimeInformation(): Promise<EventHubRuntimeInformation>;\r\n  getPartitionInformation(partitionId: string | number): Promise<EventHubPartitionRuntimeInformation>;\r\n  getPartitionIds(): Promise<string[]>;\r\n}\r\n\r\nexport interface HostContextWithPumpManager extends HostContextWithCheckpointLeaseManager {\r\n  pumpManager: PumpManager;\r\n}\r\n\r\nexport interface HostContext extends HostContextWithPumpManager {\r\n  partitionManager: PartitionManager;\r\n  partitionScanner: PartitionScanner;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport namespace HostContext {\r\n\r\n  function _validateLeaseDurationAndRenewInterval(duration: number, interval: number): void {\r\n    validateType(\"leaseDuration\", duration, true, \"number\");\r\n    validateType(\"leaseRenewInterval\", interval, true, \"number\");\r\n\r\n    if (duration <= interval) {\r\n      throw new Error(`Lease duration ${duration} needs to be greater than lease ` +\r\n        `renew interval ${interval}.`);\r\n    }\r\n\r\n    if (duration > maxLeaseDurationInSeconds || duration < minLeaseDurationInSeconds) {\r\n      throw new Error(`Lease duration needs to be between ${minLeaseDurationInSeconds} ` +\r\n        `seconds and ${maxLeaseDurationInSeconds} seconds. The given value is: ${duration} seconds.`);\r\n    }\r\n  }\r\n\r\n  function _validatestorageContainerName(name: string): void {\r\n    if (!name || name.match(/^[a-z0-9](([a-z0-9\\-[^\\-])){1,61}[a-z0-9]$/ig) === null) {\r\n      throw new Error(`Azure Storage lease container name \"${name}\" is invalid. Please check ` +\r\n        `naming conventions at https://msdn.microsoft.com/en-us/library/azure/dd135715.aspx`);\r\n    }\r\n  }\r\n\r\n  function _eitherStorageConnectionStringOrCheckpointLeaseManager(options: EventProcessorHostOptions): void {\r\n    validateType(\"options\", options, true, \"object\");\r\n    const checkpointManager = options.checkpointManager;\r\n    const leaseManager = options.leaseManager;\r\n    const storageConnectionString = options.storageConnectionString;\r\n    if (storageConnectionString) {\r\n      if (checkpointManager || leaseManager) {\r\n        throw new Error(\"Either provide ('checkpointManager' and 'leaseManager') or \" +\r\n          \"provide 'storageConnectionString'.\");\r\n      }\r\n    } else if (!(checkpointManager && leaseManager)) {\r\n      throw new Error(\"Either provide ('checkpointManager' and 'leaseManager') or \" +\r\n        \"provide 'storageConnectionString'.\");\r\n    }\r\n  }\r\n\r\n  function _eitherLeaseManagerOrleaseDurationAndRenewal(options: EventProcessorHostOptions): void {\r\n    validateType(\"options\", options, true, \"object\");\r\n    const leaseManager = options.leaseManager;\r\n    const leaseDuration = options.leaseDuration;\r\n    const leaseRenewInterval = options.leaseRenewInterval;\r\n    if (leaseManager) {\r\n      if (leaseDuration || leaseRenewInterval) {\r\n        throw new Error(\"Either provide ('leaseDuration' and 'leaseRenewInterval') or \" +\r\n          \"provide 'leaseManager'.\");\r\n      }\r\n    } else if (!(leaseDuration && leaseRenewInterval)) {\r\n      throw new Error(\"Either provide ('leaseDuration' and 'leaseRenewInterval') or \" +\r\n        \"provide 'leaseManager'.\");\r\n    }\r\n  }\r\n\r\n  function _createBase(hostName: string, options: EventProcessorHostOptions): BaseHostContext {\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n\r\n    const onEphErrorFunc: OnEphError = () => {\r\n      // do nothing\r\n    };\r\n    const config = EventHubConnectionConfig.create(options.eventHubConnectionString!, options.eventHubPath);\r\n\r\n    // set defaults\r\n    if (!options.consumerGroup) options.consumerGroup = defaultConsumerGroup;\r\n    if (!options.eventHubPath) options.eventHubPath = config.entityPath;\r\n    if (!options.leaseRenewInterval) options.leaseRenewInterval = defaultLeaseRenewIntervalInSeconds;\r\n    if (!options.leaseDuration) options.leaseDuration = defaultLeaseDurationInSeconds;\r\n    if (!options.onEphError) options.onEphError = onEphErrorFunc;\r\n    if (!options.dataTransformer) options.dataTransformer = new DefaultDataTransformer();\r\n    if (!options.startupScanDelay) options.startupScanDelay = defaultStartupScanDelayInSeconds;\r\n    if (!options.fastScanInterval) options.fastScanInterval = defaultFastScanIntervalInSeconds;\r\n    if (!options.slowScanInterval) options.slowScanInterval = defaultSlowScanIntervalInSeconds;\r\n\r\n    validateType(\"options\", options, true, \"object\");\r\n    validateType(\"options.eventHubPath\", options.eventHubPath, true, \"string\");\r\n    validateType(\"options.eventHubConnectionString\", options.eventHubConnectionString, true, \"string\");\r\n    validateType(\"options.storageConnectionString\", options.storageConnectionString, false, \"string\");\r\n    validateType(\"options.initialOffset\", options.initialOffset, false, \"object\");\r\n    validateType(\"options.consumerGroup\", options.consumerGroup, false, \"string\");\r\n    validateType(\"options.storageContainerName\", options.storageContainerName, false, \"string\");\r\n    validateType(\"options.storageBlobPrefix\", options.storageBlobPrefix, false, \"string\");\r\n    validateType(\"options.onEphError\", options.onEphError, false, \"function\");\r\n    validateType(\"options.leaseRenewInterval\", options.leaseRenewInterval, false, \"number\");\r\n    validateType(\"options.leaseDuration\", options.leaseDuration, false, \"number\");\r\n    _eitherStorageConnectionStringOrCheckpointLeaseManager(options);\r\n    _eitherLeaseManagerOrleaseDurationAndRenewal(options);\r\n\r\n\r\n    const context: BaseHostContext = {\r\n      hostName: hostName,\r\n      checkpointLock: new AsyncLock({ maxPending: 100000 }),\r\n      checkpointLockId: `checkpoint-${uuid()}`,\r\n      eventHubConnectionString: options.eventHubConnectionString!,\r\n      connectionConfig: config,\r\n      eventHubPath: options.eventHubPath!,\r\n      tokenProvider: options.tokenProvider,\r\n      blobReferenceByPartition: {},\r\n      partitionIds: [],\r\n      pumps: new Map<string, PartitionPump>(),\r\n      consumerGroup: options.consumerGroup,\r\n      storageContainerName: options.storageContainerName,\r\n      leaseRenewInterval: options.leaseRenewInterval,\r\n      leaseDuration: options.leaseDuration,\r\n      initialOffset: options.initialOffset,\r\n      storageBlobPrefix: options.storageBlobPrefix,\r\n      composedBlobPrefix: options.storageBlobPrefix\r\n        ? `${options.storageBlobPrefix.trim()}${options.consumerGroup}/`\r\n        : `${options.consumerGroup}/`,\r\n      onEphError: options.onEphError,\r\n      startupScanDelay: options.startupScanDelay,\r\n      fastScanInterval: options.fastScanInterval,\r\n      slowScanInterval: options.slowScanInterval,\r\n      userAgent: getUserAgent(options),\r\n      withHost: (msg: string) => {\r\n        return `[${hostName}] ${msg}`;\r\n      },\r\n      withHostAndPartition: (partition: string | PartitionContext | BaseLease, msg: string) => {\r\n        let id: string = \"N/A\";\r\n        if (typeof partition === \"string\") {\r\n          id = partition;\r\n        } else if (typeof partition === \"object\") {\r\n          id = partition.partitionId;\r\n        }\r\n        return `[${hostName}] [${id}] ${msg}`;\r\n      }\r\n    };\r\n\r\n    if (options.storageConnectionString) {\r\n      context.storageConnectionString = options.storageConnectionString;\r\n      context.blobService = BlobService.create(hostName, options.storageConnectionString);\r\n    }\r\n\r\n    _validateLeaseDurationAndRenewInterval(context.leaseDuration, context.leaseRenewInterval);\r\n    if (context.storageContainerName) _validatestorageContainerName(context.storageContainerName);\r\n    return context;\r\n  }\r\n\r\n  function _createWithCheckpointLeaseManager(hostName: string,\r\n    options: EventProcessorHostOptions): HostContextWithCheckpointLeaseManager {\r\n    const ctxt = _createBase(hostName, options) as HostContextWithCheckpointLeaseManager;\r\n    const checkpointLeaseManager = new AzureStorageCheckpointLeaseManager(ctxt);\r\n    ctxt.leaseManager = options.leaseManager || checkpointLeaseManager;\r\n    ctxt.checkpointManager = options.checkpointManager || checkpointLeaseManager;\r\n    ctxt.getEventHubClient = () => {\r\n      if (ctxt.tokenProvider) {\r\n        return EventHubClient.createFromTokenProvider(ctxt.connectionConfig.host,\r\n          ctxt.eventHubPath, ctxt.tokenProvider, { userAgent: ctxt.userAgent });\r\n      } else {\r\n        return EventHubClient.createFromConnectionString(\r\n          ctxt.eventHubConnectionString, ctxt.eventHubPath, { userAgent: ctxt.userAgent });\r\n      }\r\n    };\r\n    ctxt.getHubRuntimeInformation = async () => {\r\n      const client = ctxt.getEventHubClient();\r\n      try {\r\n        return await client.getHubRuntimeInformation();\r\n      } finally {\r\n        client.close().catch(/* do nothing */);\r\n      }\r\n    };\r\n    ctxt.getPartitionInformation = async (id: string | number) => {\r\n      const client = ctxt.getEventHubClient();\r\n      try {\r\n        return await client.getPartitionInformation(id);\r\n      } finally {\r\n        client.close().catch(/* do nothing */);\r\n      }\r\n    };\r\n    ctxt.getPartitionIds = async () => {\r\n      if (!ctxt.partitionIds.length) {\r\n        const client = ctxt.getEventHubClient();\r\n        try {\r\n          ctxt.partitionIds = await client.getPartitionIds();\r\n        } finally {\r\n          client.close().catch(/* do nothing */);\r\n        }\r\n      }\r\n      return ctxt.partitionIds;\r\n    };\r\n    return ctxt;\r\n  }\r\n\r\n  function _createWithPumpManager(hostName: string, options: EventProcessorHostOptions): HostContextWithPumpManager {\r\n    const context = _createWithCheckpointLeaseManager(hostName, options) as HostContextWithPumpManager;\r\n    context.pumpManager = new PumpManager(context);\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  export function getUserAgent(options: EventProcessorHostOptions): string {\r\n    const userAgentForEPH = `${userAgentPrefix}=${packageInfo.version}`;\r\n    const finalUserAgent = options.userAgent ? `${userAgentForEPH},${options.userAgent}` : userAgentForEPH;\r\n    return finalUserAgent;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  export function create(hostName: string, options: EventProcessorHostOptions): HostContext {\r\n    const context = _createWithPumpManager(hostName, options);\r\n    const hostContext = context as HostContext;\r\n    hostContext.partitionManager = new PartitionManager(context);\r\n    hostContext.partitionScanner = new PartitionScanner(context);\r\n    return hostContext;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport uuid from \"uuid/v4\";\r\nimport {\r\n  TokenProvider, EventHubRuntimeInformation, EventHubPartitionRuntimeInformation,\r\n  AadTokenProvider, EventHubClient\r\n} from \"@azure/event-hubs\";\r\nimport {\r\n  ApplicationTokenCredentials, UserTokenCredentials,\r\n  DeviceTokenCredentials, MSITokenCredentials\r\n} from \"ms-rest-azure\";\r\nimport * as log from \"./log\";\r\nimport { LeaseManager } from \"./leaseManager\";\r\nimport { HostContext } from \"./hostContext\";\r\nimport { CheckpointManager } from \"./checkpointManager\";\r\nimport { validateType } from \"./util/utils\";\r\nimport {\r\n  FromConnectionStringOptions, EventProcessorHostOptions, FromTokenProviderOptions,\r\n  OnReceivedMessage, OnReceivedError, FromIotHubConnectionStringOptions\r\n} from \"./modelTypes\";\r\n\r\n\r\n\r\n/**\r\n * Describes the Event Processor Host to process events from an EventHub.\r\n * @class EventProcessorHost\r\n */\r\nexport class EventProcessorHost {\r\n  /**\r\n   * @property {ProcessorContextWithLeaseManager} _context The processor context.\r\n   * @private\r\n   */\r\n  private _context: HostContext;\r\n  /**\r\n   * Creates a new host to process events from an Event Hub.\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} storageConnectionString Connection string to Azure Storage account used for\r\n   * leases and checkpointing. Example DefaultEndpointsProtocol=https;AccountName=<account-name>;\r\n   * AccountKey=<account-key>;EndpointSuffix=core.windows.net\r\n   * @param {EventHubClient} eventHubClient The EventHub client\r\n   * @param {EventProcessorOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   */\r\n  constructor(hostName: string, options?: EventProcessorHostOptions) {\r\n    if (!options) options = {};\r\n    this._context = HostContext.create(hostName, options);\r\n  }\r\n\r\n  /**\r\n   * Provides the host name for the Event processor host.\r\n   */\r\n  get hostName(): string {\r\n    return this._context.hostName;\r\n  }\r\n\r\n  /**\r\n   * Provides the consumer group name for the Event processor host.\r\n   */\r\n  get consumerGroup(): string {\r\n    return this._context.consumerGroup;\r\n  }\r\n\r\n  /**\r\n   * Provides the eventhub runtime information.\r\n   * @returns {Promise<EventHubRuntimeInformation>}\r\n   */\r\n  getHubRuntimeInformation(): Promise<EventHubRuntimeInformation> {\r\n    return this._context.getHubRuntimeInformation();\r\n  }\r\n\r\n  /**\r\n   * Provides information about the specified partition.\r\n   * @param {(string|number)} partitionId Partition ID for which partition information is required.\r\n   *\r\n   * @returns {EventHubPartitionRuntimeInformation} EventHubPartitionRuntimeInformation\r\n   */\r\n  getPartitionInformation(partitionId: string | number): Promise<EventHubPartitionRuntimeInformation> {\r\n    return this._context.getPartitionInformation(partitionId);\r\n  }\r\n\r\n  /**\r\n   * Provides an array of partitionIds.\r\n   * @returns {Promise<string[]>}\r\n   */\r\n  getPartitionIds(): Promise<string[]> {\r\n    return this._context.getPartitionIds();\r\n  }\r\n\r\n  /**\r\n   * Provides a list of partitions the EPH is currently receiving messages from.\r\n   *\r\n   * The EPH will try to grab leases for more partitions during each scan that happens once every\r\n   * (configured) lease renew seconds. The number of EPH instances that are being run\r\n   * simultaneously to receive messages from the same consumer group within an event hub also\r\n   * influences the number of partitions that this instance of EPH is actively receiving messages\r\n   * from.\r\n   *\r\n   * @returns {Array<string>} Array<string> List of partitions that this EPH instance is currently\r\n   * receiving messages from.\r\n   */\r\n  get receivingFromPartitions(): string[] {\r\n    return Array.from(this._context.pumps.keys());\r\n  }\r\n\r\n  /**\r\n   * Starts the event processor host, fetching the list of partitions, and attempting to grab leases\r\n   * For each successful lease, it will get the details from the blob and start a receiver at the\r\n   * point where it left off previously.\r\n   *\r\n   * @return {Promise<void>}\r\n   */\r\n  async start(onMessage: OnReceivedMessage, onError: OnReceivedError): Promise<void> {\r\n    try {\r\n      await this._context.partitionManager.start(onMessage, onError);\r\n    } catch (err) {\r\n      log.error(this._context.withHost(\"An error occurred while starting the EPH: %O\"), err);\r\n      this._context.onEphError(err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stops the EventProcessorHost from processing messages.\r\n   * @return {Promise<void>}\r\n   */\r\n  async stop(): Promise<void> {\r\n    try {\r\n      await this._context.partitionManager.stop();\r\n    } catch (err) {\r\n      log.error(this._context.withHost(\"An error occurred while stopping the EPH: %O\"), err);\r\n      this._context.onEphError(err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convenience method for generating unique host name.\r\n   *\r\n   * @param {string} [prefix] String to use as the beginning of the name. Default value: \"js-host\".\r\n   * @return {string} A unique host name\r\n   */\r\n  static createHostName(prefix?: string): string {\r\n    if (!prefix) prefix = \"js-host\";\r\n    return `${prefix}-${uuid()}`;\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from the EventHub connection string.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} storageConnectionString Connection string to Azure Storage account used for\r\n   * leases and checkpointing. Example DefaultEndpointsProtocol=https;AccountName=<account-name>;\r\n   * AccountKey=<account-key>;EndpointSuffix=core.windows.net\r\n   * @param {string} storageContainerName Azure Storage container name for use by built-in lease\r\n   * and checkpoint manager.\r\n   * @param {string} eventHubConnectionString Connection string for the Event Hub to receive from.\r\n   * Example: 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;\r\n   * SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\r\n   * @param {FromConnectionStringOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static createFromConnectionString(\r\n    hostName: string,\r\n    storageConnectionString: string,\r\n    storageContainerName: string,\r\n    eventHubConnectionString: string,\r\n    options?: FromConnectionStringOptions): EventProcessorHost {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"storageConnectionString\", storageConnectionString, true, \"string\");\r\n    validateType(\"storageContainerName\", storageContainerName, true, \"string\");\r\n    validateType(\"eventHubConnectionString\", eventHubConnectionString, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      storageConnectionString: storageConnectionString,\r\n      storageContainerName: storageContainerName,\r\n      eventHubConnectionString: eventHubConnectionString\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from the EventHub connection string with the provided\r\n   * checkpoint manager and lease manager.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} eventHubConnectionString Connection string for the Event Hub to receive from.\r\n   * Example: 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;\r\n   * SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\r\n   * @param {CheckpointManager} checkpointManager A manager to manage checkpoints.\r\n   * @param {LeaseManager} leaseManager A manager to manage leases.\r\n   * @param {FromConnectionStringOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static createFromConnectionStringWithCustomCheckpointAndLeaseManager(\r\n    hostName: string,\r\n    eventHubConnectionString: string,\r\n    checkpointManager: CheckpointManager,\r\n    leaseManager: LeaseManager,\r\n    options?: FromConnectionStringOptions): EventProcessorHost {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"eventHubConnectionString\", eventHubConnectionString, true, \"string\");\r\n    validateType(\"checkpointManager\", checkpointManager, true, \"object\");\r\n    validateType(\"leaseManager\", leaseManager, true, \"object\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      eventHubConnectionString: eventHubConnectionString,\r\n      checkpointManager: checkpointManager,\r\n      leaseManager: leaseManager\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from a TokenProvider.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} storageConnectionString Connection string to Azure Storage account used for\r\n   * leases and checkpointing. Example DefaultEndpointsProtocol=https;AccountName=<account-name>;\r\n   * AccountKey=<account-key>;EndpointSuffix=core.windows.net\r\n   * @param {string} storageContainerName Azure Storage container name for use by built-in lease\r\n   * and checkpoint manager.\r\n   * @param {string} namespace Fully qualified domain name for Event Hubs.\r\n   * Example: \"{your-sb-namespace}.servicebus.windows.net\"\r\n   * @param {string} eventHubPath The name of the EventHub.\r\n   * @param {TokenProvider} tokenProvider - Your token provider that implements the TokenProvider interface.\r\n   * @param {FromTokenProviderOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static createFromTokenProvider(\r\n    hostName: string,\r\n    storageConnectionString: string,\r\n    storageContainerName: string,\r\n    namespace: string,\r\n    eventHubPath: string,\r\n    tokenProvider: TokenProvider,\r\n    options?: FromTokenProviderOptions): EventProcessorHost {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"storageConnectionString\", storageConnectionString, true, \"string\");\r\n    validateType(\"storageContainerName\", storageContainerName, true, \"string\");\r\n    validateType(\"namespace\", namespace, true, \"string\");\r\n    validateType(\"eventHubPath\", eventHubPath, true, \"string\");\r\n    validateType(\"tokenProvider\", tokenProvider, true, \"object\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    if (!namespace.endsWith(\"/\")) namespace += \"/\";\r\n    const connectionString = `Endpoint=sb://${namespace};SharedAccessKeyName=defaultKeyName;` +\r\n      `SharedAccessKey=defaultKeyValue;EntityPath=${eventHubPath}`;\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      tokenProvider: tokenProvider,\r\n      storageConnectionString: storageConnectionString,\r\n      storageContainerName: storageContainerName,\r\n      eventHubPath: eventHubPath,\r\n      eventHubConnectionString: connectionString\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from a TokenProvider with the provided checkpoint manager\r\n   * and lease manager.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} namespace Fully qualified domain name for Event Hubs.\r\n   * Example: \"{your-sb-namespace}.servicebus.windows.net\"\r\n   * @param {string} eventHubPath The name of the EventHub.\r\n   * @param {TokenProvider} tokenProvider - Your token provider that implements the TokenProvider interface.\r\n   * @param {CheckpointManager} checkpointManager A manager to manage checkpoints.\r\n   * @param {LeaseManager} leaseManager A manager to manage leases.\r\n   * @param {FromTokenProviderOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static createFromTokenProviderWithCustomCheckpointAndLeaseManager(\r\n    hostName: string,\r\n    namespace: string,\r\n    eventHubPath: string,\r\n    tokenProvider: TokenProvider,\r\n    checkpointManager: CheckpointManager,\r\n    leaseManager: LeaseManager,\r\n    options?: FromTokenProviderOptions): EventProcessorHost {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"namespace\", namespace, true, \"string\");\r\n    validateType(\"eventHubPath\", eventHubPath, true, \"string\");\r\n    validateType(\"tokenProvider\", tokenProvider, true, \"object\");\r\n    validateType(\"checkpointManager\", checkpointManager, true, \"object\");\r\n    validateType(\"leaseManager\", leaseManager, true, \"object\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    if (!namespace.endsWith(\"/\")) namespace += \"/\";\r\n    const connectionString = `Endpoint=sb://${namespace};SharedAccessKeyName=defaultKeyName;` +\r\n      `SharedAccessKey=defaultKeyValue;EntityPath=${eventHubPath}`;\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      tokenProvider: tokenProvider,\r\n      eventHubPath: eventHubPath,\r\n      eventHubConnectionString: connectionString,\r\n      checkpointManager: checkpointManager,\r\n      leaseManager: leaseManager\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from AAD token credentials.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} storageConnectionString Connection string to Azure Storage account used for\r\n   * leases and checkpointing. Example DefaultEndpointsProtocol=https;AccountName=<account-name>;\r\n   * AccountKey=<account-key>;EndpointSuffix=core.windows.net\r\n   * @param {string} storageContainerName Azure Storage container name for use by built-in lease\r\n   * and checkpoint manager.\r\n   * @param {string} namespace Fully qualified domain name for Event Hubs.\r\n   * Example: \"{your-sb-namespace}.servicebus.windows.net\"\r\n   * @param {string} eventHubPath The name of the EventHub.\r\n   * @param {TokenCredentials} credentials - The AAD Token credentials. It can be one of the\r\n   * following: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials\r\n   * | MSITokenCredentials.\r\n   * @param {FromTokenProviderOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static createFromAadTokenCredentials(\r\n    hostName: string,\r\n    storageConnectionString: string,\r\n    storageContainerName: string,\r\n    namespace: string,\r\n    eventHubPath: string,\r\n    credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials,\r\n    options?: FromTokenProviderOptions): EventProcessorHost {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"storageConnectionString\", storageConnectionString, true, \"string\");\r\n    validateType(\"storageContainerName\", storageContainerName, true, \"string\");\r\n    validateType(\"namespace\", namespace, true, \"string\");\r\n    validateType(\"eventHubPath\", eventHubPath, true, \"string\");\r\n    validateType(\"credentials\", credentials, true, \"object\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    if (!namespace.endsWith(\"/\")) namespace += \"/\";\r\n    const connectionString = `Endpoint=sb://${namespace};SharedAccessKeyName=defaultKeyName;` +\r\n      `SharedAccessKey=defaultKeyValue;EntityPath=${eventHubPath}`;\r\n\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      tokenProvider: new AadTokenProvider(credentials),\r\n      storageConnectionString: storageConnectionString,\r\n      storageContainerName: storageContainerName,\r\n      eventHubPath: eventHubPath,\r\n      eventHubConnectionString: connectionString\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from AAD token credentials with the given checkpoint manager\r\n   * and lease manager.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} namespace Fully qualified domain name for Event Hubs.\r\n   * Example: \"{your-sb-namespace}.servicebus.windows.net\"\r\n   * @param {string} eventHubPath The name of the EventHub.\r\n   * @param {TokenCredentials} credentials - The AAD Token credentials. It can be one of the\r\n   * following: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials\r\n   * | MSITokenCredentials.\r\n   * @param {CheckpointManager} checkpointManager A manager to manage checkpoints.\r\n   * @param {LeaseManager} leaseManager A manager to manage leases.\r\n   * @param {FromTokenProviderOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager(\r\n    hostName: string,\r\n    namespace: string,\r\n    eventHubPath: string,\r\n    credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials,\r\n    checkpointManager: CheckpointManager,\r\n    leaseManager: LeaseManager,\r\n    options?: FromTokenProviderOptions): EventProcessorHost {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"namespace\", namespace, true, \"string\");\r\n    validateType(\"eventHubPath\", eventHubPath, true, \"string\");\r\n    validateType(\"credentials\", credentials, true, \"object\");\r\n    validateType(\"checkpointManager\", checkpointManager, true, \"object\");\r\n    validateType(\"leaseManager\", leaseManager, true, \"object\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    if (!namespace.endsWith(\"/\")) namespace += \"/\";\r\n    const connectionString = `Endpoint=sb://${namespace};SharedAccessKeyName=defaultKeyName;` +\r\n      `SharedAccessKey=defaultKeyValue;EntityPath=${eventHubPath}`;\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      tokenProvider: new AadTokenProvider(credentials),\r\n      eventHubPath: eventHubPath,\r\n      eventHubConnectionString: connectionString,\r\n      checkpointManager: checkpointManager,\r\n      leaseManager: leaseManager\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from the IotHub connection string.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} storageConnectionString Connection string to Azure Storage account used for\r\n   * leases and checkpointing. Example DefaultEndpointsProtocol=https;AccountName=<account-name>;\r\n   * AccountKey=<account-key>;EndpointSuffix=core.windows.net\r\n   * @param {string} storageContainerName Azure Storage container name for use by built-in lease\r\n   * and checkpoint manager.\r\n   * @param {string} iotHubConnectionString Connection string for the IotHub.\r\n   * Example: 'Endpoint=iot-host-name;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\r\n   * @param {FromIotHubConnectionStringOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static async createFromIotHubConnectionString(\r\n    hostName: string,\r\n    storageConnectionString: string,\r\n    storageContainerName: string,\r\n    iotHubConnectionString: string,\r\n    options?: FromIotHubConnectionStringOptions): Promise<EventProcessorHost> {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"storageConnectionString\", storageConnectionString, true, \"string\");\r\n    validateType(\"storageContainerName\", storageContainerName, true, \"string\");\r\n    validateType(\"iotHubConnectionString\", iotHubConnectionString, true, \"string\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    const client = await EventHubClient.createFromIotHubConnectionString(iotHubConnectionString);\r\n    /* tslint:disable:no-string-literal */\r\n    const eventHubConnectionString = client[\"_context\"].config.connectionString;\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      storageConnectionString: storageConnectionString,\r\n      storageContainerName: storageContainerName,\r\n      eventHubConnectionString: eventHubConnectionString,\r\n      eventHubPath: client.eventhubName\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n\r\n  /**\r\n   * Creates an EventProcessorHost instance from the IotHub connection string with the given\r\n   * checkpoint manager and lease manager.\r\n   *\r\n   * @param {string} hostName Name of the processor host. MUST BE UNIQUE.\r\n   * Strongly recommend including a Guid or a prefix with a guid to ensure uniqueness. You can use\r\n   * `EventProcessorHost.createHostName(\"your-prefix\")`; Default: `js-host-${uuid()}`.\r\n   * @param {string} iotHubConnectionString Connection string for the IotHub.\r\n   * Example: 'Endpoint=iot-host-name;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\r\n   * @param {CheckpointManager} checkpointManager A manager to manage checkpoints.\r\n   * @param {LeaseManager} leaseManager A manager to manage leases.\r\n   * @param {FromIotHubConnectionStringOptions} [options] Optional parameters for creating an\r\n   * EventProcessorHost.\r\n   *\r\n   * @returns {EventProcessorHost} EventProcessorHost\r\n   */\r\n  static async createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager(\r\n    hostName: string,\r\n    iotHubConnectionString: string,\r\n    checkpointManager: CheckpointManager,\r\n    leaseManager: LeaseManager,\r\n    options?: FromIotHubConnectionStringOptions): Promise<EventProcessorHost> {\r\n    if (!options) options = {};\r\n\r\n    validateType(\"hostName\", hostName, true, \"string\");\r\n    validateType(\"iotHubConnectionString\", iotHubConnectionString, true, \"string\");\r\n    validateType(\"checkpointManager\", checkpointManager, true, \"object\");\r\n    validateType(\"leaseManager\", leaseManager, true, \"object\");\r\n    validateType(\"options\", options, false, \"object\");\r\n\r\n    const client = await EventHubClient.createFromIotHubConnectionString(iotHubConnectionString);\r\n    /* tslint:disable:no-string-literal */\r\n    const eventHubConnectionString = client[\"_context\"].config.connectionString;\r\n\r\n    const ephOptions: EventProcessorHostOptions = {\r\n      ...options,\r\n      eventHubConnectionString: eventHubConnectionString,\r\n      checkpointManager: checkpointManager,\r\n      leaseManager: leaseManager,\r\n      eventHubPath: client.eventhubName\r\n    };\r\n    return new EventProcessorHost(hostName, ephOptions);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport { EventProcessorHost } from \"./eventProcessorHost\";\r\nexport { PartitionContext } from \"./partitionContext\";\r\nexport { CheckpointInfo } from \"./checkpointInfo\";\r\nexport { CompleteLease, CompleteLeaseInfo } from \"./completeLease\";\r\nexport { BaseLease, BaseLeaseInfo } from \"./baseLease\";\r\nexport { LeaseManager } from \"./leaseManager\";\r\nexport { CheckpointManager } from \"./checkpointManager\";\r\nexport {\r\n  OnReceivedError, EPHDiagnosticInfo, EventProcessorHostOptions, FromConnectionStringOptions,\r\n  FromTokenProviderOptions, OnEphError, OnReceivedMessage\r\n} from \"./modelTypes\";\r\nexport {\r\n  delay, EventData, OnError, EventPosition, EventHubPartitionRuntimeInformation,\r\n  EventHubRuntimeInformation, MessagingError, DataTransformer, aadEventHubsAudience\r\n} from \"@azure/event-hubs\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nimport uuid from \"uuid/v4\";\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst should = chai.should();\r\nconst debug = debugModule(\"azure:eph:eph-spec\");\r\nimport { EventHubClient, EventData, EventPosition, delay, Dictionary } from \"@azure/event-hubs\";\r\nimport dotenv from \"dotenv\";\r\nimport { PartitionContext, OnReceivedMessage, EventProcessorHost, OnReceivedError } from \"../lib\";\r\ndotenv.config();\r\n\r\ndescribe(\"EPH\", function (): void {\r\n  before(\"validate environment\", function (): void {\r\n    should.exist(process.env.STORAGE_CONNECTION_STRING,\r\n      \"define STORAGE_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n      \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_NAME,\r\n      \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n  });\r\n  const ehConnString = process.env.EVENTHUB_CONNECTION_STRING;\r\n  const storageConnString = process.env.STORAGE_CONNECTION_STRING;\r\n  const hubName = process.env.EVENTHUB_NAME;\r\n  let host: EventProcessorHost;\r\n\r\n  describe(\"user-agent\", function (): void {\r\n\r\n    it(\"should be populated correctly as a part of the connection property\", function (done: Mocha.Done): void {\r\n      host = EventProcessorHost.createFromConnectionString(\r\n        EventProcessorHost.createHostName(),\r\n        storageConnString!,\r\n        \"test-container\",\r\n        ehConnString!,\r\n        {\r\n          eventHubPath: hubName!\r\n        }\r\n      );\r\n      const context = host[\"_context\"];\r\n      const ua = \"/js-event-processor-host=1.0.5\";\r\n      context.userAgent.should.equal(ua);\r\n      const ehc: EventHubClient = context.getEventHubClient();\r\n      const properties = ehc[\"_context\"].connection.options.properties;\r\n      should.equal(properties[\"user-agent\"], `/js-event-hubs,${ua}`);\r\n      should.equal(properties.product, \"MSJSClient\");\r\n      done();\r\n    });\r\n\r\n    it(\"should support appending custom user-agent\", function (done: Mocha.Done): void {\r\n      const customua = \"my-custom-string\";\r\n      host = EventProcessorHost.createFromConnectionString(\r\n        EventProcessorHost.createHostName(),\r\n        storageConnString!,\r\n        \"test-container\",\r\n        ehConnString!,\r\n        {\r\n          eventHubPath: hubName!,\r\n          userAgent: customua\r\n        }\r\n      );\r\n      const context = host[\"_context\"];\r\n      const ua = \"/js-event-processor-host=1.0.5\";\r\n      context.userAgent.should.equal(`${ua},${customua}`);\r\n      const ehc: EventHubClient = context.getEventHubClient();\r\n      const properties = ehc[\"_context\"].connection.options.properties;\r\n      should.equal(properties[\"user-agent\"], `/js-event-hubs,${ua},${customua}`);\r\n      should.equal(properties.product, \"MSJSClient\");\r\n      done();\r\n    });\r\n  });\r\n\r\n  describe(\"single\", function (): void {\r\n    it(\"should checkpoint messages in order\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        const messageCount = 100;\r\n        const datas: EventData[] = [];\r\n        for (let i = 0; i < messageCount; i++) {\r\n          const obj: EventData = { body: `Hello foo ${i}` };\r\n          datas.push(obj);\r\n        }\r\n        const ehc = EventHubClient.createFromConnectionString(ehConnString!, hubName!);\r\n        await ehc.sendBatch(datas, \"0\");\r\n        await ehc.close();\r\n        debug(\"Sent batch message successfully\");\r\n        let num = 0;\r\n        let offset = \"0\";\r\n        let sequence = 0;\r\n        let doneCheckpointing = false;\r\n        const onMessage = async (context: PartitionContext, data: EventData) => {\r\n          ++num;\r\n          debug(\"num: %d\", num);\r\n          if (num % 10 === 0) {\r\n            const cpointNum = num;\r\n            try {\r\n              await context.checkpoint();\r\n              debug(\"Done checkpointing: %d\", cpointNum);\r\n              if (num === 100) {\r\n                offset = data.offset as string;\r\n                sequence = data.sequenceNumber as number;\r\n                doneCheckpointing = true;\r\n              }\r\n            } catch (err) {\r\n              debug(\">>>>>>> An error occurred while checkpointing msg number %d: %O\", num, err);\r\n            }\r\n          }\r\n        };\r\n        const onError: OnReceivedError = (err) => {\r\n          debug(\"An error occurred while receiving the message: %O\", err);\r\n          throw err;\r\n        };\r\n        await host.start(onMessage, onError);\r\n        while (!doneCheckpointing) {\r\n          debug(\"Not done checkpointing -> %s, sleeping for 10 more seconds.\", doneCheckpointing);\r\n          await delay(10000);\r\n        }\r\n        debug(\"sleeping for 10 more seconds..\");\r\n        await delay(10000);\r\n        const stringContent = await host[\"_context\"].blobReferenceByPartition[\"0\"].getContent();\r\n        const content = JSON.parse(stringContent);\r\n        debug(\"Fetched content from blob is: %o\", content);\r\n        content.offset.should.equal(offset);\r\n        content.sequenceNumber.should.equal(sequence);\r\n        await host.stop();\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"should checkpoint a single received event.\", function (done: Mocha.Done): void {\r\n      const msgId = uuid();\r\n      const ehc = EventHubClient.createFromConnectionString(ehConnString!, hubName!);\r\n      ehc.getPartitionIds().then((ids) => {\r\n        debug(\">>> Received partition ids: \", ids);\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        debug(\">>>>> Sending the test message...\");\r\n        ehc.send({ body: \"Test Message\", properties: { message_id: msgId } }).then(() => {\r\n          const onMessage: OnReceivedMessage = (context: PartitionContext, data: EventData) => {\r\n            debug(\">>>>> Rx message from '%s': '%s'\", context.partitionId, data);\r\n            if (data.properties!.message_id === msgId) {\r\n              debug(\">>>> Checkpointing the received message...\");\r\n              context.checkpoint().then(() => {\r\n                debug(\">>>> Checkpoint succesful...\");\r\n                return context[\"_context\"].blobReferenceByPartition[context.partitionId].getContent();\r\n              }).then((content) => {\r\n                debug(\">>>> Seen expected message. New lease contents: %s\", content);\r\n                const parsed = JSON.parse(content);\r\n                parsed.offset.should.eql(data.offset);\r\n              }).then(() => {\r\n                return ehc.close();\r\n              }).then(() => {\r\n                return host.stop();\r\n              }).then(() => {\r\n                debug(\">>>> closed the sender and the eph...\");\r\n                return done();\r\n              }).catch((err) => {\r\n                done(err);\r\n              });\r\n            }\r\n          };\r\n          const onError: OnReceivedError = (err) => {\r\n            debug(\"An error occurred while receiving the message: %O\", err);\r\n            done(err);\r\n          };\r\n          return host.start(onMessage, onError);\r\n        }).catch((err) => {\r\n          done(err);\r\n        });\r\n      }).catch((err) => {\r\n        done(err);\r\n      });\r\n    });\r\n\r\n    it(\"should be able to receive messages from the checkpointed offset.\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        const msgId = uuid();\r\n        const ehc = EventHubClient.createFromConnectionString(ehConnString!, hubName!);\r\n        const leasecontainerName = EventProcessorHost.createHostName(\"tc\");\r\n        debug(\">>>>> Lease container name: %s\", leasecontainerName);\r\n        async function sendAcrossAllPartitions(ehc: EventHubClient, ids: string[]): Promise<Dictionary<EventData>> {\r\n          const result: Promise<any>[] = [];\r\n          const idMessage: Dictionary<EventData> = {};\r\n          for (const id of ids) {\r\n            const data = { body: \"Test Message - \" + id, properties: { message_id: msgId } };\r\n            idMessage[id] = data;\r\n            result.push(ehc.send(data, id));\r\n          }\r\n          await Promise.all(result);\r\n          debug(\">>>> Successfully finished sending messages.. %O\", idMessage);\r\n          return idMessage;\r\n        }\r\n\r\n        const ids = await ehc.getPartitionIds();\r\n        debug(\">>> Received partition ids: \", ids);\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          \"my-eph-1\",\r\n          storageConnString!,\r\n          leasecontainerName,\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now()),\r\n            startupScanDelay: 15,\r\n            leaseRenewInterval: 5,\r\n            leaseDuration: 15\r\n          }\r\n        );\r\n        await delay(1000);\r\n        debug(\">>>>> Sending the first set of test messages...\");\r\n        const firstSend = await sendAcrossAllPartitions(ehc, ids);\r\n        let count = 0;\r\n        const onMessage: OnReceivedMessage = async (context: PartitionContext, data: EventData) => {\r\n          const partitionId = context.partitionId;\r\n          debug(\">>>>> Rx message from '%s': '%o'\", partitionId, data);\r\n          if (data.properties!.message_id === firstSend[partitionId].properties!.message_id) {\r\n            debug(\">>>> Checkpointing the received message...\");\r\n            await context.checkpoint();\r\n            count++;\r\n          } else {\r\n            const msg = `Sent message id '${data.properties!.message_id}' did not match the ` +\r\n              `received message id '${firstSend[partitionId].properties!.message_id}' for ` +\r\n              `partitionId '${partitionId}'.`;\r\n            throw new Error(msg);\r\n          }\r\n        };\r\n        const onError: OnReceivedError = (err) => {\r\n          debug(\"An error occurred while receiving the message: %O\", err);\r\n          throw err;\r\n        };\r\n        debug(\">>>> Starting my-eph-1\");\r\n        await host.start(onMessage, onError);\r\n        while (count < ids.length) {\r\n          await delay(10000);\r\n          debug(\">>>> number of partitionIds: %d, count: %d\", ids.length, count);\r\n        }\r\n        await host.stop();\r\n\r\n        debug(\">>>> Restarting the same host. This time the initial offset should be ignored, and \" +\r\n          \"the EventPosition should be from the checkpointed offset..\");\r\n        debug(\">>>>> Sending the second set of test messages...\");\r\n        const secondSend = await sendAcrossAllPartitions(ehc, ids);\r\n        let count2 = 0;\r\n        const onMessage2: OnReceivedMessage = async (context: PartitionContext, data: EventData) => {\r\n          const partitionId = context.partitionId;\r\n          debug(\">>>>> Rx message from '%s': '%s'\", partitionId, data);\r\n          if (data.properties!.message_id === secondSend[partitionId].properties!.message_id) {\r\n            debug(\">>>> Checkpointing the received message...\");\r\n            await context.checkpoint();\r\n            count2++;\r\n          } else {\r\n            const msg = `Sent message id '${data.properties!.message_id}' did not match the ` +\r\n              `received message id '${secondSend[partitionId].properties!.message_id}' for ` +\r\n              `partitionId '${partitionId}'.`;\r\n            throw new Error(msg);\r\n          }\r\n        };\r\n        const onError2: OnReceivedError = (err) => {\r\n          debug(\"An error occurred while receiving the message: %O\", err);\r\n          throw err;\r\n        };\r\n        debug(\">>>> Starting my-eph-2\");\r\n        await host.start(onMessage2, onError2);\r\n        while (count2 < ids.length) {\r\n          await delay(10000);\r\n          debug(\">>>> number of partitionIds: %d, count: %d\", ids.length, count);\r\n        }\r\n        debug(\">>>>>> sleeping for 10 more seconds....\");\r\n        await delay(10000);\r\n        await host.stop();\r\n        await ehc.close();\r\n        if (count2 > ids.length) {\r\n          throw new Error(\"We received more messages than we were expecting...\");\r\n        }\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n  });\r\n\r\n  describe(\"multiple\", function (): void {\r\n    it(\"should be able to run multiple eph successfully.\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        const ehc = EventHubClient.createFromConnectionString(ehConnString!, hubName!);\r\n        const containerName: string = `sharedhost-${uuid()}`;\r\n        const now = Date.now();\r\n        const hostByName: Dictionary<EventProcessorHost> = {};\r\n        const sendDataByPartition: Dictionary<EventData> = {};\r\n        const getReceivingFromPartitionsForAllEph = (): Dictionary<string[]> => {\r\n          const receivingPartitionsByHost: Dictionary<string[]> = {};\r\n          for (const hostName in hostByName) {\r\n            receivingPartitionsByHost[hostName] = hostByName[hostName].receivingFromPartitions;\r\n          }\r\n          debug(\">>> EPH -> Partitions: \\n%O\", receivingPartitionsByHost);\r\n          return receivingPartitionsByHost;\r\n        };\r\n\r\n        const sendEvents = async (ids: string[]) => {\r\n          for (let i = 0; i < ids.length; i++) {\r\n            const data: EventData = {\r\n              body: `Hello World - ${ids[i]}!!`\r\n            };\r\n            sendDataByPartition[ids[i]] = data;\r\n            await ehc.send(data, ids[i]);\r\n            debug(\">>> Sent data to partition: %s\", ids[i]);\r\n          }\r\n        };\r\n\r\n        const ids = await ehc.getPartitionIds();\r\n        for (let i = 0; i < ids.length; i++) {\r\n          const hostName = `host-${i}`;\r\n          hostByName[hostName] = EventProcessorHost.createFromConnectionString(\r\n            hostName,\r\n            storageConnString!,\r\n            containerName,\r\n            ehConnString!,\r\n            {\r\n              eventHubPath: hubName!,\r\n              initialOffset: EventPosition.fromEnqueuedTime(now),\r\n            }\r\n          );\r\n\r\n          const onError: OnReceivedError = (error: Error) => {\r\n            debug(`>>> [%s] Received error: %O`, hostName, error);\r\n            throw error;\r\n          };\r\n          const onMessage: OnReceivedMessage = (context: PartitionContext, data: EventData) => {\r\n            debug(\">>> [%s] Rx message from '%s': '%O'\", hostName, context.partitionId, data);\r\n            should.equal(sendDataByPartition[context.partitionId].body, data.body);\r\n          };\r\n          await hostByName[hostName].start(onMessage, onError);\r\n          debug(\">>> Sleeping for 8 seconds after starting %s.\", hostName);\r\n          await delay(8000);\r\n          debug(\">>> [%s] currently receiving messages from partitions : %o\", hostName,\r\n            hostByName[hostName].receivingFromPartitions);\r\n        }\r\n        debug(\">>> Sleeping for another 15 seconds.\");\r\n        await delay(15000);\r\n        const hostToPartition = getReceivingFromPartitionsForAllEph();\r\n        for (const host in hostToPartition) {\r\n          should.equal(Array.isArray(hostToPartition[host]), true);\r\n          hostToPartition[host].length.should.eql(1);\r\n        }\r\n        await sendEvents(ids);\r\n        await delay(5000);\r\n        await ehc.close();\r\n        for (const host in hostByName) {\r\n          await hostByName[host].stop();\r\n        }\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n  });\r\n\r\n  describe(\"runtimeInfo\", function (): void {\r\n    it(\"should get hub runtime info correctly\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        const hubRuntimeInfo = await host.getHubRuntimeInformation();\r\n        should.equal(Array.isArray(hubRuntimeInfo.partitionIds), true);\r\n        should.equal(typeof hubRuntimeInfo.partitionCount, \"number\");\r\n        await host.stop();\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"should get partition runtime info correctly with partitionId as string\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        const partitionInfo = await host.getPartitionInformation(\"0\");\r\n        debug(\">>> partitionInfo: %o\", partitionInfo);\r\n        partitionInfo.partitionId.should.equal(\"0\");\r\n        partitionInfo.type.should.equal(\"com.microsoft:partition\");\r\n        partitionInfo.hubPath.should.equal(hubName);\r\n        partitionInfo.lastEnqueuedTimeUtc.should.be.instanceof(Date);\r\n        should.exist(partitionInfo.lastSequenceNumber);\r\n        should.exist(partitionInfo.lastEnqueuedOffset);\r\n        await host.stop();\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"should get partition runtime info correctly with partitionId as number\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        const partitionInfo = await host.getPartitionInformation(0);\r\n        partitionInfo.partitionId.should.equal(\"0\");\r\n        partitionInfo.type.should.equal(\"com.microsoft:partition\");\r\n        partitionInfo.hubPath.should.equal(hubName);\r\n        partitionInfo.lastEnqueuedTimeUtc.should.be.instanceof(Date);\r\n        should.exist(partitionInfo.lastSequenceNumber);\r\n        should.exist(partitionInfo.lastEnqueuedOffset);\r\n        await host.stop();\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"should fail getting partition information when partitionId is not a string or number\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        try {\r\n          await host.getPartitionInformation(false as any);\r\n        } catch (err) {\r\n          err.message.should.equal(\"'partitionId' is a required parameter and must be of type: 'string' | 'number'.\");\r\n        }\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"should fail getting partition information when partitionId is empty string\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        try {\r\n          await host.getPartitionInformation(\"\");\r\n        } catch (err) {\r\n          err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n        } finally {\r\n          await host.stop();\r\n        }\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"should fail getting partition information when partitionId is a negative number\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehConnString!,\r\n          {\r\n            eventHubPath: hubName!,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        try {\r\n          await host.getPartitionInformation(-1);\r\n        } catch (err) {\r\n          err.message.should.match(/.*The specified partition is invalid for an EventHub partition sender or receiver.*/ig);\r\n        } finally {\r\n          await host.stop();\r\n        }\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n  });\r\n\r\n  describe(\"options\", function (): void {\r\n    it(\"should throw an error if the event hub name is neither provided in the connection string and nor in the options object\", function (done: Mocha.Done): void {\r\n      try {\r\n        const ehc = \"Endpoint=sb://foo.bar.baz.net/;SharedAccessKeyName=somekey;SharedAccessKey=somesecret\";\r\n        EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          ehc,\r\n          {\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n      } catch (err) {\r\n        should.exist(err);\r\n        err.message.match(/.*Either provide \"path\" or the \"connectionString\": \"Endpoint=sb:\\/\\/foo\\.bar\\.baz\\.net\\/;SharedAccessKeyName=somekey;SharedAccessKey=somesecret\", must contain EntityPath=\"<path-to-the-entity>.*\"/ig);\r\n        done();\r\n      }\r\n    });\r\n\r\n    it(\"should get hub runtime info correctly when eventhub name is present in connection string but not as an option in the options object.\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          `${ehConnString!};EntityPath=${hubName!}`,\r\n          {\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        const hubRuntimeInfo = await host.getHubRuntimeInformation();\r\n        hubRuntimeInfo.path.should.equal(hubName);\r\n        should.equal(Array.isArray(hubRuntimeInfo.partitionIds), true);\r\n        should.equal(typeof hubRuntimeInfo.partitionCount, \"number\");\r\n        await host.stop();\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n\r\n    it(\"when eventhub name is present in connection string and in the options object, the one in options object is selected.\", function (done: Mocha.Done): void {\r\n      const test = async () => {\r\n        host = EventProcessorHost.createFromConnectionString(\r\n          EventProcessorHost.createHostName(),\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"single\"),\r\n          `${ehConnString!};EntityPath=foo`,\r\n          {\r\n            eventHubPath: hubName,\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n          }\r\n        );\r\n        const hubRuntimeInfo = await host.getHubRuntimeInformation();\r\n        hubRuntimeInfo.path.should.equal(hubName);\r\n        should.equal(Array.isArray(hubRuntimeInfo.partitionIds), true);\r\n        should.equal(typeof hubRuntimeInfo.partitionCount, \"number\");\r\n        await host.stop();\r\n      };\r\n      test().then(() => { done(); }).catch((err) => { done(err); });\r\n    });\r\n  });\r\n}).timeout(1200000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport dotenv from \"dotenv\";\r\nimport chai from \"chai\";\r\nconst should = chai.should();\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst debug = debugModule(\"azure:eph:iothub-spec\");\r\nimport {\r\n  EventPosition, OnReceivedError, PartitionContext, EventData, OnReceivedMessage, EventProcessorHost\r\n} from \"../lib\";\r\nimport { delay } from \"@azure/event-hubs\";\r\ndotenv.config();\r\n\r\ndescribe(\"EPH with iothub connection string\", function (): void {\r\n  const iothubConnString = process.env.IOTHUB_CONNECTION_STRING;\r\n  const storageConnString = process.env.STORAGE_CONNECTION_STRING;\r\n  const hostName = EventProcessorHost.createHostName();\r\n  let host: EventProcessorHost;\r\n  before(\"validate environment\", async function (): Promise<void> {\r\n    should.exist(process.env.IOTHUB_CONNECTION_STRING,\r\n      \"define IOTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n  });\r\n\r\n  it(\"should be able to receive messages from the event hub associated with an iothub.\", function (done: Mocha.Done): void {\r\n    const test = async () => {\r\n      try {\r\n        host = await EventProcessorHost.createFromIotHubConnectionString(\r\n          hostName,\r\n          storageConnString!,\r\n          EventProcessorHost.createHostName(\"iot\"),\r\n          iothubConnString!,\r\n          {\r\n            initialOffset: EventPosition.fromEnqueuedTime(Date.now()),\r\n            leaseDuration: 20,\r\n            leaseRenewInterval: 10\r\n          }\r\n        );\r\n        const onMessage: OnReceivedMessage = (context: PartitionContext, data: EventData) => {\r\n          debug(\">>> [%s] Rx message from '%s': '%O'\", hostName, context.partitionId, data);\r\n        };\r\n        const onError: OnReceivedError = (err) => {\r\n          debug(\"An error occurred while receiving the message: %O\", err);\r\n          throw err;\r\n        };\r\n        const runtimeInfo = await host.getHubRuntimeInformation();\r\n        debug(\">>>> runtimeInfo: %O\", runtimeInfo);\r\n        // tslint:disable-next-line: no-unused-expression\r\n        runtimeInfo.createdAt.should.exist;\r\n        (typeof runtimeInfo.partitionCount).should.equal(\"number\");\r\n        await host.start(onMessage, onError);\r\n        await delay(15000);\r\n        await host.stop();\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    test().then(() => { done(); }).catch((err) => { done(err); });\r\n  });\r\n}).timeout(60000);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst should = chai.should();\r\nconst debug = debugModule(\"azure:eph:negative-spec\");\r\nimport dotenv from \"dotenv\";\r\nimport {\r\n  EventPosition, OnReceivedError, PartitionContext, EventData, OnReceivedMessage, EventProcessorHost\r\n} from \"../lib\";\r\ndotenv.config();\r\n\r\ndescribe(\"negative\", function (): void {\r\n  before(\"validate environment\", function (): void {\r\n    should.exist(process.env.STORAGE_CONNECTION_STRING,\r\n      \"define STORAGE_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_CONNECTION_STRING,\r\n      \"define EVENTHUB_CONNECTION_STRING in your environment before running integration tests.\");\r\n    should.exist(process.env.EVENTHUB_NAME,\r\n      \"define EVENTHUB_NAME in your environment before running integration tests.\");\r\n  });\r\n  const ehConnString = process.env.EVENTHUB_CONNECTION_STRING;\r\n  const storageConnString = process.env.STORAGE_CONNECTION_STRING;\r\n  const hubName = process.env.EVENTHUB_NAME;\r\n  const hostName = EventProcessorHost.createHostName();\r\n  let host: EventProcessorHost;\r\n  it(\"should fail when trying to start an EPH that is already started.\", function (done: Mocha.Done): void {\r\n    const test = async () => {\r\n      host = EventProcessorHost.createFromConnectionString(\r\n        hostName,\r\n        storageConnString!,\r\n        EventProcessorHost.createHostName(\"tc\"),\r\n        ehConnString!,\r\n        {\r\n          eventHubPath: hubName!,\r\n          initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n        }\r\n      );\r\n      const onMessage: OnReceivedMessage = (context: PartitionContext, data: EventData) => {\r\n        debug(\">>> [%s] Rx message from '%s': '%O'\", hostName, context.partitionId, data);\r\n      };\r\n      const onError: OnReceivedError = (err) => {\r\n        debug(\"An error occurred while receiving the message: %O\", err);\r\n        throw err;\r\n      };\r\n      await host.start(onMessage, onError);\r\n      try {\r\n        debug(\">>> [%s] Trying to start second time.\", hostName);\r\n        await host.start(onMessage, onError);\r\n        throw new Error(\"The second call to start() should have failed.\");\r\n      } catch (err) {\r\n        err.message.should.match(/A partition manager cannot be started multiple times/ig);\r\n      } finally {\r\n        await host.stop();\r\n        should.equal(host[\"_context\"][\"partitionManager\"][\"_isCancelRequested\"], true);\r\n      }\r\n    };\r\n    test().then(() => { done(); }).catch((err) => { done(err); });\r\n  });\r\n\r\n  it(\"should fail when the eventhub name is incorrect.\", function (done: Mocha.Done): void {\r\n    host = EventProcessorHost.createFromConnectionString(\r\n      hostName,\r\n      storageConnString!,\r\n      EventProcessorHost.createHostName(\"tc\"),\r\n      ehConnString!,\r\n      {\r\n        eventHubPath: \"HeloooooooFooooooo\",\r\n        initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n      }\r\n    );\r\n    const onMessage: OnReceivedMessage = (context: PartitionContext, data: EventData) => {\r\n      debug(\">>> [%s] Rx message from '%s': '%O'\", hostName, context.partitionId, data);\r\n    };\r\n    const onError: OnReceivedError = (err) => {\r\n      debug(\"An error occurred while receiving the message: %O\", err);\r\n      throw err;\r\n    };\r\n    host.start(onMessage, onError).then(() => {\r\n      return Promise.reject(new Error(\"This statement should not have executed.\"));\r\n    }).catch((err) => {\r\n      debug(\">>>>>>> %s\", err.action);\r\n      err.action.should.equal(\"Getting PartitionIds\");\r\n      done();\r\n    });\r\n  });\r\n\r\n  it(\"should fail when the eventhub namesapce is incorrect.\", function (done: Mocha.Done): void {\r\n    host = EventProcessorHost.createFromConnectionString(\r\n      hostName,\r\n      storageConnString!,\r\n      EventProcessorHost.createHostName(\"tc\"),\r\n      \"Endpoint=sb://HelooFooo.servicebus.windows.net/;SharedAccessKeyName=Foo;SharedAccessKey=Bar\",\r\n      {\r\n        eventHubPath: hubName!,\r\n        initialOffset: EventPosition.fromEnqueuedTime(Date.now())\r\n      }\r\n    );\r\n    const onMessage: OnReceivedMessage = (context: PartitionContext, data: EventData) => {\r\n      debug(\">>> [%s] Rx message from '%s': '%O'\", hostName, context.partitionId, data);\r\n    };\r\n    const onError: OnReceivedError = (err) => {\r\n      debug(\"An error occurred while receiving the message: %O\", err);\r\n      throw err;\r\n    };\r\n    host.start(onMessage, onError).then(() => {\r\n      return Promise.reject(new Error(\"This statement should not have executed.\"));\r\n    }).catch((err) => {\r\n      debug(\">>>>>>> %s\", err.action);\r\n      err.action.should.equal(\"Getting PartitionIds\");\r\n      done();\r\n    });\r\n  });\r\n\r\n  it(\"should fail when the storage connection string is incorrect.\", function (done: Mocha.Done): void {\r\n    try {\r\n      host = EventProcessorHost.createFromConnectionString(\r\n        hostName,\r\n        \"Hello World\"!,\r\n        EventProcessorHost.createHostName(\"tc\"),\r\n        ehConnString!,\r\n        {\r\n          eventHubPath: hubName!,\r\n          initialOffset: EventPosition.fromEnqueuedTime(Date.now()),\r\n          consumerGroup: \"HelloWorld\"\r\n        }\r\n      );\r\n      done(new Error(\"creating eph should have failed.\"));\r\n    } catch (err) {\r\n      should.exist(err);\r\n      err.message.should.match(/Connection strings must be of the form/ig);\r\n      done();\r\n    }\r\n  });\r\n});\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport chai from \"chai\";\r\nimport { retry, RetryConfig } from \"../lib/util/utils\";\r\nimport chaiAsPromised from \"chai-as-promised\";\r\nimport { delay } from \"@azure/event-hubs\";\r\nchai.use(chaiAsPromised);\r\nimport debugModule from \"debug\";\r\nconst should = chai.should();\r\nconst debug = debugModule(\"azure:eph:retry-spec\");\r\n\r\ndescribe(\"retry function\", function (): void {\r\n  it(\"should succeed if the operation succeeds.\", function (done: Mocha.Done): void {\r\n    const test = async () => {\r\n      let counter = 0;\r\n      try {\r\n        const config: RetryConfig<any> = {\r\n          operation: async () => {\r\n            debug(\"counter: %d\", ++counter);\r\n            await delay(200);\r\n            return {\r\n              code: 200,\r\n              description: \"OK\"\r\n            };\r\n          },\r\n          hostName: \"eph-1\",\r\n          action: \"Succeed\",\r\n          maxRetries: 5,\r\n          retryMessage: \"Retry\",\r\n          finalFailureMessage: \"Out of retry attempts, still failing!!\"\r\n        };\r\n        const result = await retry(config);\r\n        result.code.should.equal(200);\r\n        result.description.should.equal(\"OK\");\r\n        counter.should.equal(1);\r\n      } catch (err) {\r\n        debug(\"An error occurred in a test that should have succeeded: %O\", err);\r\n        throw err;\r\n      }\r\n    };\r\n    test().then(() => { done(); }).catch((err) => { done(err); });\r\n  });\r\n\r\n  it(\"should succeed if the operation initially fails and then succeeds.\", function (done: Mocha.Done): void {\r\n    const test = async () => {\r\n      let counter = 0;\r\n      try {\r\n        const config: RetryConfig<any> = {\r\n          operation: async () => {\r\n            await delay(200);\r\n            debug(\"counter: %d\", ++counter);\r\n            if (counter === 1) {\r\n              throw new Error(\"The server is busy right now. Retry later.\");\r\n            } else {\r\n              return [\"0\", \"1\"];\r\n            }\r\n          },\r\n          hostName: \"eph-1\",\r\n          action: \"Initially fail then suceed\",\r\n          maxRetries: 5,\r\n          retryMessage: \"Retry\",\r\n          finalFailureMessage: \"Out of retry attempts, still failing!!\"\r\n        };\r\n        const result = await retry(config);\r\n        should.equal(Array.isArray(result), true);\r\n        result.toString().should.equal(\"0,1\");\r\n        counter.should.equal(2);\r\n      } catch (err) {\r\n        debug(\"An error occurred in a test that should have succeeded: %O\", err);\r\n        throw err;\r\n      }\r\n    };\r\n    test().then(() => { done(); }).catch((err) => { done(err); });\r\n  });\r\n\r\n  it(\"should succeed in the last attempt.\", function (done: Mocha.Done): void {\r\n    const test = async () => {\r\n      let counter = 0;\r\n      try {\r\n        const config: RetryConfig<any> = {\r\n          operation: async () => {\r\n            await delay(200);\r\n            debug(\"counter: %d\", ++counter);\r\n            if (counter === 1) {\r\n              const e = new Error(\"Error in attempt 1.\");\r\n              throw e;\r\n            } else if (counter === 2) {\r\n              const e = new Error(\"Error in attempt 2.\");\r\n              throw e;\r\n            } else {\r\n              return {\r\n                code: 200,\r\n                description: \"OK\"\r\n              };\r\n            }\r\n          },\r\n          hostName: \"eph-1\",\r\n          action: \"Success in last attempt\",\r\n          maxRetries: 3,\r\n          retryMessage: \"Retry\",\r\n          finalFailureMessage: \"Out of retry attempts, still failing!!\"\r\n        };\r\n        const result = await retry(config);\r\n        result.code.should.equal(200);\r\n        result.description.should.equal(\"OK\");\r\n        counter.should.equal(3);\r\n      } catch (err) {\r\n        debug(\"An error occurred in a test that should have succeeded: %O\", err);\r\n        throw err;\r\n      }\r\n    };\r\n    test().then(() => { done(); }).catch((err) => { done(err); });\r\n  });\r\n\r\n  it(\"should fail if all attempts return an error\", function (done: Mocha.Done): void {\r\n    const test = async () => {\r\n      let counter = 0;\r\n      try {\r\n        const config: RetryConfig<any> = {\r\n          operation: async () => {\r\n            debug(\"counter: %d\", ++counter);\r\n            await delay(200);\r\n            const e = new Error(\"I would always like to fail, keep retrying.\");\r\n            throw e;\r\n          },\r\n          hostName: \"eph-1\",\r\n          action: \"Fail after 5 attempts\",\r\n          maxRetries: 5,\r\n          retryMessage: \"Retry\",\r\n          partitionId: \"1\",\r\n          finalFailureMessage: \"Out of retry attempts, still failing!!\"\r\n        };\r\n        await retry(config);\r\n      } catch (err) {\r\n        counter.should.equal(5);\r\n        should.exist(err);\r\n        err.action.should.equal(\"Fail after 5 attempts\");\r\n        err.hostName.should.equal(\"eph-1\");\r\n        err.partitionId.should.equal(\"1\");\r\n        should.exist(err.error);\r\n        err.error.message.should.match(/Out of retry attempts, still failing!! while performing the action \"Fail after 5 attempts\" due to Error\\: I would always like to fail, keep retrying.*/ig);\r\n      }\r\n    };\r\n    test().then(() => { done(); }).catch((err) => { done(err); });\r\n  });\r\n});\r\n"],"names":["path","this","global","type","AssertionError","getName","inspect","functionNameMatch","getMessage","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","util","core","bytesToUuid","checkError","config","log.util","log.error","checkpoint","log.checkpoint","EventPosition","log.partitionContext","log.partitionPump","error","partitionContext","ErrorNameConditionMapper","log.pumpManager","log.partitionManager","log.partitionScanner","leaseManager","delay","createBlobService","log.blobService","log.completeLease","log.azurebloblease","blobService","log.checkpointLeaseMgr","uuid","EventHubConnectionConfig","DefaultDataTransformer","EventHubClient","AadTokenProvider","chai","should","dotenv","debug"],"mappings":"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"}